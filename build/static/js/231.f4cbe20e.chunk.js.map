{"version":3,"sources":["views/apps/premium/EditPaidServices.js"],"names":["EditCash","props","onEditorStateChange","editorState","console","log","setState","desc","draftToHtml","convertToRaw","getCurrentContent","changeHandler","e","target","name","value","submitHandler","preventDefault","id","match","params","axiosConfig","post","state","then","response","swal","catch","error","EditorState","createEmpty","this","get","data","sm","listTag","href","tag","active","className","col-sm-6","render","history","onClick","push","onSubmit","lg","md","toolbarClassName","wrapperClassName","editorClassName","toolbar","options","inline","bold","italic","underline","strikethrough","code","blockType","fontSize","fontFamily","Ripple","color","type","Component"],"mappings":"gaAoBqBA,G,gEACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAoBRC,oBAAsB,SAACC,GACrBC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CACZH,cACAI,KAAMC,IAAYC,uBAAaN,EAAYO,yBAzB5B,EA4BnBC,cAAgB,SAACC,GACf,EAAKN,SAAL,eAAiBM,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,SA7BzB,EAgCnBC,cAAgB,SAACJ,GACfA,EAAEK,iBACF,IAAMC,EAAO,EAAKjB,MAAMkB,MAAMC,OAAxBF,GACNG,IACGC,KADH,4BAC6BJ,GAAM,EAAKK,OACrCC,MAAK,SAACC,GACLC,IAAK,WAAY,yBAA0B,cAG5CC,OAAM,SAACC,GACNxB,QAAQC,IAAIuB,OAxChB,EAAKL,MAAQ,CACXpB,YAAa0B,cAAYC,cACzBvB,KAAM,IAJS,E,qDAQnB,WAAqB,IAAD,OACZW,EAAOa,KAAK9B,MAAMkB,MAAMC,OAAxBF,GACNG,IACGW,IADH,gCACgCd,IAC7BM,MAAK,SAACC,GACL,EAAKnB,SAAS,CACZC,KAAMkB,EAASQ,KAAKA,KAAK1B,UAG5BoB,OAAM,SAACC,GACNxB,QAAQC,IAAIuB,Q,oBA2BlB,WACE,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKM,GAAG,MACN,6BACE,kBAAC,IAAD,CAAYC,QAAQ,OAClB,kBAAC,IAAD,CAAgBC,KAAK,sBAAsBC,IAAI,KAA/C,QAGA,kBAAC,IAAD,CAAgBD,KAAK,0BAA0BC,IAAI,KAAnD,qBAGA,kBAAC,IAAD,CAAgBC,QAAM,GAAtB,yBAKR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,UAAU,OACb,kBAAC,IAAD,KACE,wBAAIC,YAAA,EAASD,UAAU,cAAvB,sBAIF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEE,OAAQ,gBAAGC,EAAH,EAAGA,QAAH,OACN,kBAAC,IAAD,CACEH,UAAU,8BACVI,QAAS,kBAAMD,EAAQE,KAAK,kCAF9B,aAUR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAML,UAAU,MAAMM,SAAUd,KAAKf,eACnC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK8B,GAAG,IAAIC,GAAG,IAAIb,GAAG,IAAIK,UAAU,QAClC,kBAAC,IAAD,0BACA,kBAAC,SAAD,CACES,iBAAiB,wBACjBC,iBAAiB,eACjBC,gBAAgB,cAChB/C,YAAa4B,KAAKR,MAAMpB,YACxBD,oBAAqB6B,KAAK7B,oBAC1BiD,QAAS,CACPC,QAAS,CACP,SACA,YACA,WACA,cAEFC,OAAQ,CACND,QAAS,CACP,OACA,SACA,YACA,gBACA,aAEFE,KAAM,CAAEf,UAAW,6BACnBgB,OAAQ,CAAEhB,UAAW,6BACrBiB,UAAW,CAAEjB,UAAW,6BACxBkB,cAAe,CACblB,UAAW,6BAEbmB,KAAM,CAAEnB,UAAW,8BAErBoB,UAAW,CACTpB,UAAW,6BAEbqB,SAAU,CACRrB,UAAW,6BAEbsB,WAAY,CACVtB,UAAW,kCAMrB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKO,GAAG,IAAIC,GAAG,IAAIb,GAAG,IAAIK,UAAU,QAClC,kBAAC,IAAOuB,OAAR,CACEC,MAAM,UACNC,KAAK,SACLzB,UAAU,aAHZ,oB,GArIoB0B","file":"static/js/231.f4cbe20e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Label,\r\n  Button,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { Route } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../../../assets/scss/plugins/extensions/editor.scss\";\r\nexport default class EditCash extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editorState: EditorState.createEmpty(),\r\n      desc: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .get(`/admin/viewoneService/${id}`)\r\n      .then((response) => {\r\n        this.setState({\r\n          desc: response.data.data.desc,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  onEditorStateChange = (editorState) => {\r\n    console.log(editorState);\r\n    this.setState({\r\n      editorState,\r\n      desc: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n    });\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .post(`admin/editService/${id}`, this.state)\r\n      .then((response) => {\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        // this.props.history.push(\"/app/scripts/cashEquity\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <div>\r\n              <Breadcrumb listTag=\"div\">\r\n                <BreadcrumbItem href=\"/analyticsDashboard\" tag=\"a\">\r\n                  Home\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem href=\"/app/scripts/cashEquity\" tag=\"a\">\r\n                  Edit Paid Service\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem active>Edit Paid Service</BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Edit Paid Service\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() => history.push(\"/app/premium/paidServiceList\")}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Edit Paid Service</Label>\r\n                  <Editor\r\n                    toolbarClassName=\"demo-toolbar-absolute\"\r\n                    wrapperClassName=\"demo-wrapper\"\r\n                    editorClassName=\"demo-editor\"\r\n                    editorState={this.state.editorState}\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                    toolbar={{\r\n                      options: [\r\n                        \"inline\",\r\n                        \"blockType\",\r\n                        \"fontSize\",\r\n                        \"fontFamily\",\r\n                      ],\r\n                      inline: {\r\n                        options: [\r\n                          \"bold\",\r\n                          \"italic\",\r\n                          \"underline\",\r\n                          \"strikethrough\",\r\n                          \"monospace\",\r\n                        ],\r\n                        bold: { className: \"bordered-option-classname\" },\r\n                        italic: { className: \"bordered-option-classname\" },\r\n                        underline: { className: \"bordered-option-classname\" },\r\n                        strikethrough: {\r\n                          className: \"bordered-option-classname\",\r\n                        },\r\n                        code: { className: \"bordered-option-classname\" },\r\n                      },\r\n                      blockType: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                      fontSize: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                      fontFamily: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                  >\r\n                    Update\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}