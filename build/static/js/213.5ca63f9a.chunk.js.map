{"version":3,"sources":["views/apps/claims/ViewClaims.js"],"names":["ViewClaims","state","rowData","StartDate","EndDate","list","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","fnoindex_scrpt_name","scriptName","type","call_type","active_value","active_value2","SL","trl","T1","pinned","window","innerWidth","size","color","onClick","runthisfunction","_id","changeHandlerStartDate","e","startDate","moment","target","value","format","setState","changeHandlerEndDate","endDate","onGridReady","gridApi","api","gridColumnApi","columnApi","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","submitHandler","console","log","axiosConfig","get","then","response","catch","error","id","swal","buttons","cancel","text","alltradeList","this","lg","md","sm","col-sm-6","tag","length","right","placeholder","onChange","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/213.5ca63f9a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Label,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\n\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\r\nimport swal from \"sweetalert\";\r\nimport { history } from \"../../../history\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\nimport moment from \"moment\";\r\nclass ViewClaims extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    StartDate: \"\",\r\n    EndDate: \"\",\r\n    list: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n      },\r\n\r\n      {\r\n        headerName: \"Policy No\",\r\n        field: \"script_type\",\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex  align-items-center cursor-pointer\">\r\n              {/* <span>{params.data.script_type}</span> */}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Product Name\",\r\n        field: \"scriptName\",\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex  align-items-center cursor-pointer\">\r\n              <span>{params.data.fnoindex_scrpt_name?.scriptName}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Order No\",\r\n        field: \"Order\",\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.type}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Order Date(yy-mm-dd)\",\r\n        field: \"Date\",\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.call_type}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Insured(Full Name)\",\r\n        field: \"active_value\",\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.active_value}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Email\",\r\n        field: \"active_value2\",\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.active_value2}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \" Age\",\r\n        field: \"SL\",\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.SL}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Industry\",\r\n        field: \"trl\",\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.trl}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Home Country\",\r\n        field: \"Country\",\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.T1}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      //   {\r\n      //     headerName: \"status \",\r\n      //     field: \"tradeStatus\",\r\n      //     filter: true,\r\n      //     width: 150,\r\n      //     cellRendererFramework: (params) => {\r\n      //       return params?.data?.FT1_type === \"true\" ||\r\n      //         params?.data?.FT2_type === \"true\" ||\r\n      //         params?.data?.FT3_type === \"true\" ||\r\n      //         params?.data?.t1_type === \"true\" ||\r\n      //         params?.data?.t2_type === \"true\" ||\r\n      //         params?.data?.t3_type === \"true\" ||\r\n      //         params?.data?.t4_type === \"true\" ||\r\n      //         params?.data?.trl_type === \"true\" ||\r\n      //         params?.data?.t5_type === \"true\" ? (\r\n      //         <div className=\"badge badge-pill badge-success\">Completed</div>\r\n      //       ) : params?.data?.sl_type === \"true\" ? (\r\n      //         <div className=\"badge badge-pill badge-danger\">Completed</div>\r\n      //       ) : null;\r\n      //     },\r\n      //   },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        width: 150,\r\n        pinned: window.innerWidth > 992 ? \"right\" : false,\r\n\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Trash2\r\n                size={20}\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  this.runthisfunction(params.data._id);\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  // componentDidMount() {\r\n  //   this.alltradeList();\r\n  // }\r\n  changeHandlerStartDate = (e) => {\r\n    const startDate = moment(e.target.value).format(\"D-MM-YYYY\");\r\n    this.setState({ StartDate: startDate });\r\n  };\r\n  changeHandlerEndDate = (e) => {\r\n    const endDate = moment(e.target.value).format(\"D-MM-YYYY\");\r\n    this.setState({ EndDate: endDate });\r\n  };\r\n  // alltradeList = () => {\r\n  //   axiosConfig.get(`/admin/tradelist`).then((response) => {\r\n  //     console.log(response.data.data);\r\n  //     const rowDataList = response.data.data;\r\n  //     const rowData = rowDataList.filter((value) => {\r\n  //       if (\r\n  //         value.FT1_type === \"true\" ||\r\n  //         value?.FT2_type === \"true\" ||\r\n  //         value?.FT3_type === \"true\" ||\r\n  //         value?.t1_type === \"true\" ||\r\n  //         value?.t2_type === \"true\" ||\r\n  //         value?.t3_type === \"true\" ||\r\n  //         value?.t4_type === \"true\" ||\r\n  //         value?.trl_type === \"true\" ||\r\n  //         value?.t5_type === \"true\" ||\r\n  //         value?.sl_type === \"true\"\r\n  //       ) {\r\n  //         return value;\r\n  //       }\r\n  //     });\r\n  //     console.log(\"NewList\", rowData);\r\n  //     const list = response.data.data;\r\n  //     this.setState({ rowData });\r\n  //     this.setState({ list });\r\n  //   });\r\n  // };\r\n  runthisfunction(id) {\r\n    swal(\r\n      `Do You Want To Delete Permanently`,\r\n      \"This item will be deleted immediately\",\r\n\r\n      {\r\n        buttons: {\r\n          cancel: \"Cancel\",\r\n          catch: { text: \"Delete \", value: \"catch\" },\r\n        },\r\n      }\r\n    ).then((value) => {\r\n      switch (value) {\r\n        case \"cancel\":\r\n          break;\r\n        case \"catch\":\r\n          axiosConfig.get(`/admin/dlt_alltrade/${id}`).then(() => {\r\n            this.alltradeList();\r\n          });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    console.log(this.state.StartDate, this.state.EndDate);\r\n    axiosConfig\r\n      .get(\r\n        `/user/tradefilterBydate?start=${this.state.StartDate}&end=${this.state.EndDate}`\r\n      )\r\n      .then((response) => {\r\n        this.setState({ rowData: response.data.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <Row className=\"app-user-list \">\r\n        <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n          <Card>\r\n            <h1 col-sm-6 className=\" p-2\">\r\n              ViewClaims\r\n            </h1>\r\n            {/* <Row>\r\n              <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2 ml-2\">\r\n                <Label>Reports:</Label>\r\n                <CustomInput\r\n                  type=\"select\"\r\n                  name=\"allPlan\"\r\n                  defaultValue=\"\"\r\n                  value={this.state.allPlan}\r\n                  onChange={this.changeHandler1}\r\n                >\r\n                  <option value=\"\" disabled>\r\n                    Choose Report\r\n                  </option>\r\n                  <option value=\"\">Order Report</option>\r\n                  <option value=\"Quote Report\">Quote Report</option>\r\n                  <option value=\"Order Items Report\">Order Items Report</option>\r\n                </CustomInput>\r\n              </Col>\r\n            </Row> */}\r\n            <CardBody>\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}{\" \"}\r\n                          -{\" \"}\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}\r\n                          >\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"search...\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <ContextLayout.Consumer>\r\n                    {(context) => (\r\n                      <AgGridReact\r\n                        gridOptions={{}}\r\n                        rowSelection=\"multiple\"\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={columnDefs}\r\n                        rowData={rowData}\r\n                        onGridReady={this.onGridReady}\r\n                        colResizeDefault={\"shift\"}\r\n                        animateRows={true}\r\n                        floatingFilter={false}\r\n                        pagination={true}\r\n                        paginationPageSize={this.state.paginationPageSize}\r\n                        pivotPanelShow=\"always\"\r\n                        enableRtl={context.state.direction === \"rtl\"}\r\n                      />\r\n                    )}\r\n                  </ContextLayout.Consumer>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default ViewClaims;\r\n"],"sourceRoot":""}