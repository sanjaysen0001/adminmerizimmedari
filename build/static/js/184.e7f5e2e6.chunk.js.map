{"version":3,"sources":["views/apps/faq/EditFaq.js"],"names":["EditFaq","props","onEditorStateChange","editorState","setState","desc","draftToHtml","convertToRaw","getCurrentContent","changeHandler","e","target","name","value","submitHandler","preventDefault","console","log","state","id","match","params","axiosConfig","post","then","response","swal","catch","error","title","EditorState","createEmpty","this","get","data","sm","listTag","href","tag","active","className","col-sm-6","render","history","onClick","push","onSubmit","lg","md","type","required","placeholder","onChange","toolbarClassName","wrapperClassName","editorClassName","defaultContentState","ReactHtmlParser","toolbar","options","inline","bold","italic","underline","strikethrough","code","blockType","fontSize","fontFamily","Ripple","color","Component"],"mappings":"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","file":"static/js/184.e7f5e2e6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { Route } from \"react-router-dom\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport swal from \"sweetalert\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../../../assets/scss/plugins/extensions/editor.scss\";\r\nexport default class EditFaq extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      editorState: EditorState.createEmpty(),\r\n      desc: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .get(`/admin/getoneFaq/${id}`)\r\n      .then((response) => {\r\n        console.log(response.data.data.desc);\r\n        this.setState({\r\n          title: response.data.data.title,\r\n          desc: response.data.data.desc,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n      desc: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n    });\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Desc\", this.state.desc);\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .post(`admin/edit_faq/${id}`, this.state)\r\n      .then((response) => {\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <div>\r\n              <Breadcrumb listTag=\"div\">\r\n                <BreadcrumbItem href=\"/analyticsDashboard\" tag=\"a\">\r\n                  Home\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem href=\"/app/scripts/cashEquity\" tag=\"a\">\r\n                  Edit Faq\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem active>Edit Faq</BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Edit Faq\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() => history.push(\"/app/faq/faqList\")}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label>Title</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    required\r\n                    placeholder=\"Enter Title\"\r\n                    name=\"title\"\r\n                    value={this.state.title}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Description</Label>\r\n                  <Editor\r\n                    toolbarClassName=\"demo-toolbar-absolute\"\r\n                    wrapperClassName=\"demo-wrapper\"\r\n                    editorClassName=\"demo-editor\"\r\n                    editorState={this.state.editorState}\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                    defaultContentState={ReactHtmlParser(this.state.desc)}\r\n                    toolbar={{\r\n                      options: [\r\n                        \"inline\",\r\n                        \"blockType\",\r\n                        \"fontSize\",\r\n                        \"fontFamily\",\r\n                      ],\r\n                      inline: {\r\n                        options: [\r\n                          \"bold\",\r\n                          \"italic\",\r\n                          \"underline\",\r\n                          \"strikethrough\",\r\n                          \"monospace\",\r\n                        ],\r\n                        bold: { className: \"bordered-option-classname\" },\r\n                        italic: { className: \"bordered-option-classname\" },\r\n                        underline: { className: \"bordered-option-classname\" },\r\n                        strikethrough: {\r\n                          className: \"bordered-option-classname\",\r\n                        },\r\n                        code: { className: \"bordered-option-classname\" },\r\n                      },\r\n                      blockType: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                      fontSize: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                      fontFamily: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                  >\r\n                    Update\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}