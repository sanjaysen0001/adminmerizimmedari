{"version":3,"sources":["../node_modules/emoji-picker-react/node_modules/clsx/dist/clsx.m.js","../../src/DomUtils/classNames.ts","../../src/DomUtils/focusElement.ts","../../src/components/context/ElementRefContext.tsx","../../src/types/exposedTypes.ts","../../src/dataUtils/emojiSelectors.ts","../../src/data/skinToneVariations.ts","../../src/config/cdnUrls.ts","../../src/config/categoryConfig.ts","../../src/config/config.ts","../../src/components/context/PickerConfigContext.tsx","../../src/config/useConfig.ts","../../src/DomUtils/isDarkTheme.ts","../../src/dataUtils/alphaNumericEmojiIndex.ts","../../src/hooks/useDebouncedState.ts","../../src/hooks/useDisallowedEmojis.ts","../../src/components/context/PickerContext.tsx","../../src/hooks/useInitialLoad.ts","../../src/hooks/useDisallowMouseMove.ts","../../src/DomUtils/elementPositionInRow.ts","../../src/DomUtils/selectors.ts","../../src/dataUtils/parseNativeEmoji.ts","../../src/dataUtils/suggested.ts","../../src/hooks/useCloseAllOpenToggles.ts","../../src/hooks/useSetVariationPicker.ts","../../src/hooks/useMouseDownHandlers.ts","../../src/DomUtils/scrollTo.ts","../../src/hooks/useFocus.ts","../../src/hooks/useFilter.ts","../../src/hooks/useIsEmojiHidden.ts","../../src/components/atoms/Button.tsx","../../node_modules/style-inject/dist/style-inject.es.js","../../src/components/emoji/Emoji.tsx","../../src/components/body/EmojiCategory.tsx","../../src/components/body/Suggested.tsx","../../src/components/body/EmojiList.tsx","../../src/DomUtils/keyboardNavigation.ts","../../src/components/body/EmojiVariationPicker.tsx","../../src/components/body/Body.tsx","../../src/hooks/useOnScroll.ts","../../src/hooks/useShouldShowSkinTonePicker.ts","../../src/components/Layout/Flex.tsx","../../src/components/Layout/Space.tsx","../../src/components/Layout/Absolute.tsx","../../src/components/Layout/Relative.tsx","../../src/components/header/SkinTonePicker.tsx","../../src/components/footer/Preview.tsx","../../src/hooks/useEmojiPreviewEvents.ts","../../src/DomUtils/categoryNameFromDom.ts","../../src/hooks/useIsSearchMode.ts","../../src/components/navigation/CategoryNavigation.tsx","../../src/hooks/useScrollCategoryIntoView.ts","../../src/hooks/useActiveCategoryScrollDetection.ts","../../src/components/header/Search.tsx","../../src/hooks/useKeyboardNavigation.ts","../../src/components/header/Header.tsx","../../src/DomUtils/getActiveElement.ts","../../src/hooks/preloadEmoji.ts","../../src/components/main/PickerMain.tsx","../../src/hooks/useOnFocus.ts","../../src/EmojiPickerReact.tsx","../../src/components/ErrorBoundary.tsx","../../src/components/emoji/ExportedEmoji.tsx","../../src/index.tsx"],"names":["r","e","t","f","n","Array","isArray","length","clsx","ClassNames","arguments","asSelectors","classNames","map","c","join","focusElement","element","requestAnimationFrame","focus","focusPrevElementSibling","previousElementSibling","focusNextElementSibling","nextElementSibling","focusFirstElementChild","firstElementChild","ElementRefContextProvider","children","PickerMainRef","React","AnchoredEmojiRef","BodyRef","SearchInputRef","SkinTonePickerRef","CategoryNavigationRef","VariationPickerRef","ElementRefContext","Provider","value","SuggestionMode","EmojiStyle","Theme","SkinTones","Categories","SkinTonePickerLocation","useElementRef","usePickerMainRef","useAnchoredEmojiRef","useSetAnchoredEmojiRef","target","current","useBodyRef","useSearchInputRef","useSkinTonePickerRef","useCategoryNavigationRef","EmojiProperties","skinToneVariations","NEUTRAL","LIGHT","MEDIUM_LIGHT","MEDIUM","MEDIUM_DARK","DARK","skinTonesNamed","Object","entries","reduce","acc","key","skinTonesMapped","mapped","skinTone","assign","emojiNames","emoji","name","emojiName","unifiedWithoutSkinTone","unified","splat","split","splice","emojiUnified","emojiHasVariations","emojiVariations","find","variation","includes","emojiVariationUnified","emojiUrlByUnified","emojiStyle","TWITTER","GOOGLE","FACEBOOK","APPLE","cdnUrl","variations","emojiByUnified","allEmojisByUnified","withoutSkinTone","allEmojis","values","emojis","flat","setTimeout","Emoji","categoriesOrdered","SUGGESTED","SMILEYS_PEOPLE","ANIMALS_NATURE","FOOD_DRINK","TRAVEL_PLACES","ACTIVITIES","OBJECTS","SYMBOLS","FLAGS","SuggestedRecent","category","configByCategory","baseCategoriesConfig","modifiers","categoryFromCategoryConfig","categoryNameFromCategoryConfig","getBaseConfigByCategory","modifier","mergeConfig","userConfig","base","basePickerConfig","previewConfig","config","categories","userCategoriesConfig","extra","suggestionMode","RECENT","_userCategoriesConfig","mergeCategoriesConfig","suggestedEmojisMode","skinTonePickerLocation","searchDisabled","PREVIEW","autoFocusSearch","defaultSkinTone","emojiVersion","getEmojiUrl","height","lazyLoadEmojis","onEmojiClick","event","basePreviewConfig","searchPlaceHolder","SEARCH","skinTonesDisabled","FREQUENT","theme","width","defaultEmoji","defaultCaption","showPreview","ConfigContext","PickerConfigProvider","usePickerConfig","useSkinTonesDisabledConfig","useEmojiStyleConfig","useCategoriesConfig","usePreviewConfig","useThemeConfig","AUTO","window","matchMedia","matches","useSearchDisabledConfig","useSkinTonePickerLocationConfig","useGetEmojiUrlConfig","getDimension","dimensionConfig","alphaNumericEmojiIndex","useDebouncedState","initialValue","delay","useState","state","setState","timer","useRef","Promise","resolve","clearTimeout","_window","useDisallowedEmojis","DisallowedEmojisRef","emojiVersionConfig","useMemo","parseFloat","Number","isNaN","disallowedEmojis","supportedLevel","added_in","addedIn","addedInNewerVersion","PickerContextProvider","dispatch","filterRef","disallowClickRef","disallowMouseRef","disallowedEmojisRef","suggestedUpdateState","Date","now","searchTerm","skinToneFanOpenState","activeSkinTone","activeCategoryState","emojisThatFailedToLoadState","Set","emojiVariationPickerState","isPastInitialLoad","setIsPastInitialLoad","useEffect","PickerContext","searchIndex","replace","forEach","char","useFilterRef","useDisallowMouseRef","useSearchTermState","useActiveSkinToneState","useEmojisThatFailedToLoadState","useEmojiVariationPickerState","useSkinToneFanOpenState","useUpdateSuggested","suggestedUpdated","setsuggestedUpdate","useAllowMouseMove","DisallowMouseRef","useIsMouseDisallowed","elementCountInRow","parent","parentWidth","getBoundingClientRect","elementWidth","Math","floor","elementIndexInRow","elementLeft","left","parentLeft","rowNumber","elementHeight","elementTop","top","parentTop","round","getRowElements","elements","row","elementsInRow","firstElementIndex","lastElementIndex","slice","getElementInRow","indexInRow","rowElements","getElementInNextRow","allElements","currentRow","index","nextRowElements","nextRow","getNextRowElements","EmojiButtonSelector","VisibleEmojiSelector","visible","hidden","buttonFromTarget","emojiElement","closest","emojiFromElement","originalUnified","originalUnifiedFromEmojiElement","unifiedFromEmojiElement","clientHeight","emojiTrueOffsetTop","button","closestCategory","labelHeight","categoryLabelHeight","elementOffsetTop","categoryWithoutLabel","querySelector","categoryContent","queryScrollBody","root","scrollBody","emojiDistanceFromScrollTop","closestScrollBody","_closestScrollBody","scrollTop","offsetTop","elementOffsetLeft","offsetLeft","dataset","elementDataSet","elementDataSetKey","isVisibleEmoji","classList","contains","isHidden","allVisibleEmojis","from","querySelectorAll","lastVisibleEmoji","last","prevVisibleEmoji","prev","prevCategory","firstVisibleEmoji","parentBottom","bottom","elementBottom","firstVisibleElementInContainer","nextCategory","next","closestCategoryContent","parseNativeEmoji","hex","String","fromCodePoint","parseInt","getsuggested","mode","localStorage","recent","JSON","parse","_window2","getItem","sort","a","b","count","useCloseAllOpenToggles","variationPicker","setVariationPicker","skinToneFanOpen","setSkinToneFanOpen","useCallback","useHasOpenToggles","useSetVariationPicker","setAnchoredEmojiRef","setEmojiVariationPicker","useMouseDownHandlers","mouseDownTimerRef","closeAllOpenToggles","updateSuggested","onClick","emojiFromEvent","skinToneToUse","suspectedSkinTone","activeVariationFromUnified","nextList","existing","concat","filter","i","original","min","setItem","stringify","setsuggested","getImageUrl","names","emojiClickOutput","onMouseDown","undefined","onMouseUp","bodyRef","addEventListener","passive","removeEventListener","Boolean","parentElement","_element$parentElemen","isEmojiElement","scrollTo","$eprBody","scrollEmojiAboveLabel","isEmojiBehindLabel","by","scrollBy","useFocusSearchInput","useFocusCategoryNavigation","useClearSearch","applySearch","useApplySearch","focusSearchInput","useFilter","setFilterRef","setFilter","setter","useSetFilterRef","onChange","inputValue","nextValue","toLowerCase","longestMatch","keyword","dict","longestMatchingKey","keys","findLongestMatch","filtered","hasMatch","filterEmojiObjectByKeyword","setSearchTerm","then","some","getNormalizedSearchTerm","str","trim","useIsEmojiHidden","emojisThatFailedToLoad","isEmojiFiltered","_filter$searchTerm","isEmojiFilteredBySearchTerm","useIsEmojiFiltered","failedToLoad","has","filteredOut","Button","props","type","className","styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","ClickableEmoji","hiddenOnSearch","showVariations","_ref$showVariations","size","lazyLoad","hasVariations","emojiHasVariatios","ViewOnlyEmoji","fontSize","emojiToRender","NATIVE","NativeEmoji","EmojiImg","external","_ref4$lazyLoad","setEmojisThatFailedToLoad","src","alt","loading","onError","add","EmojiCategory","categoryConfig","categoryName","label","Suggested","suggestedEmojisModeConfig","suggested","suggestedItem","EmojiList","emojiList","RenderCategory","isEmojiHidden","isEmojiDisallowed","useIsEmojiDisallowed","emojisToPush","emojisByCategory","hiddenCounter","isDisallowed","focusFirstVisibleEmoji","focusNextVisibleEmoji","nextVisibleEmoji","focusPrevVisibleEmoji","focusVisibleEmojiOneRowUp","exitUp","countInRow","prevVisibleCategory","prevRowElements","getElementInPrevRow","visibleEmojiOneRowUp","focusVisibleEmojiOneRowDown","parentHeight","hasNextRow","nextVisibleCategory","visibleEmojiOneRowDown","Direction","EmojiVariationPicker","pointerStyle","direction","Up","getMenuDirection","getTop","emojiOffsetTop","buttonHeight","Down","useVariationPickerTop","getPointerStyle","emojiTruOffsetLeft","clientWidth","usePointerStyle","Body","onScroll","useOnScroll","allowMouseMove","isMouseDisallowed","onMouseMove","useOnMouseMove","useIsSkinToneInSearch","useIsSkinToneInPreview","FlexDirection","Flex","_ref$style","ROW","Space","flex","Absolute","position","Relative","SkinTonePickerDirection","SkinTonePickerMenu","right","SkinTonePicker","VERTICAL","HORIZONTAL","isDisabled","isOpen","setIsOpen","setActiveSkinTone","fullWidth","expandedSize","ITEM_SIZE","vertical","open","flexBasis","skinToneVariation","active","transform","tabIndex","Preview","isSkinToneInPreview","PreviewBody","previewEmoji","setPreviewEmoji","variationPickerEmoji","allow","onEscape","onMouseOver","onEnter","onLeave","relatedTarget","useEmojiPreviewEvents","show","defaultText","categoryNameFromDom","$category","getAttribute","useIsSearchMode","CategoryNavigation","activeCategory","setActiveCategory","scrollCategoryIntoView","_BodyRef$current","useScrollCategoryIntoView","visibleCategories","Map","observer","IntersectionObserver","entry","id","set","intersectionRatio","ratios","lastCategory","threshold","el","observe","useActiveCategoryScrollDetection","isSearchMode","categoriesConfig","SearchContainer","isSkinToneInSearch","Search","inc","setInc","clearSearch","placeholder","autoFocus","input","CssSearch","onFocus","_event$target","KeyboardEvents","CSS_SEARCH_SELECTOR","emojiPicker","searchQuery","Header","getActiveElement","activeElement","useKeyboardNavigation","useScrollTo","hasOpenToggles","disallowMouseMove","useDisallowMouseMove","onKeyDown","Escape","preventDefault","usePickerMainKeyboardEvents","focusSkinTonePicker","useFocusSkinTonePicker","setSkinToneFanOpenState","goDownFromSearchInput","useGoDownFromSearchInput","ArrowRight","ArrowDown","Enter","firstEmoji","click","focusAndClickFirstVisibleEmoji","useSearchInputKeyboardEvents","onType","useOnType","ArrowLeft","focusNextSkinTone","focusPrevSkinTone","ArrowUp","useSkinTonePickerKeyboardEvents","useCategoryNavigationKeyboardEvents","goUpFromBody","focusCategoryNavigation","useGoUpFromBody","useBodyKeyboardEvents","exitLeft","currentSkinTone","appendSearch","useAppendSearch","metaKey","ctrlKey","altKey","hasModifier","match","preloadEmoji","preloadedEmojs","url","emojiUrl","Image","PickerMain","PickerRootElement","searchModeActive","usePickerSizeConfig","useOnFocus","searchActive","EmojiPicker","ErrorBoundary","_this","hasError","getDerivedStateFromError","componentDidCatch","error","errorInfo","console","render","this","ExportedEmoji","_ref$size","_ref$lazyLoad","EmojiPickerReact"],"mappings":"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","file":"static/js/15.4bf1444c.chunk.js","sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","export enum ClassNames {\n  hiddenOnSearch = 'epr-hidden-on-search',\n  searchActive = 'epr-search-active',\n  hidden = 'epr-hidden',\n  visible = 'epr-visible',\n  active = 'epr-active',\n  emoji = 'epr-emoji',\n  category = 'epr-emoji-category',\n  label = 'epr-emoji-category-label',\n  categoryContent = 'epr-emoji-category-content',\n  emojiHasVariatios = 'epr-emoji-has-variations',\n  scrollBody = 'epr-body',\n  emojiList = 'epr-emoji-list',\n  external = '__EmojiPicker__',\n  emojiPicker = 'EmojiPickerReact',\n  open = 'epr-open',\n  vertical = 'epr-vertical',\n  horizontal = 'epr-horizontal',\n  variationPicker = 'epr-emoji-variation-picker'\n}\n\nexport function asSelectors(...classNames: ClassNames[]): string {\n  return classNames.map(c => `.${c}`).join('');\n}\n","import { NullableElement } from './selectors';\n\nexport function focusElement(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    element.focus();\n  });\n}\n\nexport function focusPrevElementSibling(element: NullableElement) {\n  if (!element) return;\n\n  const prev = element.previousElementSibling as HTMLElement;\n\n  focusElement(prev);\n}\n\nexport function focusNextElementSibling(element: NullableElement) {\n  if (!element) return;\n\n  const next = element.nextElementSibling as HTMLElement;\n\n  focusElement(next);\n}\n\nexport function focusFirstElementChild(element: NullableElement) {\n  if (!element) return;\n\n  const first = element.firstElementChild as HTMLElement;\n\n  focusElement(first);\n}\n","import * as React from 'react';\n\nimport { focusElement } from '../../DomUtils/focusElement';\nimport { NullableElement } from '../../DomUtils/selectors';\n\nexport function ElementRefContextProvider({\n  children\n}: {\n  children: React.ReactNode;\n}) {\n  const PickerMainRef = React.useRef<HTMLElement>(null);\n  const AnchoredEmojiRef = React.useRef<HTMLElement>(null);\n  const BodyRef = React.useRef<HTMLDivElement>(null);\n  const SearchInputRef = React.useRef<HTMLInputElement>(null);\n  const SkinTonePickerRef = React.useRef<HTMLDivElement>(null);\n  const CategoryNavigationRef = React.useRef<HTMLDivElement>(null);\n  const VariationPickerRef = React.useRef<HTMLDivElement>(null);\n\n  return (\n    <ElementRefContext.Provider\n      value={{\n        AnchoredEmojiRef,\n        BodyRef,\n        CategoryNavigationRef,\n        PickerMainRef,\n        SearchInputRef,\n        SkinTonePickerRef,\n        VariationPickerRef\n      }}\n    >\n      {children}\n    </ElementRefContext.Provider>\n  );\n}\n\nexport type ElementRef<\n  E extends HTMLElement = HTMLElement\n> = React.MutableRefObject<E | null>;\n\ntype ElementRefs = {\n  PickerMainRef: ElementRef;\n  AnchoredEmojiRef: ElementRef;\n  SkinTonePickerRef: ElementRef<HTMLDivElement>;\n  SearchInputRef: ElementRef<HTMLInputElement>;\n  BodyRef: ElementRef<HTMLDivElement>;\n  CategoryNavigationRef: ElementRef<HTMLDivElement>;\n  VariationPickerRef: ElementRef<HTMLDivElement>;\n};\n\nconst ElementRefContext = React.createContext<ElementRefs>({\n  AnchoredEmojiRef: React.createRef(),\n  BodyRef: React.createRef(),\n  CategoryNavigationRef: React.createRef(),\n  PickerMainRef: React.createRef(),\n  SearchInputRef: React.createRef(),\n  SkinTonePickerRef: React.createRef(),\n  VariationPickerRef: React.createRef()\n});\n\nfunction useElementRef() {\n  return React.useContext(ElementRefContext);\n}\n\nexport function usePickerMainRef() {\n  return useElementRef()['PickerMainRef'];\n}\n\nexport function useAnchoredEmojiRef() {\n  return useElementRef()['AnchoredEmojiRef'];\n}\n\nexport function useSetAnchoredEmojiRef(): (target: NullableElement) => void {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  return (target: NullableElement) => {\n    if (target === null && AnchoredEmojiRef.current !== null) {\n      focusElement(AnchoredEmojiRef.current);\n    }\n\n    AnchoredEmojiRef.current = target;\n  };\n}\n\nexport function useBodyRef() {\n  return useElementRef()['BodyRef'];\n}\n\nexport function useSearchInputRef() {\n  return useElementRef()['SearchInputRef'];\n}\n\nexport function useSkinTonePickerRef() {\n  return useElementRef()['SkinTonePickerRef'];\n}\n\nexport function useCategoryNavigationRef() {\n  return useElementRef()['CategoryNavigationRef'];\n}\n\nexport function useVariationPickerRef() {\n  return useElementRef()['VariationPickerRef'];\n}\n","export type EmojiClickData = {\n  activeSkinTone: SkinTones;\n  unified: string;\n  unifiedWithoutSkinTone: string;\n  emoji: string;\n  names: string[];\n  getImageUrl: (emojiStyle: EmojiStyle) => string;\n};\n\nexport enum SuggestionMode {\n  RECENT = 'recent',\n  FREQUENT = 'frequent'\n}\n\nexport enum EmojiStyle {\n  NATIVE = 'native',\n  APPLE = 'apple',\n  TWITTER = 'twitter',\n  GOOGLE = 'google',\n  FACEBOOK = 'facebook'\n}\n\nexport enum Theme {\n  DARK = 'dark',\n  LIGHT = 'light',\n  AUTO = 'auto'\n}\n\nexport enum SkinTones {\n  NEUTRAL = 'neutral',\n  LIGHT = '1f3fb',\n  MEDIUM_LIGHT = '1f3fc',\n  MEDIUM = '1f3fd',\n  MEDIUM_DARK = '1f3fe',\n  DARK = '1f3ff'\n}\n\nexport enum Categories {\n  SUGGESTED = 'suggested',\n  SMILEYS_PEOPLE = 'smileys_people',\n  ANIMALS_NATURE = 'animals_nature',\n  FOOD_DRINK = 'food_drink',\n  TRAVEL_PLACES = 'travel_places',\n  ACTIVITIES = 'activities',\n  OBJECTS = 'objects',\n  SYMBOLS = 'symbols',\n  FLAGS = 'flags'\n}\n\nexport enum SkinTonePickerLocation {\n  SEARCH = 'SEARCH',\n  PREVIEW = 'PREVIEW'\n}\n","import { Categories } from '../config/categoryConfig';\nimport { cdnUrl } from '../config/cdnUrls';\nimport emojis from '../data/emojis';\nimport skinToneVariations, {\n  skinTonesMapped\n} from '../data/skinToneVariations';\nimport { EmojiStyle, SkinTones } from '../types/exposedTypes';  \n\nimport { DataEmoji, DataEmojis } from './DataTypes';\n\nenum EmojiProperties {\n  name = 'n',\n  unified = 'u',\n  variations = 'v',\n  added_in = 'a'\n}\n\nexport function emojiNames(emoji: DataEmoji): string[] {\n  return emoji[EmojiProperties.name] ?? [];\n}\n\nexport function addedIn(emoji: DataEmoji): number {\n  return parseFloat(emoji[EmojiProperties.added_in]);\n}\n\nexport function emojiName(emoji?: DataEmoji): string {\n  if (!emoji) {\n    return '';\n  }\n\n  return emojiNames(emoji)[0];\n}\n\nexport function unifiedWithoutSkinTone(unified: string): string {\n  const splat = unified.split('-');\n  const [skinTone] = splat.splice(1, 1);\n\n  if (skinTonesMapped[skinTone]) {\n    return splat.join('-');\n  }\n\n  return unified;\n}\n\nexport function emojiUnified(emoji: DataEmoji, skinTone?: string): string {\n  const unified = emoji[EmojiProperties.unified];\n\n  if (!skinTone || !emojiHasVariations(emoji)) {\n    return unified;\n  }\n\n  return emojiVariationUnified(emoji, skinTone) ?? unified;\n}\n\nexport function emojisByCategory(category: Categories): DataEmojis {\n  // @ts-ignore\n  return emojis?.[category] ?? [];\n}\n\n// WARNING: DO NOT USE DIRECTLY\nexport function emojiUrlByUnified(\n  unified: string,\n  emojiStyle: EmojiStyle\n): string {\n  return `${cdnUrl(emojiStyle)}${unified}.png`;\n}\n\nexport function emojiVariations(emoji: DataEmoji): string[] {\n  return emoji[EmojiProperties.variations] ?? [];\n}\n\nexport function emojiHasVariations(emoji: DataEmoji): boolean {\n  return emojiVariations(emoji).length > 0;\n}\n\nexport function emojiVariationUnified(\n  emoji: DataEmoji,\n  skinTone?: string\n): string | undefined {\n  return skinTone\n    ? emojiVariations(emoji).find(variation => variation.includes(skinTone))\n    : emojiUnified(emoji);\n}\n\nexport function emojiByUnified(unified?: string): DataEmoji | undefined {\n  if (!unified) {\n    return;\n  }\n\n  if (allEmojisByUnified[unified]) {\n    return allEmojisByUnified[unified];\n  }\n\n  const withoutSkinTone = unifiedWithoutSkinTone(unified);\n  return allEmojisByUnified[withoutSkinTone];\n}\n\nexport const allEmojis: DataEmojis = Object.values(emojis).flat();\n\nconst allEmojisByUnified: {\n  [unified: string]: DataEmoji;\n} = {};\n\nsetTimeout(() => {\n  allEmojis.reduce((allEmojis, Emoji) => {\n    allEmojis[emojiUnified(Emoji)] = Emoji;\n    return allEmojis;\n  }, allEmojisByUnified);\n});\n\nexport function activeVariationFromUnified(unified: string): SkinTones | null {\n  const [, suspectedSkinTone] = unified.split('-') as [string, SkinTones];\n  return skinToneVariations.includes(suspectedSkinTone)\n    ? suspectedSkinTone\n    : null;\n}\n","import { SkinTones } from '../types/exposedTypes';\n\nconst skinToneVariations = [\n  SkinTones.NEUTRAL,\n  SkinTones.LIGHT,\n  SkinTones.MEDIUM_LIGHT,\n  SkinTones.MEDIUM,\n  SkinTones.MEDIUM_DARK,\n  SkinTones.DARK\n];\n\nexport const skinTonesNamed = Object.entries(SkinTones).reduce(\n  (acc, [key, value]) => {\n    acc[value] = key;\n    return acc;\n  },\n  {} as Record<string, string>\n);\n\nexport const skinTonesMapped: Record<\n  string,\n  string\n> = skinToneVariations.reduce(\n  (mapped, skinTone) =>\n    Object.assign(mapped, {\n      [skinTone]: skinTone\n    }),\n  {}\n);\n\nexport default skinToneVariations;\n","import { EmojiStyle } from '../types/exposedTypes';\n\nconst CDN_URL_APPLE =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-apple/img/apple/64/';\nconst CDN_URL_FACEBOOK =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-facebook/img/facebook/64/';\nconst CDN_URL_TWITTER =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-twitter/img/twitter/64/';\nconst CDN_URL_GOOGLE =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-google/img/google/64/';\n\nexport function cdnUrl(emojiStyle: EmojiStyle): string {\n  switch (emojiStyle) {\n    case EmojiStyle.TWITTER:\n      return CDN_URL_TWITTER;\n    case EmojiStyle.GOOGLE:\n      return CDN_URL_GOOGLE;\n    case EmojiStyle.FACEBOOK:\n      return CDN_URL_FACEBOOK;\n    case EmojiStyle.APPLE:\n    default:\n      return CDN_URL_APPLE;\n  }\n}\n","import { Categories, SuggestionMode } from '../types/exposedTypes';\n\nexport { Categories };\n\nconst categoriesOrdered: Categories[] = [\n  Categories.SUGGESTED,\n  Categories.SMILEYS_PEOPLE,\n  Categories.ANIMALS_NATURE,\n  Categories.FOOD_DRINK,\n  Categories.TRAVEL_PLACES,\n  Categories.ACTIVITIES,\n  Categories.OBJECTS,\n  Categories.SYMBOLS,\n  Categories.FLAGS\n];\n\nexport const SuggestedRecent: CategoryConfig = {\n  name: 'Recently Used',\n  category: Categories.SUGGESTED\n};\n\nconst configByCategory: Record<Categories, CategoryConfig> = {\n  [Categories.SUGGESTED]: {\n    category: Categories.SUGGESTED,\n    name: 'Frequently Used'\n  },\n  [Categories.SMILEYS_PEOPLE]: {\n    category: Categories.SMILEYS_PEOPLE,\n    name: 'Smileys & People'\n  },\n  [Categories.ANIMALS_NATURE]: {\n    category: Categories.ANIMALS_NATURE,\n    name: 'Animals & Nature'\n  },\n  [Categories.FOOD_DRINK]: {\n    category: Categories.FOOD_DRINK,\n    name: 'Food & Drink'\n  },\n  [Categories.TRAVEL_PLACES]: {\n    category: Categories.TRAVEL_PLACES,\n    name: 'Travel & Places'\n  },\n  [Categories.ACTIVITIES]: {\n    category: Categories.ACTIVITIES,\n    name: 'Activities'\n  },\n  [Categories.OBJECTS]: {\n    category: Categories.OBJECTS,\n    name: 'Objects'\n  },\n  [Categories.SYMBOLS]: {\n    category: Categories.SYMBOLS,\n    name: 'Symbols'\n  },\n  [Categories.FLAGS]: {\n    category: Categories.FLAGS,\n    name: 'Flags'\n  }\n};\n\nexport function baseCategoriesConfig(\n  modifiers?: Record<Categories, CategoryConfig>\n): CategoriesConfig {\n  return categoriesOrdered.map(category => {\n    return {\n      ...configByCategory[category],\n      ...(modifiers && modifiers[category] && modifiers[category])\n    };\n  });\n}\n\nexport function categoryFromCategoryConfig(category: CategoryConfig) {\n  return category.category;\n}\n\nexport function categoryNameFromCategoryConfig(category: CategoryConfig) {\n  return category.name;\n}\n\nexport type CategoriesConfig = CategoryConfig[];\n\nexport type CategoryConfig = {\n  category: Categories;\n  name: string;\n};\n\nexport type UserCategoryConfig = Array<Categories | CategoryConfig>;\n\nexport function mergeCategoriesConfig(\n  userCategoriesConfig: UserCategoryConfig = [],\n  modifiers: CategoryConfigModifiers = {}\n): CategoriesConfig {\n  const extra = {} as Record<Categories, CategoryConfig>;\n\n  if (modifiers.suggestionMode === SuggestionMode.RECENT) {\n    extra[Categories.SUGGESTED] = SuggestedRecent;\n  }\n\n  const base = baseCategoriesConfig(extra);\n  if (!userCategoriesConfig?.length) {\n    return base;\n  }\n\n  return userCategoriesConfig.map(category => {\n    if (typeof category === 'string') {\n      return getBaseConfigByCategory(category, extra[category]);\n    }\n\n    return {\n      ...getBaseConfigByCategory(category.category, extra[category.category]),\n      ...category\n    };\n  });\n}\n\nfunction getBaseConfigByCategory(\n  category: Categories,\n  modifier: CategoryConfig = {} as CategoryConfig\n) {\n  return Object.assign(configByCategory[category], modifier);\n}\n\ntype CategoryConfigModifiers = {\n  suggestionMode?: SuggestionMode;\n};\n","import { GetEmojiUrl } from '../components/emoji/Emoji';\nimport { emojiUrlByUnified } from '../dataUtils/emojiSelectors';\nimport {\n  EmojiClickData,\n  EmojiStyle,\n  SkinTonePickerLocation,\n  SkinTones,\n  SuggestionMode,\n  Theme\n} from '../types/exposedTypes';\n\nimport {\n  CategoriesConfig,\n  baseCategoriesConfig,\n  mergeCategoriesConfig\n} from './categoryConfig';\n\nexport function mergeConfig(\n  userConfig: PickerConfig = {}\n): PickerConfigInternal {\n  const base = basePickerConfig();\n\n  const previewConfig = Object.assign(\n    base.previewConfig,\n    userConfig.previewConfig ?? {}\n  );\n  const config = Object.assign(base, userConfig);\n\n  const categories = mergeCategoriesConfig(userConfig.categories, {\n    suggestionMode: config.suggestedEmojisMode\n  });\n\n  const skinTonePickerLocation = config.searchDisabled\n    ? SkinTonePickerLocation.PREVIEW\n    : config.skinTonePickerLocation;\n\n  return {\n    ...config,\n    categories,\n    previewConfig,\n    skinTonePickerLocation\n  };\n}\n\nexport function basePickerConfig(): PickerConfigInternal {\n  return {\n    autoFocusSearch: true,\n    categories: baseCategoriesConfig(),\n    defaultSkinTone: SkinTones.NEUTRAL,\n    emojiStyle: EmojiStyle.APPLE,\n    emojiVersion: null,\n    getEmojiUrl: emojiUrlByUnified,\n    height: 450,\n    lazyLoadEmojis: false,\n    onEmojiClick: function defaultOnClickHandler(\n      // @ts-ignore\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      emoji: EmojiClickData,\n      // @ts-ignore\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      event: MouseEvent\n    ) {},\n    previewConfig: {\n      ...basePreviewConfig\n    },\n    searchDisabled: false,\n    searchPlaceHolder: 'Search',\n    skinTonePickerLocation: SkinTonePickerLocation.SEARCH,\n    skinTonesDisabled: false,\n    suggestedEmojisMode: SuggestionMode.FREQUENT,\n    theme: Theme.LIGHT,\n    width: 350\n  };\n}\n\nexport type PickerConfigInternal = {\n  emojiVersion: string | null;\n  searchPlaceHolder: string;\n  defaultSkinTone: SkinTones;\n  skinTonesDisabled: boolean;\n  autoFocusSearch: boolean;\n  emojiStyle: EmojiStyle;\n  categories: CategoriesConfig;\n  onEmojiClick: (emoji: EmojiClickData, event: MouseEvent) => void;\n  theme: Theme;\n  suggestedEmojisMode: SuggestionMode;\n  lazyLoadEmojis: boolean;\n  previewConfig: PreviewConfig;\n  height: PickerDimensions;\n  width: PickerDimensions;\n  getEmojiUrl: GetEmojiUrl;\n  searchDisabled: boolean;\n  skinTonePickerLocation: SkinTonePickerLocation;\n};\n\nexport type PreviewConfig = {\n  defaultEmoji: string;\n  defaultCaption: string;\n  showPreview: boolean;\n};\n\nconst basePreviewConfig: PreviewConfig = {\n  defaultEmoji: '1f60a',\n  defaultCaption: \"What's your mood?\",\n  showPreview: true\n};\n\ntype ConfigExternal = {\n  previewConfig: Partial<PreviewConfig>;\n} & Omit<PickerConfigInternal, 'previewConfig'>;\n\nexport type PickerConfig = Partial<ConfigExternal>;\n\nexport type PickerDimensions = string | number;\n","import * as React from 'react';\n\nimport {\n  basePickerConfig,\n  mergeConfig,\n  PickerConfig,\n  PickerConfigInternal\n} from '../../config/config';\n\ntype Props = PickerConfig &\n  Readonly<{\n    children: React.ReactNode;\n  }>;\n\nconst ConfigContext = React.createContext<PickerConfigInternal>(\n  basePickerConfig()\n);\n\nexport function PickerConfigProvider({ children, ...config }: Props) {\n  return (\n    <ConfigContext.Provider value={mergeConfig(config)}>\n      {children}\n    </ConfigContext.Provider>\n  );\n}\n\nexport function usePickerConfig() {\n  return React.useContext(ConfigContext);\n}\n","import { isSystemDarkTheme } from '../DomUtils/isDarkTheme';\nimport { usePickerConfig } from '../components/context/PickerConfigContext';\nimport {\n  EmojiClickData,\n  EmojiStyle,\n  SkinTonePickerLocation,\n  SkinTones,\n  SuggestionMode,\n  Theme\n} from '../types/exposedTypes';\n\nimport { CategoriesConfig } from './categoryConfig';\nimport { PickerDimensions, PreviewConfig } from './config';\n\nexport function useSearchPlaceHolderConfig(): string {\n  const { searchPlaceHolder } = usePickerConfig();\n  return searchPlaceHolder;\n}\n\nexport function useDefaultSkinToneConfig(): SkinTones {\n  const { defaultSkinTone } = usePickerConfig();\n  return defaultSkinTone;\n}\n\nexport function useSkinTonesDisabledConfig(): boolean {\n  const { skinTonesDisabled } = usePickerConfig();\n  return skinTonesDisabled;\n}\n\nexport function useEmojiStyleConfig(): EmojiStyle {\n  const { emojiStyle } = usePickerConfig();\n  return emojiStyle;\n}\n\nexport function useAutoFocusSearchConfig(): boolean {\n  const { autoFocusSearch } = usePickerConfig();\n  return autoFocusSearch;\n}\n\nexport function useCategoriesConfig(): CategoriesConfig {\n  const { categories } = usePickerConfig();\n  return categories;\n}\n\nexport function useOnEmojiClickConfig(): (\n  emoji: EmojiClickData,\n  event: MouseEvent\n) => void {\n  const { onEmojiClick } = usePickerConfig();\n  return onEmojiClick;\n}\n\nexport function usePreviewConfig(): PreviewConfig {\n  const { previewConfig } = usePickerConfig();\n  return previewConfig;\n}\n\nexport function useThemeConfig(): Theme {\n  const { theme } = usePickerConfig();\n\n  if (theme === Theme.AUTO) {\n    return isSystemDarkTheme() ? Theme.DARK : Theme.LIGHT;\n  }\n\n  return theme;\n}\n\nexport function useSuggestedEmojisModeConfig(): SuggestionMode {\n  const { suggestedEmojisMode } = usePickerConfig();\n  return suggestedEmojisMode;\n}\n\nexport function useLazyLoadEmojisConfig(): boolean {\n  const { lazyLoadEmojis } = usePickerConfig();\n  return lazyLoadEmojis;\n}\n\nexport function usePickerSizeConfig(): {\n  height: PickerDimensions;\n  width: PickerDimensions;\n} {\n  const { height, width } = usePickerConfig();\n  return { height: getDimension(height), width: getDimension(width) };\n}\n\nexport function useEmojiVersionConfig(): string | null {\n  const { emojiVersion } = usePickerConfig();\n  return emojiVersion;\n}\n\nexport function useSearchDisabledConfig(): boolean {\n  const { searchDisabled } = usePickerConfig();\n  return searchDisabled;\n}\n\nexport function useSkinTonePickerLocationConfig(): SkinTonePickerLocation {\n  const { skinTonePickerLocation } = usePickerConfig();\n  return skinTonePickerLocation;\n}\n\nexport function useGetEmojiUrlConfig(): (\n  unified: string,\n  style: EmojiStyle\n) => string {\n  const { getEmojiUrl } = usePickerConfig();\n  return getEmojiUrl;\n}\n\nfunction getDimension(dimensionConfig: PickerDimensions): PickerDimensions {\n  return typeof dimensionConfig === 'number'\n    ? `${dimensionConfig}px`\n    : dimensionConfig;\n}\n","export function isSystemDarkTheme(): boolean {\n  if (typeof window === 'undefined') {\n    return false;\n  }\n\n  return !!window.matchMedia('(prefers-color-scheme: dark)').matches;\n}\n","import { DataEmoji } from './DataTypes';\nimport { allEmojis, emojiNames, emojiUnified } from './emojiSelectors';\n\nexport const alphaNumericEmojiIndex: BaseIndex = {};\n\nsetTimeout(() => {\n  allEmojis.reduce((searchIndex, emoji) => {\n    const joinedNameString = emojiNames(emoji)\n      .flat()\n      .join('')\n      .replace(/[^a-zA-Z\\d]/g, '')\n      .split('');\n\n    joinedNameString.forEach(char => {\n      searchIndex[char] = searchIndex[char] ?? {};\n\n      searchIndex[char][emojiUnified(emoji)] = emoji;\n    });\n    return searchIndex;\n  }, alphaNumericEmojiIndex as BaseIndex);\n});\n\ntype BaseIndex = Record<string, Record<string, DataEmoji>>;\n","import { useRef, useState } from 'react';\n\nexport function useDebouncedState<T>(\n  initialValue: T,\n  delay: number = 0\n): [T, (value: T) => Promise<T>] {\n  const [state, setState] = useState<T>(initialValue);\n  const timer = useRef<number | null>(null);\n\n  function debouncedSetState(value: T) {\n    return new Promise<T>(resolve => {\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n\n      timer.current = window?.setTimeout(() => {\n        setState(value);\n        resolve(value);\n      }, delay);\n    });\n  }\n\n  return [state, debouncedSetState];\n}\n","import { useRef, useMemo } from 'react';\n\nimport { useEmojiVersionConfig } from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  addedIn,\n  allEmojis,\n  emojiUnified,\n  unifiedWithoutSkinTone\n} from '../dataUtils/emojiSelectors';\n\nexport function useDisallowedEmojis() {\n  const DisallowedEmojisRef = useRef<Record<string, boolean>>({});\n  const emojiVersionConfig = useEmojiVersionConfig();\n\n  return useMemo(() => {\n    const emojiVersion = parseFloat(`${emojiVersionConfig}`);\n\n    if (!emojiVersionConfig || Number.isNaN(emojiVersion)) {\n      return DisallowedEmojisRef.current;\n    }\n\n    return allEmojis.reduce((disallowedEmojis, emoji) => {\n      if (addedInNewerVersion(emoji, emojiVersion)) {\n        disallowedEmojis[emojiUnified(emoji)] = true;\n      }\n\n      return disallowedEmojis;\n    }, DisallowedEmojisRef.current);\n  }, [emojiVersionConfig]);\n}\n\nexport function useIsEmojiDisallowed() {\n  const disallowedEmojis = useDisallowedEmojis();\n\n  return function isEmojiDisallowed(emoji: DataEmoji) {\n    const unified = unifiedWithoutSkinTone(emojiUnified(emoji));\n\n    return Boolean(disallowedEmojis[unified]);\n  };\n}\n\nfunction addedInNewerVersion(\n  emoji: DataEmoji,\n  supportedLevel: number\n): boolean {\n  return addedIn(emoji) > supportedLevel;\n}\n","import * as React from 'react';\nimport { useState } from 'react';\n\nimport { useDefaultSkinToneConfig } from '../../config/useConfig';\nimport { DataEmoji } from '../../dataUtils/DataTypes';\nimport { alphaNumericEmojiIndex } from '../../dataUtils/alphaNumericEmojiIndex';\nimport { useDebouncedState } from '../../hooks/useDebouncedState';\nimport { useDisallowedEmojis } from '../../hooks/useDisallowedEmojis';\nimport { FilterDict } from '../../hooks/useFilter';\nimport { useMarkInitialLoad } from '../../hooks/useInitialLoad';\nimport { SkinTones } from '../../types/exposedTypes';\n\nexport function PickerContextProvider({ children }: Props) {\n  const disallowedEmojis = useDisallowedEmojis();\n  const defaultSkinTone = useDefaultSkinToneConfig();\n\n  // Initialize the filter with the inititial dictionary\n  const filterRef = React.useRef<FilterState>(alphaNumericEmojiIndex);\n  const disallowClickRef = React.useRef<boolean>(false);\n  const disallowMouseRef = React.useRef<boolean>(false);\n  const disallowedEmojisRef = React.useRef<Record<string, boolean>>(\n    disallowedEmojis\n  );\n\n  const suggestedUpdateState = useDebouncedState(Date.now(), 200);\n  const searchTerm = useDebouncedState('', 100);\n  const skinToneFanOpenState = useState<boolean>(false);\n  const activeSkinTone = useState<SkinTones>(defaultSkinTone);\n  const activeCategoryState = useState<ActiveCategoryState>(null);\n  const emojisThatFailedToLoadState = useState<Set<string>>(new Set());\n  const emojiVariationPickerState = useState<DataEmoji | null>(null);\n  const [isPastInitialLoad, setIsPastInitialLoad] = useState(false);\n\n  useMarkInitialLoad(setIsPastInitialLoad);\n\n  return (\n    <PickerContext.Provider\n      value={{\n        activeCategoryState,\n        activeSkinTone,\n        disallowClickRef,\n        disallowMouseRef,\n        disallowedEmojisRef,\n        emojiVariationPickerState,\n        emojisThatFailedToLoadState,\n        filterRef,\n        isPastInitialLoad,\n        searchTerm,\n        skinToneFanOpenState,\n        suggestedUpdateState\n      }}\n    >\n      {children}\n    </PickerContext.Provider>\n  );\n}\n\ntype ReactState<T> = [T, React.Dispatch<React.SetStateAction<T>>];\n\nconst PickerContext = React.createContext<{\n  searchTerm: [string, (term: string) => Promise<string>];\n  suggestedUpdateState: [number, (term: number) => void];\n  activeCategoryState: ReactState<ActiveCategoryState>;\n  activeSkinTone: ReactState<SkinTones>;\n  emojisThatFailedToLoadState: ReactState<Set<string>>;\n  isPastInitialLoad: boolean;\n  emojiVariationPickerState: ReactState<DataEmoji | null>;\n  skinToneFanOpenState: ReactState<boolean>;\n  filterRef: React.MutableRefObject<FilterState>;\n  disallowClickRef: React.MutableRefObject<boolean>;\n  disallowMouseRef: React.MutableRefObject<boolean>;\n  disallowedEmojisRef: React.MutableRefObject<Record<string, boolean>>;\n}>({\n  activeCategoryState: [null, () => {}],\n  activeSkinTone: [SkinTones.NEUTRAL, () => {}],\n  disallowClickRef: { current: false },\n  disallowMouseRef: { current: false },\n  disallowedEmojisRef: { current: {} },\n  emojiVariationPickerState: [null, () => {}],\n  emojisThatFailedToLoadState: [new Set(), () => {}],\n  filterRef: { current: {} },\n  isPastInitialLoad: true,\n  searchTerm: ['', () => new Promise<string>(() => undefined)],\n  skinToneFanOpenState: [false, () => {}],\n  suggestedUpdateState: [Date.now(), () => {}]\n});\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n}>;\n\nexport function useFilterRef() {\n  const { filterRef } = React.useContext(PickerContext);\n  return filterRef;\n}\n\nexport function useDisallowClickRef() {\n  const { disallowClickRef } = React.useContext(PickerContext);\n  return disallowClickRef;\n}\n\nexport function useDisallowMouseRef() {\n  const { disallowMouseRef } = React.useContext(PickerContext);\n  return disallowMouseRef;\n}\n\nexport function useSearchTermState() {\n  const { searchTerm } = React.useContext(PickerContext);\n  return searchTerm;\n}\n\nexport function useActiveSkinToneState(): [\n  SkinTones,\n  (skinTone: SkinTones) => void\n] {\n  const { activeSkinTone } = React.useContext(PickerContext);\n  return activeSkinTone;\n}\n\nexport function useEmojisThatFailedToLoadState() {\n  const { emojisThatFailedToLoadState } = React.useContext(PickerContext);\n  return emojisThatFailedToLoadState;\n}\n\nexport function useIsPastInitialLoad(): boolean {\n  const { isPastInitialLoad } = React.useContext(PickerContext);\n  return isPastInitialLoad;\n}\n\nexport function useEmojiVariationPickerState() {\n  const { emojiVariationPickerState } = React.useContext(PickerContext);\n  return emojiVariationPickerState;\n}\n\nexport function useSkinToneFanOpenState() {\n  const { skinToneFanOpenState } = React.useContext(PickerContext);\n  return skinToneFanOpenState;\n}\n\nexport function useDisallowedEmojisRef() {\n  const { disallowedEmojisRef } = React.useContext(PickerContext);\n  return disallowedEmojisRef;\n}\n\nexport function useUpdateSuggested(): [number, () => void] {\n  const { suggestedUpdateState } = React.useContext(PickerContext);\n\n  const [suggestedUpdated, setsuggestedUpdate] = suggestedUpdateState;\n  return [\n    suggestedUpdated,\n    function updateSuggested() {\n      setsuggestedUpdate(Date.now());\n    }\n  ];\n}\n\nexport type FilterState = Record<string, FilterDict>;\n\ntype ActiveCategoryState = null | string;\n","import { useEffect } from 'react';\nimport * as React from 'react';\n\nexport function useMarkInitialLoad(\n  dispatch: React.Dispatch<React.SetStateAction<boolean>>\n) {\n  useEffect(() => {\n    dispatch(true);\n  }, [dispatch]);\n}\n","import { useEffect } from 'react';\n\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { useDisallowMouseRef } from '../components/context/PickerContext';\n\nexport function useDisallowMouseMove() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function disallowMouseMove() {\n    DisallowMouseRef.current = true;\n  };\n}\n\nexport function useAllowMouseMove() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function allowMouseMove() {\n    DisallowMouseRef.current = false;\n  };\n}\n\nexport function useIsMouseDisallowed() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function isMouseDisallowed() {\n    return DisallowMouseRef.current;\n  };\n}\n\nexport function useOnMouseMove() {\n  const BodyRef = useBodyRef();\n  const allowMouseMove = useAllowMouseMove();\n  const isMouseDisallowed = useIsMouseDisallowed();\n\n  useEffect(() => {\n    const bodyRef = BodyRef.current;\n    bodyRef?.addEventListener('mousemove', onMouseMove, {\n      passive: true\n    });\n\n    function onMouseMove() {\n      if (isMouseDisallowed()) {\n        allowMouseMove();\n      }\n    }\n    return () => {\n      bodyRef?.removeEventListener('mousemove', onMouseMove);\n    };\n  }, [BodyRef, allowMouseMove, isMouseDisallowed]);\n}\n","import { NullableElement } from './selectors';\n\nexport function elementCountInRow(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const parentWidth = parent.getBoundingClientRect().width;\n  const elementWidth = element.getBoundingClientRect().width;\n  return Math.floor(parentWidth / elementWidth);\n}\n\nexport function elementIndexInRow(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const elementWidth = element.getBoundingClientRect().width;\n  const elementLeft = element.getBoundingClientRect().left;\n  const parentLeft = parent.getBoundingClientRect().left;\n\n  return Math.floor((elementLeft - parentLeft) / elementWidth);\n}\n\nexport function rowNumber(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const elementHeight = element.getBoundingClientRect().height;\n  const elementTop = element.getBoundingClientRect().top;\n  const parentTop = parent.getBoundingClientRect().top;\n  return Math.round((elementTop - parentTop) / elementHeight);\n}\n\nexport function hasNextRow(\n  parent: NullableElement,\n  element: NullableElement\n): boolean {\n  if (!parent || !element) {\n    return false;\n  }\n\n  const elementHeight = element.getBoundingClientRect().height;\n  const elementTop = element.getBoundingClientRect().top;\n  const parentTop = parent.getBoundingClientRect().top;\n  const parentHeight = parent.getBoundingClientRect().height;\n\n  return Math.round(elementTop - parentTop + elementHeight) < parentHeight;\n}\n\nfunction getRowElements(\n  elements: HTMLElement[],\n  row: number,\n  elementsInRow: number\n): HTMLElement[] {\n  if (row === -1) {\n    const lastRow = Math.floor((elements.length - 1) / elementsInRow);\n    const firstElementIndex = lastRow * elementsInRow;\n    const lastElementIndex = elements.length - 1;\n    return elements.slice(firstElementIndex, lastElementIndex + 1);\n  }\n\n  return elements.slice(row * elementsInRow, (row + 1) * elementsInRow);\n}\n\nfunction getNextRowElements(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number\n): HTMLElement[] {\n  const nextRow = currentRow + 1;\n\n  if (nextRow * elementsInRow > allElements.length) {\n    return [];\n  }\n\n  return getRowElements(allElements, nextRow, elementsInRow);\n}\n\nexport function getElementInRow(\n  elements: HTMLElement[],\n  row: number,\n  elementsInRow: number,\n  indexInRow: number\n): NullableElement {\n  const rowElements = getRowElements(elements, row, elementsInRow);\n  // get element, default to last\n  return rowElements[indexInRow] || rowElements[rowElements.length - 1] || null;\n}\n\nexport function getElementInNextRow(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number,\n  index: number\n): NullableElement {\n  const nextRowElements = getNextRowElements(\n    allElements,\n    currentRow,\n    elementsInRow\n  );\n\n  // return item in index, or last item in row\n  return (\n    nextRowElements[index] ||\n    nextRowElements[nextRowElements.length - 1] ||\n    null\n  );\n}\n\nexport function getElementInPrevRow(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number,\n  index: number\n): NullableElement {\n  const prevRowElements = getRowElements(\n    allElements,\n    currentRow - 1,\n    elementsInRow\n  );\n\n  // default to last\n  return (\n    prevRowElements[index] ||\n    prevRowElements[prevRowElements.length - 1] ||\n    null\n  );\n}\n\nexport function firstVisibleElementInContainer(\n  parent: NullableElement,\n  elements: HTMLElement[]\n): NullableElement {\n  if (!parent || !elements.length) {\n    return null;\n  }\n\n  const parentTop = parent.getBoundingClientRect().top;\n  const parentBottom = parent.getBoundingClientRect().bottom;\n\n  const visibleElements = elements.find(element => {\n    const elementTop = element.getBoundingClientRect().top;\n    const elementBottom = element.getBoundingClientRect().bottom;\n\n    return (\n      (elementTop >= parentTop && elementTop <= parentBottom) ||\n      (elementBottom >= parentTop && elementBottom <= parentBottom)\n    );\n  });\n\n  return visibleElements || null;\n}\n\nexport function hasNextElementSibling(element: HTMLElement) {\n  return !!element.nextElementSibling;\n}\n","import { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  emojiByUnified,\n  unifiedWithoutSkinTone,\n} from '../dataUtils/emojiSelectors';\n\nimport { asSelectors, ClassNames } from './classNames';\nimport { firstVisibleElementInContainer } from './elementPositionInRow';\n\nexport type NullableElement = HTMLElement | null;\n\nexport const EmojiButtonSelector = `button${asSelectors(ClassNames.emoji)}`;\nexport const VisibleEmojiSelector = [\n  EmojiButtonSelector,\n  asSelectors(ClassNames.visible),\n  `:not(${asSelectors(ClassNames.hidden)})`,\n].join('');\n\nexport function buttonFromTarget(\n  emojiElement: NullableElement\n): HTMLButtonElement | null {\n  return emojiElement?.closest(EmojiButtonSelector) ?? null;\n}\n\nexport function isEmojiButton(element: NullableElement): boolean {\n  if (!element) {\n    return false;\n  }\n\n  return element.matches(EmojiButtonSelector);\n}\n\nexport function emojiFromElement(\n  element: NullableElement\n): [DataEmoji, string] | [] {\n  const originalUnified = originalUnifiedFromEmojiElement(element);\n  const unified = unifiedFromEmojiElement(element);\n\n  if (!originalUnified) {\n    return [];\n  }\n\n  const emoji = emojiByUnified(originalUnified);\n\n  if (!emoji) {\n    return [];\n  }\n\n  return [emoji, unified as string];\n}\n\nexport function isEmojiElement(element: NullableElement): boolean {\n  return Boolean(\n    element?.matches(EmojiButtonSelector) ||\n      element?.parentElement?.matches(EmojiButtonSelector)\n  );\n}\n\nexport function categoryLabelFromCategory(\n  category: NullableElement\n): NullableElement {\n  return category?.querySelector(asSelectors(ClassNames.label)) ?? null;\n}\n\nexport function closestCategoryLabel(\n  element: NullableElement\n): NullableElement {\n  const category = closestCategory(element);\n  return categoryLabelFromCategory(category);\n}\n\nexport function elementHeight(element: NullableElement): number {\n  return element?.clientHeight ?? 0;\n}\n\nexport function emojiTrueOffsetTop(element: NullableElement): number {\n  if (!element) {\n    return 0;\n  }\n\n  const button = buttonFromTarget(element);\n  const category = closestCategory(button);\n\n  // compensate for the label height\n  const labelHeight = categoryLabelHeight(category);\n\n  return elementOffsetTop(button) + elementOffsetTop(category) + labelHeight;\n}\n\nexport function categoryLabelHeight(category: NullableElement): number {\n  if (!category) {\n    return 0;\n  }\n\n  const categoryWithoutLabel = category.querySelector(\n    asSelectors(ClassNames.categoryContent)\n  );\n\n  return (\n    (category?.clientHeight ?? 0) - (categoryWithoutLabel?.clientHeight ?? 0)\n  );\n}\n\nexport function isEmojiBehindLabel(emoji: NullableElement): boolean {\n  if (!emoji) {\n    return false;\n  }\n\n  return (\n    emojiDistanceFromScrollTop(emoji) <\n    categoryLabelHeight(closestCategory(emoji))\n  );\n}\n\nexport function queryScrollBody(root: NullableElement): NullableElement {\n  return root\n    ? root.matches(asSelectors(ClassNames.scrollBody))\n      ? root\n      : root.querySelector(asSelectors(ClassNames.scrollBody))\n    : null;\n}\n\nexport function emojiDistanceFromScrollTop(emoji: NullableElement): number {\n  if (!emoji) {\n    return 0;\n  }\n\n  return emojiTrueOffsetTop(emoji) - (closestScrollBody(emoji)?.scrollTop ?? 0);\n}\n\nexport function closestScrollBody(element: NullableElement): NullableElement {\n  if (!element) {\n    return null;\n  }\n\n  return element.closest(asSelectors(ClassNames.scrollBody)) ?? null;\n}\n\nexport function emojiTruOffsetLeft(element: NullableElement): number {\n  const button = buttonFromTarget(element);\n  const category = closestCategory(button);\n\n  return elementOffsetLeft(button) + elementOffsetLeft(category);\n}\n\nfunction elementOffsetTop(element: NullableElement): number {\n  return element?.offsetTop ?? 0;\n}\n\nfunction elementOffsetLeft(element: NullableElement): number {\n  return element?.offsetLeft ?? 0;\n}\n\nexport function unifiedFromEmojiElement(emoji: NullableElement): string | null {\n  return elementDataSetKey(buttonFromTarget(emoji), 'unified') ?? null;\n}\n\nexport function originalUnifiedFromEmojiElement(\n  emoji: NullableElement\n): string | null {\n  const unified = unifiedFromEmojiElement(emoji);\n\n  if (unified) {\n    return unifiedWithoutSkinTone(unified);\n  }\n  return null;\n}\n\nfunction elementDataSetKey(\n  element: NullableElement,\n  key: string\n): string | null {\n  return elementDataSet(element)[key] ?? null;\n}\n\nfunction elementDataSet(element: NullableElement): DOMStringMap {\n  return element?.dataset ?? {};\n}\n\nexport function isVisibleEmoji(element: HTMLElement) {\n  return element.classList.contains(ClassNames.visible);\n}\n\nexport function isHidden(element: NullableElement) {\n  if (!element) return true;\n\n  return element.classList.contains(ClassNames.hidden);\n}\n\nexport function allVisibleEmojis(parent: NullableElement) {\n  if (!parent) {\n    return [];\n  }\n\n  return Array.from(\n    parent.querySelectorAll(VisibleEmojiSelector)\n  ) as HTMLElement[];\n}\n\nexport function lastVisibleEmoji(element: NullableElement): NullableElement {\n  if (!element) return null;\n\n  const allEmojis = allVisibleEmojis(element);\n  const [last] = allEmojis.slice(-1);\n  if (!last) {\n    return null;\n  }\n\n  if (!isVisibleEmoji(last)) {\n    return prevVisibleEmoji(last);\n  }\n\n  return last;\n}\n\nexport function nextVisibleEmoji(element: HTMLElement): NullableElement {\n  const next = element.nextElementSibling as HTMLElement;\n\n  if (!next) {\n    return firstVisibleEmoji(nextCategory(element));\n  }\n\n  if (!isVisibleEmoji(next)) {\n    return nextVisibleEmoji(next);\n  }\n\n  return next;\n}\n\nexport function prevVisibleEmoji(element: HTMLElement): NullableElement {\n  const prev = element.previousElementSibling as HTMLElement;\n\n  if (!prev) {\n    return lastVisibleEmoji(prevCategory(element));\n  }\n\n  if (!isVisibleEmoji(prev)) {\n    return prevVisibleEmoji(prev);\n  }\n\n  return prev;\n}\n\nexport function firstVisibleEmoji(parent: NullableElement) {\n  if (!parent) {\n    return null;\n  }\n\n  const allEmojis = allVisibleEmojis(parent);\n\n  return firstVisibleElementInContainer(parent, allEmojis);\n}\n\nexport function prevCategory(element: NullableElement): NullableElement {\n  const category = closestCategory(element);\n\n  if (!category) {\n    return null;\n  }\n\n  const prev = category.previousElementSibling as HTMLElement;\n\n  if (!prev) {\n    return null;\n  }\n\n  if (isHidden(prev)) {\n    return prevCategory(prev);\n  }\n\n  return prev;\n}\n\nexport function nextCategory(element: NullableElement): NullableElement {\n  const category = closestCategory(element);\n\n  if (!category) {\n    return null;\n  }\n\n  const next = category.nextElementSibling as HTMLElement;\n\n  if (!next) {\n    return null;\n  }\n\n  if (isHidden(next)) {\n    return nextCategory(next);\n  }\n\n  return next;\n}\n\nexport function closestCategory(element: NullableElement) {\n  if (!element) {\n    return null;\n  }\n  return element.closest(asSelectors(ClassNames.category)) as HTMLElement;\n}\n\nexport function closestCategoryContent(element: NullableElement) {\n  if (!element) {\n    return null;\n  }\n  return element.closest(\n    asSelectors(ClassNames.categoryContent)\n  ) as HTMLElement;\n}\n","export function parseNativeEmoji(unified: string): string {\n  return unified\n    .split('-')\n    .map(hex => String.fromCodePoint(parseInt(hex, 16)))\n    .join('');\n}\n","import { SkinTones, SuggestionMode } from '../types/exposedTypes';\n\nimport { DataEmoji } from './DataTypes';\nimport { emojiUnified } from './emojiSelectors';\n\nconst SUGGESTED_LS_KEY = 'epr_suggested';\n\ntype SuggestedItem = {\n  unified: string;\n  original: string;\n  count: number;\n};\n\ntype Suggested = SuggestedItem[];\n\nexport function getsuggested(mode?: SuggestionMode): Suggested {\n  try {\n    if (!window?.localStorage) {\n      return [];\n    }\n    const recent = JSON.parse(\n      window?.localStorage.getItem(SUGGESTED_LS_KEY) ?? '[]'\n    ) as Suggested;\n\n    if (mode === SuggestionMode.FREQUENT) {\n      return recent.sort((a, b) => b.count - a.count);\n    }\n\n    return recent;\n  } catch {\n    return [];\n  }\n}\n\nexport function setsuggested(emoji: DataEmoji, skinTone: SkinTones) {\n  const recent = getsuggested();\n\n  const unified = emojiUnified(emoji, skinTone);\n  const originalUnified = emojiUnified(emoji);\n\n  let existing = recent.find(({ unified: u }) => u === unified);\n\n  let nextList: SuggestedItem[];\n\n  if (existing) {\n    nextList = [existing].concat(recent.filter(i => i !== existing));\n  } else {\n    existing = {\n      unified,\n      original: originalUnified,\n      count: 0\n    };\n    nextList = [existing, ...recent];\n  }\n\n  existing.count++;\n\n  nextList.length = Math.min(nextList.length, 14);\n\n  try {\n    window?.localStorage.setItem(SUGGESTED_LS_KEY, JSON.stringify(nextList));\n    // Prevents the change from being seen immediately.\n  } catch {\n    // ignore\n  }\n}\n","import { useCallback } from 'react';\n\nimport {\n  useEmojiVariationPickerState,\n  useSkinToneFanOpenState\n} from '../components/context/PickerContext';\n\nexport function useCloseAllOpenToggles() {\n  const [variationPicker, setVariationPicker] = useEmojiVariationPickerState();\n  const [skinToneFanOpen, setSkinToneFanOpen] = useSkinToneFanOpenState();\n\n  const closeAllOpenToggles = useCallback(() => {\n    if (variationPicker) {\n      setVariationPicker(null);\n    }\n\n    if (skinToneFanOpen) {\n      setSkinToneFanOpen(false);\n    }\n  }, [\n    variationPicker,\n    skinToneFanOpen,\n    setVariationPicker,\n    setSkinToneFanOpen\n  ]);\n\n  return closeAllOpenToggles;\n}\n\nexport function useHasOpenToggles() {\n  const [variationPicker] = useEmojiVariationPickerState();\n  const [skinToneFanOpen] = useSkinToneFanOpenState();\n\n  return function hasOpenToggles() {\n    return !!variationPicker || skinToneFanOpen;\n  };\n}\n","import { emojiFromElement, NullableElement } from '../DomUtils/selectors';\nimport { useSetAnchoredEmojiRef } from '../components/context/ElementRefContext';\nimport { useEmojiVariationPickerState } from '../components/context/PickerContext';\n\nexport default function useSetVariationPicker() {\n  const setAnchoredEmojiRef = useSetAnchoredEmojiRef();\n  const [, setEmojiVariationPicker] = useEmojiVariationPickerState();\n\n  return function setVariationPicker(element: NullableElement) {\n    const [emoji] = emojiFromElement(element);\n\n    if (emoji) {\n      setAnchoredEmojiRef(element);\n      setEmojiVariationPicker(emoji);\n    }\n  };\n}\n","import * as React from 'react';\nimport { useEffect, useRef } from 'react';\n\nimport {\n  emojiFromElement,\n  isEmojiElement,\n  NullableElement,\n} from '../DomUtils/selectors';\nimport {\n  useActiveSkinToneState,\n  useDisallowClickRef,\n  useEmojiVariationPickerState,\n  useUpdateSuggested,\n} from '../components/context/PickerContext';\nimport { GetEmojiUrl } from '../components/emoji/Emoji';\nimport {\n  useGetEmojiUrlConfig,\n  useOnEmojiClickConfig,\n} from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  activeVariationFromUnified,\n  emojiHasVariations,\n  emojiNames,\n  emojiUnified,\n} from '../dataUtils/emojiSelectors';\nimport { parseNativeEmoji } from '../dataUtils/parseNativeEmoji';\nimport { setsuggested } from '../dataUtils/suggested';\nimport { EmojiClickData, EmojiStyle, SkinTones } from '../types/exposedTypes';\n\nimport { useCloseAllOpenToggles } from './useCloseAllOpenToggles';\nimport useSetVariationPicker from './useSetVariationPicker';\n\nexport function useMouseDownHandlers(\n  BodyRef: React.MutableRefObject<NullableElement>\n) {\n  const mouseDownTimerRef = useRef<undefined | number>();\n  const setVariationPicker = useSetVariationPicker();\n  const disallowClickRef = useDisallowClickRef();\n  const [, setEmojiVariationPicker] = useEmojiVariationPickerState();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const [activeSkinTone] = useActiveSkinToneState();\n  const onEmojiClick = useOnEmojiClickConfig();\n  const [, updateSuggested] = useUpdateSuggested();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  const onClick = React.useCallback(\n    function onClick(event: MouseEvent) {\n      if (disallowClickRef.current) {\n        return;\n      }\n\n      closeAllOpenToggles();\n\n      const [emoji, unified] = emojiFromEvent(event);\n\n      if (!emoji || !unified) {\n        return;\n      }\n\n      const skinToneToUse =\n        activeVariationFromUnified(unified) || activeSkinTone;\n\n      updateSuggested();\n      setsuggested(emoji, skinToneToUse);\n      onEmojiClick(emojiClickOutput(emoji, skinToneToUse, getEmojiUrl), event);\n    },\n    [\n      activeSkinTone,\n      closeAllOpenToggles,\n      disallowClickRef,\n      onEmojiClick,\n      updateSuggested,\n      getEmojiUrl,\n    ]\n  );\n\n  const onMouseDown = React.useCallback(\n    function onMouseDown(event: MouseEvent) {\n      if (mouseDownTimerRef.current) {\n        clearTimeout(mouseDownTimerRef.current);\n      }\n\n      const [emoji] = emojiFromEvent(event);\n\n      if (!emoji || !emojiHasVariations(emoji)) {\n        return;\n      }\n\n      mouseDownTimerRef.current = window?.setTimeout(() => {\n        disallowClickRef.current = true;\n        mouseDownTimerRef.current = undefined;\n        closeAllOpenToggles();\n        setVariationPicker(event.target as HTMLElement);\n        setEmojiVariationPicker(emoji);\n      }, 500);\n    },\n    [\n      disallowClickRef,\n      closeAllOpenToggles,\n      setVariationPicker,\n      setEmojiVariationPicker,\n    ]\n  );\n  const onMouseUp = React.useCallback(\n    function onMouseUp() {\n      if (mouseDownTimerRef.current) {\n        clearTimeout(mouseDownTimerRef.current);\n        mouseDownTimerRef.current = undefined;\n      } else if (disallowClickRef.current) {\n        // The problem we're trying to overcome here\n        // is that the emoji has both mouseup and click events\n        // and when releasing a mouseup event\n        // the click gets triggered too\n        // So we're disallowing the click event for a short time\n\n        requestAnimationFrame(() => {\n          disallowClickRef.current = false;\n        });\n      }\n    },\n    [disallowClickRef]\n  );\n\n  useEffect(() => {\n    if (!BodyRef.current) {\n      return;\n    }\n    const bodyRef = BodyRef.current;\n    bodyRef.addEventListener('click', onClick, {\n      passive: true,\n    });\n\n    bodyRef.addEventListener('mousedown', onMouseDown, {\n      passive: true,\n    });\n    bodyRef.addEventListener('mouseup', onMouseUp, {\n      passive: true,\n    });\n\n    return () => {\n      bodyRef?.removeEventListener('click', onClick);\n      bodyRef?.removeEventListener('mousedown', onMouseDown);\n      bodyRef?.removeEventListener('mouseup', onMouseUp);\n    };\n  }, [BodyRef, onClick, onMouseDown, onMouseUp]);\n}\n\nfunction emojiFromEvent(event: MouseEvent): [DataEmoji, string] | [] {\n  const target = event?.target as HTMLElement;\n  if (!isEmojiElement(target)) {\n    return [];\n  }\n\n  return emojiFromElement(target);\n}\n\nfunction emojiClickOutput(\n  emoji: DataEmoji,\n  activeSkinTone: SkinTones,\n  getEmojiUrl: GetEmojiUrl\n): EmojiClickData {\n  const unified = emojiUnified(emoji, activeSkinTone);\n  return {\n    activeSkinTone,\n    emoji: parseNativeEmoji(unified),\n    getImageUrl(emojiStyle: EmojiStyle) {\n      return getEmojiUrl(unified, emojiStyle);\n    },\n    names: emojiNames(emoji),\n    unified,\n    unifiedWithoutSkinTone: emojiUnified(emoji),\n  };\n}\n","import { useCallback } from 'react';\n\nimport { useBodyRef } from '../components/context/ElementRefContext';\n\nimport { asSelectors, ClassNames } from './classNames';\nimport {\n  categoryLabelHeight,\n  closestCategory,\n  closestScrollBody,\n  emojiDistanceFromScrollTop,\n  isEmojiBehindLabel,\n  NullableElement,\n  queryScrollBody\n} from './selectors';\n\nexport function scrollTo(root: NullableElement, top: number = 0) {\n  const $eprBody = queryScrollBody(root);\n\n  if (!$eprBody) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    $eprBody.scrollTop = top + 1;\n  });\n}\n\nexport function scrollBy(root: NullableElement, by: number): void {\n  const $eprBody = queryScrollBody(root);\n\n  if (!$eprBody) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    $eprBody.scrollTop = $eprBody.scrollTop + by;\n  });\n}\n\nexport function useScrollTo() {\n  const BodyRef = useBodyRef();\n\n  return useCallback(\n    (top: number) => {\n      requestAnimationFrame(() => {\n        if (BodyRef.current) {\n          BodyRef.current.scrollTop = top;\n        }\n      });\n    },\n    [BodyRef]\n  );\n}\n\nexport function scrollEmojiAboveLabel(emoji: NullableElement) {\n  if (!emoji || !isEmojiBehindLabel(emoji)) {\n    return;\n  }\n\n  if (emoji.closest(asSelectors(ClassNames.variationPicker))) {\n    return;\n  }\n\n  const scrollBody = closestScrollBody(emoji);\n  const by = emojiDistanceFromScrollTop(emoji);\n  scrollBy(scrollBody, -(categoryLabelHeight(closestCategory(emoji)) - by));\n}\n","import { useCallback } from 'react';\n\nimport { focusElement, focusFirstElementChild } from '../DomUtils/focusElement';\nimport {\n  useCategoryNavigationRef,\n  useSearchInputRef,\n  useSkinTonePickerRef\n} from '../components/context/ElementRefContext';\n\nexport function useFocusSearchInput() {\n  const SearchInputRef = useSearchInputRef();\n\n  return useCallback(() => {\n    focusElement(SearchInputRef.current);\n  }, [SearchInputRef]);\n}\n\nexport function useFocusSkinTonePicker() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n\n  return useCallback(() => {\n    if (!SkinTonePickerRef.current) {\n      return;\n    }\n\n    focusFirstElementChild(SkinTonePickerRef.current);\n  }, [SkinTonePickerRef]);\n}\n\nexport function useFocusCategoryNavigation() {\n  const CategoryNavigationRef = useCategoryNavigationRef();\n\n  return useCallback(() => {\n    if (!CategoryNavigationRef.current) {\n      return;\n    }\n\n    focusFirstElementChild(CategoryNavigationRef.current);\n  }, [CategoryNavigationRef]);\n}\n","import { scrollTo } from '../DomUtils/scrollTo';\nimport {\n  usePickerMainRef,\n  useSearchInputRef,\n} from '../components/context/ElementRefContext';\nimport {\n  FilterState,\n  useFilterRef,\n  useSearchTermState,\n} from '../components/context/PickerContext';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiNames } from '../dataUtils/emojiSelectors';\n\nimport { useFocusSearchInput } from './useFocus';\n\nfunction useSetFilterRef() {\n  const filterRef = useFilterRef();\n\n  return function setFilter(\n    setter: FilterState | ((current: FilterState) => FilterState)\n  ): void {\n    if (typeof setter === 'function') {\n      return setFilter(setter(filterRef.current));\n    }\n\n    filterRef.current = setter;\n  };\n}\n\nexport function useClearSearch() {\n  const applySearch = useApplySearch();\n  const SearchInputRef = useSearchInputRef();\n  const focusSearchInput = useFocusSearchInput();\n\n  return function clearSearch() {\n    if (SearchInputRef.current) {\n      SearchInputRef.current.value = '';\n    }\n\n    applySearch('');\n    focusSearchInput();\n  };\n}\n\nexport function useAppendSearch() {\n  const SearchInputRef = useSearchInputRef();\n  const applySearch = useApplySearch();\n\n  return function appendSearch(str: string) {\n    if (SearchInputRef.current) {\n      SearchInputRef.current.value = `${SearchInputRef.current.value}${str}`;\n      applySearch(getNormalizedSearchTerm(SearchInputRef.current.value));\n    } else {\n      applySearch(getNormalizedSearchTerm(str));\n    }\n  };\n}\n\nexport function useFilter() {\n  const SearchInputRef = useSearchInputRef();\n  const filterRef = useFilterRef();\n  const setFilterRef = useSetFilterRef();\n  const applySearch = useApplySearch();\n\n  const [searchTerm] = useSearchTermState();\n\n  return {\n    onChange,\n    searchTerm,\n    SearchInputRef,\n  };\n\n  function onChange(inputValue: string) {\n    const filter = filterRef.current;\n\n    const nextValue = inputValue.toLowerCase();\n\n    if (filter?.[nextValue] || nextValue.length <= 1) {\n      return applySearch(nextValue);\n    }\n\n    const longestMatch = findLongestMatch(nextValue, filter);\n\n    if (!longestMatch) {\n      // Can we even get here?\n      // If so, we need to search among all emojis\n      return applySearch(nextValue);\n    }\n\n    setFilterRef((current) =>\n      Object.assign(current, {\n        [nextValue]: filterEmojiObjectByKeyword(longestMatch, nextValue),\n      })\n    );\n    applySearch(nextValue);\n  }\n}\n\nfunction useApplySearch() {\n  const [, setSearchTerm] = useSearchTermState();\n  const PickerMainRef = usePickerMainRef();\n\n  return function applySearch(searchTerm: string) {\n    requestAnimationFrame(() => {\n      setSearchTerm(searchTerm ? searchTerm?.toLowerCase() : searchTerm).then(\n        () => {\n          scrollTo(PickerMainRef.current, 0);\n        }\n      );\n    });\n  };\n}\n\nfunction filterEmojiObjectByKeyword(\n  emojis: FilterDict,\n  keyword: string\n): FilterDict {\n  const filtered: FilterDict = {};\n\n  for (const unified in emojis) {\n    const emoji = emojis[unified];\n\n    if (hasMatch(emoji, keyword)) {\n      filtered[unified] = emoji;\n    }\n  }\n\n  return filtered;\n}\n\nfunction hasMatch(emoji: DataEmoji, keyword: string): boolean {\n  return emojiNames(emoji).some((name) => name.includes(keyword));\n}\n\nexport function useIsEmojiFiltered(): (unified: string) => boolean {\n  const { current: filter } = useFilterRef();\n  const [searchTerm] = useSearchTermState();\n\n  return (unified) => isEmojiFilteredBySearchTerm(unified, filter, searchTerm);\n}\n\nfunction isEmojiFilteredBySearchTerm(\n  unified: string,\n  filter: FilterState,\n  searchTerm: string\n): boolean {\n  if (!filter || !searchTerm) {\n    return false;\n  }\n\n  return !filter[searchTerm]?.[unified];\n}\n\nexport type FilterDict = Record<string, DataEmoji>;\n\nfunction findLongestMatch(\n  keyword: string,\n  dict: Record<string, FilterDict> | null\n): FilterDict | null {\n  if (!dict) {\n    return null;\n  }\n\n  if (dict[keyword]) {\n    return dict[keyword];\n  }\n\n  const longestMatchingKey = Object.keys(dict)\n    .sort((a, b) => b.length - a.length)\n    .find((key) => keyword.includes(key));\n\n  if (longestMatchingKey) {\n    return dict[longestMatchingKey];\n  }\n\n  return null;\n}\n\nexport function getNormalizedSearchTerm(str: string): string {\n  if (!str || typeof str !== 'string') {\n    return '';\n  }\n\n  return str.trim().toLowerCase();\n}\n","import { useEmojisThatFailedToLoadState } from '../components/context/PickerContext';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiUnified } from '../dataUtils/emojiSelectors';\n\nimport { useIsEmojiFiltered } from './useFilter';\n\nexport function useIsEmojiHidden(): (emoji: DataEmoji) => IsHiddenReturn {\n  const [emojisThatFailedToLoad] = useEmojisThatFailedToLoadState();\n  const isEmojiFiltered = useIsEmojiFiltered();\n\n  return (emoji: DataEmoji): IsHiddenReturn => {\n    const unified = emojiUnified(emoji);\n\n    const failedToLoad = emojisThatFailedToLoad.has(unified);\n    const filteredOut = isEmojiFiltered(unified);\n\n    return {\n      failedToLoad,\n      filteredOut,\n      hidden: failedToLoad || filteredOut\n    };\n  };\n}\n\ntype IsHiddenReturn = {\n  failedToLoad: boolean;\n  filteredOut: boolean;\n  hidden: boolean;\n};\n","import clsx from 'clsx';\nimport * as React from 'react';\n\ninterface Props\n  extends React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  > {\n  className?: string;\n}\n\nexport function Button(props: Props) {\n  return (\n    <button\n      type=\"button\"\n      {...props}\n      className={clsx('epr-btn', props.className)}\n    >\n      {props.children}\n    </button>\n  );\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { DataEmoji } from '../../dataUtils/DataTypes';\nimport {\n  emojiByUnified,\n  emojiHasVariations,\n  emojiName,\n  emojiNames,\n  emojiUrlByUnified,\n} from '../../dataUtils/emojiSelectors';\nimport { parseNativeEmoji } from '../../dataUtils/parseNativeEmoji';\nimport { EmojiStyle } from '../../types/exposedTypes';\nimport { Button } from '../atoms/Button';\nimport { useEmojisThatFailedToLoadState } from '../context/PickerContext';\nimport './Emoji.css';\n\ntype ClickableEmojiProps = Readonly<\n  BaseProps & {\n    hidden?: boolean;\n    showVariations?: boolean;\n    hiddenOnSearch?: boolean;\n    emoji: DataEmoji;\n  }\n>;\n\ntype BaseProps = {\n  emoji?: DataEmoji;\n  emojiStyle: EmojiStyle;\n  unified: string;\n  size?: number;\n  lazyLoad?: boolean;\n  getEmojiUrl?: GetEmojiUrl;\n};\n\nexport function ClickableEmoji({\n  emoji,\n  unified,\n  hidden,\n  hiddenOnSearch,\n  emojiStyle,\n  showVariations = true,\n  size,\n  lazyLoad,\n  getEmojiUrl,\n}: ClickableEmojiProps) {\n  const hasVariations = emojiHasVariations(emoji);\n\n  return (\n    <Button\n      className={clsx(ClassNames.emoji, {\n        [ClassNames.hidden]: hidden,\n        [ClassNames.hiddenOnSearch]: hiddenOnSearch,\n        [ClassNames.visible]: !hidden && !hiddenOnSearch,\n        [ClassNames.emojiHasVariatios]: hasVariations && showVariations,\n      })}\n      data-unified={unified}\n      // @ts-ignore - let's ignore the fact this is not a real react ref, ok?\n      aria-label={emojiName(emoji)}\n      data-full-name={emojiNames(emoji)}\n    >\n      <ViewOnlyEmoji\n        unified={unified}\n        emoji={emoji}\n        size={size}\n        emojiStyle={emojiStyle}\n        lazyLoad={lazyLoad}\n        getEmojiUrl={getEmojiUrl}\n      />\n    </Button>\n  );\n}\n\nexport function ViewOnlyEmoji({\n  emoji,\n  unified,\n  emojiStyle,\n  size,\n  lazyLoad,\n  getEmojiUrl = emojiUrlByUnified,\n}: BaseProps) {\n  const style = {} as React.CSSProperties;\n  if (size) {\n    style.width = style.height = style.fontSize = `${size}px`;\n  }\n\n  const emojiToRender = emoji ? emoji : emojiByUnified(unified);\n  if(!emojiToRender) {\n    return null\n  }\n\n  return (\n    <>\n      {emojiStyle === EmojiStyle.NATIVE ? (\n        <NativeEmoji unified={unified} style={style} />\n      ) : (\n        <EmojiImg\n          unified={unified}\n          style={style}\n          emoji={emojiToRender}\n          emojiStyle={emojiStyle}\n          lazyLoad={lazyLoad}\n          getEmojiUrl={getEmojiUrl}\n        />\n      )}\n    </>\n  );\n}\n\nfunction NativeEmoji({\n  unified,\n  style,\n}: {\n  unified: string;\n  style: React.CSSProperties;\n}) {\n  return (\n    <span\n      className={clsx(ClassNames.external, 'epr-emoji-native')}\n      data-unified={unified}\n      style={style}\n    >\n      {parseNativeEmoji(unified)}\n    </span>\n  );\n}\n\nfunction EmojiImg({\n  emoji,\n  unified,\n  emojiStyle,\n  style,\n  lazyLoad = false,\n  getEmojiUrl,\n}: {\n  emoji: DataEmoji;\n  unified: string;\n  emojiStyle: EmojiStyle;\n  style: React.CSSProperties;\n  lazyLoad?: boolean;\n  getEmojiUrl: GetEmojiUrl;\n}) {\n  const [, setEmojisThatFailedToLoad] = useEmojisThatFailedToLoadState();\n\n  return (\n    <img\n      src={getEmojiUrl(unified, emojiStyle)}\n      alt={emojiName(emoji)}\n      className={clsx(ClassNames.external, 'epr-emoji-img')}\n      loading={lazyLoad ? 'lazy' : 'eager'}\n      onError={onError}\n      style={style}\n    />\n  );\n\n  function onError() {\n    setEmojisThatFailedToLoad((prev) => new Set(prev).add(unified));\n  }\n}\n\nexport type GetEmojiUrl = (unified: string, style: EmojiStyle) => string;\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  CategoryConfig,\n  categoryFromCategoryConfig,\n  categoryNameFromCategoryConfig\n} from '../../config/categoryConfig';\nimport './EmojiCategory.css';\n\ntype Props = Readonly<{\n  categoryConfig: CategoryConfig;\n  children?: React.ReactNode;\n  hidden?: boolean;\n  hiddenOnSearch?: boolean;\n}>;\n\nexport function EmojiCategory({\n  categoryConfig,\n  children,\n  hidden,\n  hiddenOnSearch\n}: Props) {\n  const category = categoryFromCategoryConfig(categoryConfig);\n  const categoryName = categoryNameFromCategoryConfig(categoryConfig);\n\n  return (\n    <li\n      className={clsx(ClassNames.category, {\n        [ClassNames.hidden]: hidden,\n        [ClassNames.hiddenOnSearch]: hiddenOnSearch\n      })}\n      data-name={category}\n      aria-label={categoryName}\n    >\n      <div className={ClassNames.label}>{categoryName}</div>\n      <div className={ClassNames.categoryContent}>{children}</div>\n    </li>\n  );\n}\n","import * as React from 'react';\n\nimport { CategoryConfig } from '../../config/categoryConfig';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useSuggestedEmojisModeConfig,\n} from '../../config/useConfig';\nimport { emojiByUnified } from '../../dataUtils/emojiSelectors';\nimport { getsuggested } from '../../dataUtils/suggested';\nimport { useUpdateSuggested } from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport { EmojiCategory } from './EmojiCategory';\n\ntype Props = Readonly<{\n  categoryConfig: CategoryConfig;\n}>;\n\nexport function Suggested({ categoryConfig }: Props) {\n  const [suggestedUpdated] = useUpdateSuggested();\n  const suggestedEmojisModeConfig = useSuggestedEmojisModeConfig();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const suggested = React.useMemo(\n    () => getsuggested(suggestedEmojisModeConfig) ?? [],\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [suggestedUpdated, suggestedEmojisModeConfig]\n  );\n  const emojiStyle = useEmojiStyleConfig();\n\n  return (\n    <EmojiCategory\n      categoryConfig={categoryConfig}\n      hiddenOnSearch\n      hidden={suggested.length === 0}\n    >\n      {suggested.map((suggestedItem) => {\n        const emoji = emojiByUnified(suggestedItem.original);\n\n        if (!emoji) {\n          return null;\n        }\n\n        return (\n          <ClickableEmoji\n            showVariations={false}\n            unified={suggestedItem.unified}\n            emojiStyle={emojiStyle}\n            emoji={emoji}\n            key={suggestedItem.unified}\n            getEmojiUrl={getEmojiUrl}\n          />\n        );\n      })}\n    </EmojiCategory>\n  );\n}\n","import * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  Categories,\n  CategoryConfig,\n  categoryFromCategoryConfig\n} from '../../config/categoryConfig';\nimport {\n  useCategoriesConfig,\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useLazyLoadEmojisConfig,\n  useSkinTonesDisabledConfig\n} from '../../config/useConfig';\nimport { emojisByCategory, emojiUnified } from '../../dataUtils/emojiSelectors';\nimport { useIsEmojiDisallowed } from '../../hooks/useDisallowedEmojis';\nimport { useIsEmojiHidden } from '../../hooks/useIsEmojiHidden';\nimport {\n  useActiveSkinToneState,\n  useIsPastInitialLoad\n} from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport { EmojiCategory } from './EmojiCategory';\nimport { Suggested } from './Suggested';\n\nimport './EmojiList.css';\n\nexport function EmojiList() {\n  const categories = useCategoriesConfig();\n\n  return (\n    <ul className={ClassNames.emojiList}>\n      {categories.map((categoryConfig, index) => {\n        const category = categoryFromCategoryConfig(categoryConfig);\n\n        if (category === Categories.SUGGESTED) {\n          return <Suggested key={category} categoryConfig={categoryConfig} />;\n        }\n\n        return (\n          <RenderCategory\n            key={category}\n            index={index}\n            category={category}\n            categoryConfig={categoryConfig}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction RenderCategory({\n  index,\n  category,\n  categoryConfig\n}: {\n  index: number;\n  category: Categories;\n  categoryConfig: CategoryConfig;\n}) {\n  const isEmojiHidden = useIsEmojiHidden();\n  const lazyLoadEmojis = useLazyLoadEmojisConfig();\n  const emojiStyle = useEmojiStyleConfig();\n  const isPastInitialLoad = useIsPastInitialLoad();\n  const [activeSkinTone] = useActiveSkinToneState();\n  const isEmojiDisallowed = useIsEmojiDisallowed();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const showVariations = !useSkinTonesDisabledConfig();\n\n  // Small trick to defer the rendering of all emoji categories until the first category is visible\n  // This way the user gets to actually see something and not wait for the whole picker to render.\n  const emojisToPush =\n    !isPastInitialLoad && index > 1 ? [] : emojisByCategory(category);\n\n  let hiddenCounter = 0;\n\n  const emojis = emojisToPush.map(emoji => {\n    const unified = emojiUnified(emoji, activeSkinTone);\n    const { failedToLoad, filteredOut, hidden } = isEmojiHidden(emoji);\n\n    const isDisallowed = isEmojiDisallowed(emoji);\n\n    if (hidden || isDisallowed) {\n      hiddenCounter++;\n    }\n\n    if (isDisallowed) {\n      return null;\n    }\n\n    return (\n      <ClickableEmoji\n        showVariations={showVariations}\n        key={unified}\n        emoji={emoji}\n        unified={unified}\n        hidden={failedToLoad}\n        hiddenOnSearch={filteredOut}\n        emojiStyle={emojiStyle}\n        lazyLoad={lazyLoadEmojis}\n        getEmojiUrl={getEmojiUrl}\n      />\n    );\n  });\n\n  return (\n    <EmojiCategory\n      categoryConfig={categoryConfig}\n      // Indicates that there are no visible emojis\n      // Hence, the category should be hidden\n      hidden={hiddenCounter === emojis.length}\n    >\n      {emojis}\n    </EmojiCategory>\n  );\n}\n","import {\n  elementCountInRow,\n  elementIndexInRow,\n  getElementInNextRow,\n  getElementInPrevRow,\n  getElementInRow,\n  hasNextRow,\n  rowNumber\n} from './elementPositionInRow';\nimport { focusElement } from './focusElement';\nimport { scrollEmojiAboveLabel } from './scrollTo';\nimport {\n  allVisibleEmojis,\n  closestCategory,\n  firstVisibleEmoji,\n  lastVisibleEmoji,\n  nextCategory,\n  nextVisibleEmoji,\n  NullableElement,\n  prevCategory,\n  prevVisibleEmoji,\n  closestCategoryContent\n} from './selectors';\n\nexport function focusFirstVisibleEmoji(parent: NullableElement) {\n  const emoji = firstVisibleEmoji(parent);\n  focusElement(emoji);\n  scrollEmojiAboveLabel(emoji);\n}\n\nexport function focusAndClickFirstVisibleEmoji(parent: NullableElement) {\n  const firstEmoji = firstVisibleEmoji(parent);\n\n  focusElement(firstEmoji);\n  firstEmoji?.click();\n}\n\nexport function focusLastVisibleEmoji(parent: NullableElement) {\n  focusElement(lastVisibleEmoji(parent));\n}\n\nexport function focusNextVisibleEmoji(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const next = nextVisibleEmoji(element);\n\n  if (!next) {\n    return focusFirstVisibleEmoji(nextCategory(element));\n  }\n\n  focusElement(next);\n  scrollEmojiAboveLabel(next);\n}\n\nexport function focusPrevVisibleEmoji(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const prev = prevVisibleEmoji(element);\n\n  if (!prev) {\n    return focusLastVisibleEmoji(prevCategory(element));\n  }\n\n  focusElement(prev);\n  scrollEmojiAboveLabel(prev);\n}\n\nexport function focusVisibleEmojiOneRowUp(\n  element: NullableElement,\n  exitUp: () => void\n) {\n  if (!element) {\n    return;\n  }\n\n  const prev = visibleEmojiOneRowUp(element);\n\n  if (!prev) {\n    return exitUp();\n  }\n\n  focusElement(prev);\n  scrollEmojiAboveLabel(prev);\n}\n\nexport function focusVisibleEmojiOneRowDown(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const next = visibleEmojiOneRowDown(element);\n\n  return focusElement(next);\n}\n\nfunction visibleEmojiOneRowUp(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const categoryContent = closestCategoryContent(element);\n  const category = closestCategory(categoryContent);\n  const indexInRow = elementIndexInRow(categoryContent, element);\n  const row = rowNumber(categoryContent, element);\n  const countInRow = elementCountInRow(categoryContent, element);\n\n  if (row === 0) {\n    const prevVisibleCategory = prevCategory(category);\n\n    if (!prevVisibleCategory) {\n      return null;\n    }\n\n    return getElementInRow(\n      allVisibleEmojis(prevVisibleCategory),\n      -1, // last row\n      countInRow,\n      indexInRow\n    );\n  }\n\n  return getElementInPrevRow(\n    allVisibleEmojis(categoryContent),\n    row,\n    countInRow,\n    indexInRow\n  );\n}\n\nfunction visibleEmojiOneRowDown(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const categoryContent = closestCategoryContent(element);\n  const category = closestCategory(categoryContent);\n  const indexInRow = elementIndexInRow(categoryContent, element);\n  const row = rowNumber(categoryContent, element);\n  const countInRow = elementCountInRow(categoryContent, element);\n  if (!hasNextRow(categoryContent, element)) {\n    const nextVisibleCategory = nextCategory(category);\n\n    if (!nextVisibleCategory) {\n      return null;\n    }\n\n    return getElementInRow(\n      allVisibleEmojis(nextVisibleCategory),\n      0,\n      countInRow,\n      indexInRow\n    );\n  }\n\n  const itemInNextRow = getElementInNextRow(\n    allVisibleEmojis(categoryContent),\n    row,\n    countInRow,\n    indexInRow\n  );\n\n  return itemInNextRow;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { focusFirstVisibleEmoji } from '../../DomUtils/keyboardNavigation';\nimport {\n  buttonFromTarget,\n  elementHeight,\n  emojiTrueOffsetTop,\n  emojiTruOffsetLeft\n} from '../../DomUtils/selectors';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig\n} from '../../config/useConfig';\nimport {\n  emojiHasVariations,\n  emojiUnified,\n  emojiVariations\n} from '../../dataUtils/emojiSelectors';\nimport {\n  useAnchoredEmojiRef,\n  useBodyRef,\n  useSetAnchoredEmojiRef,\n  useVariationPickerRef\n} from '../context/ElementRefContext';\nimport { useEmojiVariationPickerState } from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\nimport './EmojiVariationPicker.css';\n\nenum Direction {\n  Up,\n  Down\n}\n\nexport function EmojiVariationPicker() {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  const VariationPickerRef = useVariationPickerRef();\n  const [emoji] = useEmojiVariationPickerState();\n  const emojiStyle = useEmojiStyleConfig();\n\n  const { getTop, getMenuDirection } = useVariationPickerTop(\n    VariationPickerRef\n  );\n  const setAnchoredEmojiRef = useSetAnchoredEmojiRef();\n  const getPointerStyle = usePointerStyle(VariationPickerRef);\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n  const visible =\n    emoji &&\n    button &&\n    emojiHasVariations(emoji) &&\n    button.classList.contains(ClassNames.emojiHasVariatios);\n\n  useEffect(() => {\n    if (!visible) {\n      return;\n    }\n\n    focusFirstVisibleEmoji(VariationPickerRef.current);\n  }, [VariationPickerRef, visible, AnchoredEmojiRef]);\n\n  let top, pointerStyle;\n\n  if (!visible && AnchoredEmojiRef.current) {\n    setAnchoredEmojiRef(null);\n  } else {\n    top = getTop();\n    pointerStyle = getPointerStyle();\n  }\n\n  return (\n    <div\n      ref={VariationPickerRef}\n      className={clsx(ClassNames.variationPicker, {\n        visible,\n        'pointing-up': getMenuDirection() === Direction.Down\n      })}\n      style={{ top }}\n    >\n      {visible && emoji\n        ? [emojiUnified(emoji)]\n            .concat(emojiVariations(emoji))\n            .slice(0, 6)\n            .map(unified => (\n              <ClickableEmoji\n                key={unified}\n                emoji={emoji}\n                unified={unified}\n                emojiStyle={emojiStyle}\n                showVariations={false}\n                getEmojiUrl={getEmojiUrl}\n              />\n            ))\n        : null}\n      <div className=\"epr-emoji-pointer\" style={pointerStyle} />\n    </div>\n  );\n}\n\nfunction usePointerStyle(VariationPickerRef: React.RefObject<HTMLElement>) {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  return function getPointerStyle() {\n    const style: React.CSSProperties = {};\n    if (!VariationPickerRef.current) {\n      return style;\n    }\n\n    if (AnchoredEmojiRef.current) {\n      const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n      const offsetLeft = emojiTruOffsetLeft(button);\n\n      if (!button) {\n        return style;\n      }\n\n      // half of the button\n      style.left = offsetLeft + button?.clientWidth / 2;\n    }\n\n    return style;\n  };\n}\n\nfunction useVariationPickerTop(\n  VariationPickerRef: React.RefObject<HTMLElement>\n) {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  const BodyRef = useBodyRef();\n  let direction = Direction.Up;\n\n  return {\n    getMenuDirection,\n    getTop\n  };\n\n  function getMenuDirection() {\n    return direction;\n  }\n\n  function getTop() {\n    direction = Direction.Up;\n    let emojiOffsetTop = 0;\n\n    if (!VariationPickerRef.current) {\n      return 0;\n    }\n\n    const height = elementHeight(VariationPickerRef.current);\n\n    if (AnchoredEmojiRef.current) {\n      const bodyRef = BodyRef.current;\n      const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n      const buttonHeight = elementHeight(button);\n\n      emojiOffsetTop = emojiTrueOffsetTop(button);\n\n      const scrollTop = bodyRef?.scrollTop ?? 0;\n\n      if (scrollTop > emojiOffsetTop - height) {\n        direction = Direction.Down;\n        emojiOffsetTop += buttonHeight + height;\n      }\n    }\n\n    return emojiOffsetTop - height;\n  }\n}\n","import * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { useOnMouseMove } from '../../hooks/useDisallowMouseMove';\nimport { useMouseDownHandlers } from '../../hooks/useMouseDownHandlers';\nimport { useOnScroll } from '../../hooks/useOnScroll';\nimport { useBodyRef } from '../context/ElementRefContext';\n\nimport { EmojiList } from './EmojiList';\nimport { EmojiVariationPicker } from './EmojiVariationPicker';\n\nimport './Body.css';\n\nexport function Body() {\n  const BodyRef = useBodyRef();\n  useOnScroll(BodyRef);\n  useMouseDownHandlers(BodyRef);\n  useOnMouseMove();\n\n  return (\n    <div className={ClassNames.scrollBody} ref={BodyRef}>\n      <EmojiVariationPicker />\n      <EmojiList />\n    </div>\n  );\n}\n","import { useEffect } from 'react';\n\nimport { ElementRef } from '../components/context/ElementRefContext';\n\nimport { useCloseAllOpenToggles } from './useCloseAllOpenToggles';\n\nexport function useOnScroll(BodyRef: ElementRef) {\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  useEffect(() => {\n    const bodyRef = BodyRef.current;\n    if (!bodyRef) {\n      return;\n    }\n\n    bodyRef.addEventListener('scroll', onScroll, {\n      passive: true\n    });\n\n    function onScroll() {\n      closeAllOpenToggles();\n    }\n\n    return () => {\n      bodyRef?.removeEventListener('scroll', onScroll);\n    };\n  }, [BodyRef, closeAllOpenToggles]);\n}\n","import { useSkinTonePickerLocationConfig } from '../config/useConfig';\nimport { SkinTonePickerLocation } from '../types/exposedTypes';\n\nexport function useShouldShowSkinTonePicker() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return function shouldShowSkinTonePicker(location: SkinTonePickerLocation) {\n    return skinTonePickerLocationConfig === location;\n  };\n}\n\nexport function useIsSkinToneInSearch() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return skinTonePickerLocationConfig === SkinTonePickerLocation.SEARCH;\n}\n\nexport function useIsSkinToneInPreview() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return skinTonePickerLocationConfig === SkinTonePickerLocation.PREVIEW;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\nimport './Flex.css';\n\nexport enum FlexDirection {\n  ROW = 'FlexRow',\n  COLUMN = 'FlexColumn'\n}\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n  direction?: FlexDirection;\n}>;\n\nexport default function Flex({\n  children,\n  className,\n  style = {},\n  direction = FlexDirection.ROW\n}: Props) {\n  return (\n    <div style={{ ...style }} className={clsx('Flex', className, direction)}>\n      {children}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\n\ntype Props = Readonly<{\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Space({ className, style = {} }: Props) {\n  return <div style={{ flex: 1, ...style }} className={clsx(className)} />;\n}\n","import * as React from 'react';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Absolute({ children, className, style }: Props) {\n  return (\n    <div style={{ ...style, position: 'absolute' }} className={className}>\n      {children}\n    </div>\n  );\n}\n","import * as React from 'react';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Relative({ children, className, style }: Props) {\n  return (\n    <div style={{ ...style, position: 'relative' }} className={className}>\n      {children}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { useSkinTonesDisabledConfig } from '../../config/useConfig';\nimport skinToneVariations, {\n  skinTonesNamed\n} from '../../data/skinToneVariations';\nimport { useCloseAllOpenToggles } from '../../hooks/useCloseAllOpenToggles';\nimport { useFocusSearchInput } from '../../hooks/useFocus';\nimport { SkinTones } from '../../types/exposedTypes';\nimport Absolute from '../Layout/Absolute';\nimport Relative from '../Layout/Relative';\nimport { Button } from '../atoms/Button';\nimport { useSkinTonePickerRef } from '../context/ElementRefContext';\nimport {\n  useActiveSkinToneState,\n  useSkinToneFanOpenState\n} from '../context/PickerContext';\nimport './SkinTonePicker.css';\n\nconst ITEM_SIZE = 28;\n\ntype Props = {\n  direction?: SkinTonePickerDirection;\n};\n\nexport function SkinTonePickerMenu() {\n  return (\n    <Relative style={{ height: ITEM_SIZE }}>\n      <Absolute style={{ bottom: 0, right: 0 }}>\n        <SkinTonePicker direction={SkinTonePickerDirection.VERTICAL} />\n      </Absolute>\n    </Relative>\n  );\n}\n\nexport function SkinTonePicker({\n  direction = SkinTonePickerDirection.HORIZONTAL\n}: Props) {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n  const isDisabled = useSkinTonesDisabledConfig();\n  const [isOpen, setIsOpen] = useSkinToneFanOpenState();\n  const [activeSkinTone, setActiveSkinTone] = useActiveSkinToneState();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const focusSearchInput = useFocusSearchInput();\n\n  if (isDisabled) {\n    return null;\n  }\n\n  const fullWidth = `${ITEM_SIZE * skinToneVariations.length}px`;\n\n  const expandedSize = isOpen ? fullWidth : ITEM_SIZE + 'px';\n\n  const vertical = direction === SkinTonePickerDirection.VERTICAL;\n\n  return (\n    <Relative\n      className={clsx('epr-skin-tones', direction, {\n        [ClassNames.open]: isOpen\n      })}\n      style={\n        vertical\n          ? { flexBasis: expandedSize, height: expandedSize }\n          : { flexBasis: expandedSize }\n      }\n    >\n      <div className=\"epr-skin-tone-select\" ref={SkinTonePickerRef}>\n        {skinToneVariations.map((skinToneVariation, i) => {\n          const active = skinToneVariation === activeSkinTone;\n          return (\n            <Button\n              style={{\n                transform: clsx(\n                  vertical\n                    ? `translateY(-${i * (isOpen ? ITEM_SIZE : 0)}px)`\n                    : `translateX(-${i * (isOpen ? ITEM_SIZE : 0)}px)`,\n                  isOpen && active && 'scale(1.3)'\n                )\n              }}\n              onClick={() => {\n                if (isOpen) {\n                  setActiveSkinTone(skinToneVariation);\n                  focusSearchInput();\n                } else {\n                  setIsOpen(true);\n                }\n                closeAllOpenToggles();\n              }}\n              key={skinToneVariation}\n              className={clsx(`epr-tone-${skinToneVariation}`, 'epr-tone', {\n                [ClassNames.active]: active\n              })}\n              tabIndex={isOpen ? 0 : -1}\n              aria-pressed={active}\n              aria-label={`Skin tone ${\n                skinTonesNamed[skinToneVariation as SkinTones]\n              }`}\n            ></Button>\n          );\n        })}\n      </div>\n    </Relative>\n  );\n}\n\nexport enum SkinTonePickerDirection {\n  VERTICAL = ClassNames.vertical,\n  HORIZONTAL = ClassNames.horizontal\n}\n","import * as React from 'react';\nimport { useState } from 'react';\n\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  usePreviewConfig\n} from '../../config/useConfig';\nimport {\n  emojiByUnified,\n  emojiName,\n  emojiUnified\n} from '../../dataUtils/emojiSelectors';\nimport { useEmojiPreviewEvents } from '../../hooks/useEmojiPreviewEvents';\nimport { useIsSkinToneInPreview } from '../../hooks/useShouldShowSkinTonePicker';\nimport Flex from '../Layout/Flex';\nimport Space from '../Layout/Space';\nimport { useEmojiVariationPickerState } from '../context/PickerContext';\nimport { ViewOnlyEmoji } from '../emoji/Emoji';\nimport './Preview.css';\nimport { SkinTonePickerMenu } from '../header/SkinTonePicker';\n\nexport function Preview() {\n  const previewConfig = usePreviewConfig();\n  const isSkinToneInPreview = useIsSkinToneInPreview();\n\n  if (!previewConfig.showPreview) {\n    return null;\n  }\n\n  return (\n    <Flex className=\"epr-preview\">\n      <PreviewBody />\n      <Space />\n      {isSkinToneInPreview ? <SkinTonePickerMenu /> : null}\n    </Flex>\n  );\n}\n\nexport function PreviewBody() {\n  const previewConfig = usePreviewConfig();\n  const [previewEmoji, setPreviewEmoji] = useState<PreviewEmoji>(null);\n  const emojiStyle = useEmojiStyleConfig();\n  const [variationPickerEmoji] = useEmojiVariationPickerState();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  useEmojiPreviewEvents(previewConfig.showPreview, setPreviewEmoji);\n\n  const emoji = emojiByUnified(previewEmoji?.originalUnified);\n\n  const show = emoji != null && previewEmoji != null;\n\n  return <PreviewContent />;\n\n  function PreviewContent() {\n    const defaultEmoji = variationPickerEmoji ?? emojiByUnified(previewConfig.defaultEmoji)\n    if (!defaultEmoji) {\n      return null\n    }\n    const defaultText = variationPickerEmoji\n      ? emojiName(variationPickerEmoji)\n      : previewConfig.defaultCaption;\n\n    return (\n      <>\n        <div>\n          {show ? (\n            <ViewOnlyEmoji\n              unified={previewEmoji?.unified as string}\n              emoji={emoji}\n              emojiStyle={emojiStyle}\n              size={45}\n              getEmojiUrl={getEmojiUrl}\n            />\n          ) : defaultEmoji ? (\n            <ViewOnlyEmoji\n              unified={emojiUnified(defaultEmoji)}\n              emoji={defaultEmoji}\n              emojiStyle={emojiStyle}\n              size={45}\n              getEmojiUrl={getEmojiUrl}\n            />\n          ) : null}\n        </div>\n        {show ? (\n          <div className=\"epr-preview-emoji-label\">\n            {emojiName(emoji)}\n          </div>\n        ) : (\n          <div className=\"epr-preview-emoji-label\">{defaultText}</div>\n        )}\n      </>\n    );\n  }\n}\n\nexport type PreviewEmoji = null | {\n  unified: string;\n  originalUnified: string;\n};\n","import * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { focusElement } from '../DomUtils/focusElement';\nimport {\n  buttonFromTarget,\n  originalUnifiedFromEmojiElement,\n  unifiedFromEmojiElement\n} from '../DomUtils/selectors';\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { PreviewEmoji } from '../components/footer/Preview';\n\nimport {\n  useAllowMouseMove,\n  useIsMouseDisallowed\n} from './useDisallowMouseMove';\n\nexport function useEmojiPreviewEvents(\n  allow: boolean,\n  setPreviewEmoji: React.Dispatch<React.SetStateAction<PreviewEmoji>>\n) {\n  const BodyRef = useBodyRef();\n  const isMouseDisallowed = useIsMouseDisallowed();\n  const allowMouseMove = useAllowMouseMove();\n\n  useEffect(() => {\n    if (!allow) {\n      return;\n    }\n    const bodyRef = BodyRef.current;\n\n    bodyRef?.addEventListener('keydown', onEscape, {\n      passive: true\n    });\n\n    bodyRef?.addEventListener('mouseover', onMouseOver, true);\n\n    bodyRef?.addEventListener('focus', onEnter, true);\n\n    bodyRef?.addEventListener('mouseout', onLeave, {\n      passive: true\n    });\n    bodyRef?.addEventListener('blur', onLeave, true);\n\n\n    function onEnter(e: FocusEvent) {\n      const button = buttonFromTarget(e.target as HTMLElement);\n\n      if (!button) {\n        return onLeave();\n      }\n\n      const unified = unifiedFromEmojiElement(button);\n      const originalUnified = originalUnifiedFromEmojiElement(button);\n\n      if (!unified || !originalUnified) {\n        return onLeave();\n      }\n\n      setPreviewEmoji({\n        unified,\n        originalUnified\n      });\n    }\n    function onLeave(e?: FocusEvent | MouseEvent) {\n      if (e) {\n        const relatedTarget = e.relatedTarget as HTMLElement;\n\n        if (!buttonFromTarget(relatedTarget)) {\n          return setPreviewEmoji(null);\n        }\n      }\n\n      setPreviewEmoji(null);\n    }\n    function onEscape(e: KeyboardEvent) {\n      if (e.key === 'Escape') {\n        setPreviewEmoji(null);\n      }\n    }\n\n    function onMouseOver(e: MouseEvent) {\n      if (isMouseDisallowed()) {\n        return;\n      }\n\n      const button = buttonFromTarget(e.target as HTMLElement);\n\n      if (button) {\n        focusElement(button);\n      }\n    }\n\n\n    return () => {\n      bodyRef?.removeEventListener('mouseover', onMouseOver);\n      bodyRef?.removeEventListener('mouseout', onLeave);\n      bodyRef?.removeEventListener('focus', onEnter, true);\n      bodyRef?.removeEventListener('blur', onLeave, true);\n      bodyRef?.removeEventListener('keydown', onEscape);\n    };\n  }, [BodyRef, allow, setPreviewEmoji, isMouseDisallowed, allowMouseMove]);\n}\n","export function categoryNameFromDom($category: Element | null): string | null {\n  return $category?.getAttribute('data-name') ?? null;\n}\n","import { useSearchTermState } from '../components/context/PickerContext';\n\nexport default function useIsSearchMode(): boolean {\n  const [searchTerm] = useSearchTermState();\n\n  return !!searchTerm;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport './CategoryNavigation.css';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  categoryFromCategoryConfig,\n  categoryNameFromCategoryConfig\n} from '../../config/categoryConfig';\nimport { useCategoriesConfig } from '../../config/useConfig';\nimport { useActiveCategoryScrollDetection } from '../../hooks/useActiveCategoryScrollDetection';\nimport useIsSearchMode from '../../hooks/useIsSearchMode';\nimport { useScrollCategoryIntoView } from '../../hooks/useScrollCategoryIntoView';\nimport { Button } from '../atoms/Button';\nimport { useCategoryNavigationRef } from '../context/ElementRefContext';\n\nexport function CategoryNavigation() {\n  const [activeCategory, setActiveCategory] = useState<string | null>(null);\n  const scrollCategoryIntoView = useScrollCategoryIntoView();\n  useActiveCategoryScrollDetection(setActiveCategory);\n  const isSearchMode = useIsSearchMode();\n\n  const categoriesConfig = useCategoriesConfig();\n  const CategoryNavigationRef = useCategoryNavigationRef();\n\n  return (\n    <div className=\"epr-category-nav\" ref={CategoryNavigationRef}>\n      {categoriesConfig.map(categoryConfig => {\n        const category = categoryFromCategoryConfig(categoryConfig);\n        return (\n          <Button\n            tabIndex={isSearchMode ? -1 : 0}\n            className={clsx('epr-cat-btn', `epr-icn-${category}`, {\n              [ClassNames.active]: category === activeCategory\n            })}\n            key={category}\n            onClick={() => {\n              setActiveCategory(category);\n              scrollCategoryIntoView(category);\n            }}\n            aria-label={categoryNameFromCategoryConfig(categoryConfig)}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","import { scrollTo } from '../DomUtils/scrollTo';\nimport { NullableElement } from '../DomUtils/selectors';\nimport {\n  useBodyRef,\n  usePickerMainRef\n} from '../components/context/ElementRefContext';\n\nexport function useScrollCategoryIntoView() {\n  const BodyRef = useBodyRef();\n  const PickerMainRef = usePickerMainRef();\n\n  return function scrollCategoryIntoView(category: string): void {\n    if (!BodyRef.current) {\n      return;\n    }\n    const $category = BodyRef.current?.querySelector(\n      `[data-name=\"${category}\"]`\n    ) as NullableElement;\n\n    if (!$category) {\n      return;\n    }\n\n    const offsetTop = $category.offsetTop || 0;\n\n    scrollTo(PickerMainRef.current, offsetTop);\n  };\n}\n","import { useEffect } from 'react';\n\nimport { categoryNameFromDom } from '../DomUtils/categoryNameFromDom';\nimport { asSelectors, ClassNames } from '../DomUtils/classNames';\nimport { useBodyRef } from '../components/context/ElementRefContext';\n\nexport function useActiveCategoryScrollDetection(\n  setActiveCategory: (category: string) => void\n) {\n  const BodyRef = useBodyRef();\n\n  useEffect(() => {\n    const visibleCategories = new Map();\n    const bodyRef = BodyRef.current;\n    const observer = new IntersectionObserver(\n      entries => {\n        if (!bodyRef) {\n          return;\n        }\n\n        for (const entry of entries) {\n          const id = categoryNameFromDom(entry.target);\n          visibleCategories.set(id, entry.intersectionRatio);\n        }\n\n        const ratios = Array.from(visibleCategories);\n        const lastCategory = ratios[ratios.length - 1];\n\n        if (lastCategory[1] == 1) {\n          return setActiveCategory(lastCategory[0]);\n        }\n\n        for (const [id, ratio] of ratios) {\n          if (ratio) {\n            setActiveCategory(id);\n            break;\n          }\n        }\n      },\n      {\n        threshold: [0, 1]\n      }\n    );\n    bodyRef?.querySelectorAll(asSelectors(ClassNames.category)).forEach(el => {\n      observer.observe(el);\n    });\n  }, [BodyRef, setActiveCategory]);\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\nimport { useState } from 'react';\n\nimport { asSelectors, ClassNames } from '../../DomUtils/classNames';\nimport {\n  useAutoFocusSearchConfig,\n  useSearchDisabledConfig,\n  useSearchPlaceHolderConfig\n} from '../../config/useConfig';\nimport { useCloseAllOpenToggles } from '../../hooks/useCloseAllOpenToggles';\nimport {\n  getNormalizedSearchTerm,\n  useClearSearch,\n  useFilter\n} from '../../hooks/useFilter';\nimport { useIsSkinToneInSearch } from '../../hooks/useShouldShowSkinTonePicker';\nimport Flex from '../Layout/Flex';\nimport Relative from '../Layout/Relative';\nimport { Button } from '../atoms/Button';\nimport { useSearchInputRef } from '../context/ElementRefContext';\n\nimport './Search.css';\nimport { SkinTonePicker } from './SkinTonePicker';\n\nexport function SearchContainer() {\n  const searchDisabled = useSearchDisabledConfig();\n\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n\n  if (searchDisabled) {\n    return null;\n  }\n\n  return (\n    <Flex className=\"epr-header-overlay\">\n      <Search />\n\n      {isSkinToneInSearch ? <SkinTonePicker /> : null}\n    </Flex>\n  );\n}\n\nexport function Search() {\n  const [inc, setInc] = useState(0);\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const SearchInputRef = useSearchInputRef();\n  const clearSearch = useClearSearch();\n  const placeholder = useSearchPlaceHolderConfig();\n  const autoFocus = useAutoFocusSearchConfig();\n  const { onChange } = useFilter();\n\n  const input = SearchInputRef?.current;\n  const value = input?.value;\n\n  return (\n    <Relative className=\"epr-search-container\">\n      <CssSearch value={value} />\n      <input\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus={autoFocus}\n        aria-label={'Type to search for an emoji'}\n        onFocus={closeAllOpenToggles}\n        className=\"epr-search\"\n        type=\"text\"\n        placeholder={placeholder}\n        onChange={event => {\n          setInc(inc + 1);\n          setTimeout(() => {\n            onChange(event?.target?.value ?? value);\n          });\n        }}\n        ref={SearchInputRef}\n      />\n      <div className=\"epr-icn-search\" />\n      <Button\n        className={clsx('epr-btn-clear-search', 'epr-visible-on-search-only')}\n        onClick={clearSearch}\n      >\n        <div className=\"epr-icn-clear-search\" />\n      </Button>\n    </Relative>\n  );\n}\n\nconst CSS_SEARCH_SELECTOR = `${asSelectors(\n  ClassNames.emojiPicker\n)} ${asSelectors(ClassNames.emojiList)}`;\n\nfunction CssSearch({ value }: { value: undefined | string }) {\n  if (!value) {\n    return null;\n  }\n\n  const searchQuery = `button[data-full-name*=\"${getNormalizedSearchTerm(\n    value\n  )}\"]`;\n\n  return (\n    <style>{`\n        ${CSS_SEARCH_SELECTOR} ${asSelectors(\n      ClassNames.category\n    )}:not(:has(${searchQuery})) {\n        display: none;\n      }\n\n        ${CSS_SEARCH_SELECTOR} button${asSelectors(\n      ClassNames.emoji\n    )}:not(${searchQuery}) {\n        display: none;\n      }\n  `}</style>\n  );\n}\n","import { useCallback, useEffect, useMemo } from 'react';\n\nimport { hasNextElementSibling } from '../DomUtils/elementPositionInRow';\nimport {\n  focusNextElementSibling,\n  focusPrevElementSibling\n} from '../DomUtils/focusElement';\nimport { getActiveElement } from '../DomUtils/getActiveElement';\nimport {\n  focusAndClickFirstVisibleEmoji,\n  focusFirstVisibleEmoji,\n  focusNextVisibleEmoji,\n  focusPrevVisibleEmoji,\n  focusVisibleEmojiOneRowDown,\n  focusVisibleEmojiOneRowUp\n} from '../DomUtils/keyboardNavigation';\nimport { useScrollTo } from '../DomUtils/scrollTo';\nimport { buttonFromTarget } from '../DomUtils/selectors';\nimport {\n  useBodyRef,\n  useCategoryNavigationRef,\n  usePickerMainRef,\n  useSearchInputRef,\n  useSkinTonePickerRef\n} from '../components/context/ElementRefContext';\nimport { useSkinToneFanOpenState } from '../components/context/PickerContext';\n\nimport {\n  useCloseAllOpenToggles,\n  useHasOpenToggles\n} from './useCloseAllOpenToggles';\nimport { useDisallowMouseMove } from './useDisallowMouseMove';\nimport { useAppendSearch, useClearSearch } from './useFilter';\nimport {\n  useFocusCategoryNavigation,\n  useFocusSearchInput,\n  useFocusSkinTonePicker\n} from './useFocus';\nimport useIsSearchMode from './useIsSearchMode';\nimport useSetVariationPicker from './useSetVariationPicker';\nimport {\n  useIsSkinToneInPreview,\n  useIsSkinToneInSearch\n} from './useShouldShowSkinTonePicker';\nimport { useSearchDisabledConfig } from '../config/useConfig';\n\nenum KeyboardEvents {\n  ArrowDown = 'ArrowDown',\n  ArrowUp = 'ArrowUp',\n  ArrowLeft = 'ArrowLeft',\n  ArrowRight = 'ArrowRight',\n  Escape = 'Escape',\n  Enter = 'Enter',\n  Space = ' '\n}\n\nexport function useKeyboardNavigation() {\n  usePickerMainKeyboardEvents();\n  useSearchInputKeyboardEvents();\n  useSkinTonePickerKeyboardEvents();\n  useCategoryNavigationKeyboardEvents();\n  useBodyKeyboardEvents();\n}\n\nfunction usePickerMainKeyboardEvents() {\n  const PickerMainRef = usePickerMainRef();\n  const clearSearch = useClearSearch();\n  const scrollTo = useScrollTo();\n  const SearchInputRef = useSearchInputRef();\n  const focusSearchInput = useFocusSearchInput();\n  const hasOpenToggles = useHasOpenToggles();\n  const disallowMouseMove = useDisallowMouseMove();\n\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        disallowMouseMove();\n        switch (key) {\n          // eslint-disable-next-line no-fallthrough\n          case KeyboardEvents.Escape:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              return;\n            }\n            clearSearch();\n            scrollTo(0);\n            focusSearchInput();\n            break;\n        }\n      },\n    [\n      scrollTo,\n      clearSearch,\n      closeAllOpenToggles,\n      focusSearchInput,\n      hasOpenToggles,\n      disallowMouseMove\n    ]\n  );\n\n  useEffect(() => {\n    const current = PickerMainRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [PickerMainRef, SearchInputRef, scrollTo, onKeyDown]);\n}\n\nfunction useSearchInputKeyboardEvents() {\n  const focusSkinTonePicker = useFocusSkinTonePicker();\n  const PickerMainRef = usePickerMainRef();\n  const BodyRef = useBodyRef();\n  const SearchInputRef = useSearchInputRef();\n  const [, setSkinToneFanOpenState] = useSkinToneFanOpenState();\n  const goDownFromSearchInput = useGoDownFromSearchInput();\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowRight:\n            if (!isSkinToneInSearch) {\n              return;\n            }\n            event.preventDefault();\n            setSkinToneFanOpenState(true);\n            focusSkinTonePicker();\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            goDownFromSearchInput();\n            break;\n          case KeyboardEvents.Enter:\n            event.preventDefault();\n            focusAndClickFirstVisibleEmoji(BodyRef.current);\n            break;\n        }\n      },\n    [\n      focusSkinTonePicker,\n      goDownFromSearchInput,\n      setSkinToneFanOpenState,\n      BodyRef,\n      isSkinToneInSearch\n    ]\n  );\n\n  useEffect(() => {\n    const current = SearchInputRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [PickerMainRef, SearchInputRef, onKeyDown]);\n}\n\nfunction useSkinTonePickerKeyboardEvents() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n  const focusSearchInput = useFocusSearchInput();\n  const SearchInputRef = useSearchInputRef();\n  const goDownFromSearchInput = useGoDownFromSearchInput();\n  const [isOpen, setIsOpen] = useSkinToneFanOpenState();\n  const isSkinToneInPreview = useIsSkinToneInPreview();\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      // eslint-disable-next-line complexity\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        if (isSkinToneInSearch) {\n          switch (key) {\n            case KeyboardEvents.ArrowLeft:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusNextSkinTone(focusSearchInput);\n              break;\n            case KeyboardEvents.ArrowRight:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusPrevSkinTone();\n              break;\n            case KeyboardEvents.ArrowDown:\n              event.preventDefault();\n              if (isOpen) {\n                setIsOpen(false);\n              }\n              goDownFromSearchInput();\n              break;\n            default:\n              onType(event);\n              break;\n          }\n        }\n\n        if (isSkinToneInPreview) {\n          switch (key) {\n            case KeyboardEvents.ArrowUp:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusNextSkinTone(focusSearchInput);\n              break;\n            case KeyboardEvents.ArrowDown:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusPrevSkinTone();\n              break;\n            default:\n              onType(event);\n              break;\n          }\n        }\n      },\n    [\n      isOpen,\n      focusSearchInput,\n      setIsOpen,\n      goDownFromSearchInput,\n      onType,\n      isSkinToneInPreview,\n      isSkinToneInSearch\n    ]\n  );\n\n  useEffect(() => {\n    const current = SkinTonePickerRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [SkinTonePickerRef, SearchInputRef, isOpen, onKeyDown]);\n}\n\nfunction useCategoryNavigationKeyboardEvents() {\n  const focusSearchInput = useFocusSearchInput();\n  const CategoryNavigationRef = useCategoryNavigationRef();\n  const BodyRef = useBodyRef();\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowUp:\n            event.preventDefault();\n            focusSearchInput();\n            break;\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            focusNextElementSibling(getActiveElement());\n            break;\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            focusPrevElementSibling(getActiveElement());\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            focusFirstVisibleEmoji(BodyRef.current);\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [BodyRef, focusSearchInput, onType]\n  );\n\n  useEffect(() => {\n    const current = CategoryNavigationRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [CategoryNavigationRef, BodyRef, onKeyDown]);\n}\n\nfunction useBodyKeyboardEvents() {\n  const BodyRef = useBodyRef();\n  const goUpFromBody = useGoUpFromBody();\n  const setVariationPicker = useSetVariationPicker();\n  const hasOpenToggles = useHasOpenToggles();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      // eslint-disable-next-line complexity\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        const activeElement = buttonFromTarget(getActiveElement());\n\n        switch (key) {\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            focusNextVisibleEmoji(activeElement);\n            break;\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            focusPrevVisibleEmoji(activeElement);\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              break;\n            }\n            focusVisibleEmojiOneRowDown(activeElement);\n            break;\n          case KeyboardEvents.ArrowUp:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              break;\n            }\n            focusVisibleEmojiOneRowUp(activeElement, goUpFromBody);\n            break;\n          case KeyboardEvents.Space:\n            event.preventDefault();\n            setVariationPicker(event.target as HTMLElement);\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [\n      goUpFromBody,\n      onType,\n      setVariationPicker,\n      hasOpenToggles,\n      closeAllOpenToggles\n    ]\n  );\n\n  useEffect(() => {\n    const current = BodyRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [BodyRef, onKeyDown]);\n}\n\nfunction useGoDownFromSearchInput() {\n  const focusCategoryNavigation = useFocusCategoryNavigation();\n  const isSearchMode = useIsSearchMode();\n  const BodyRef = useBodyRef();\n\n  return useCallback(\n    function goDownFromSearchInput() {\n      if (isSearchMode) {\n        return focusFirstVisibleEmoji(BodyRef.current);\n      }\n      return focusCategoryNavigation();\n    },\n    [BodyRef, focusCategoryNavigation, isSearchMode]\n  );\n}\n\nfunction useGoUpFromBody() {\n  const focusSearchInput = useFocusSearchInput();\n  const focusCategoryNavigation = useFocusCategoryNavigation();\n  const isSearchMode = useIsSearchMode();\n\n  return useCallback(\n    function goUpFromEmoji() {\n      if (isSearchMode) {\n        return focusSearchInput();\n      }\n      return focusCategoryNavigation();\n    },\n    [focusSearchInput, isSearchMode, focusCategoryNavigation]\n  );\n}\n\nfunction focusNextSkinTone(exitLeft: () => void) {\n  const currentSkinTone = getActiveElement();\n\n  if (!currentSkinTone) {\n    return;\n  }\n\n  if (!hasNextElementSibling(currentSkinTone)) {\n    exitLeft();\n  }\n\n  focusNextElementSibling(currentSkinTone);\n}\n\nfunction focusPrevSkinTone() {\n  const currentSkinTone = getActiveElement();\n\n  if (!currentSkinTone) {\n    return;\n  }\n\n  focusPrevElementSibling(currentSkinTone);\n}\n\nfunction useOnType() {\n  const appendSearch = useAppendSearch();\n  const focusSearchInput = useFocusSearchInput();\n  const searchDisabled = useSearchDisabledConfig();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  return function onType(event: KeyboardEvent) {\n    const { key } = event;\n\n    if (hasModifier(event) || searchDisabled) {\n      return;\n    }\n\n    if (key.match(/(^[a-zA-Z0-9]$){1}/)) {\n      event.preventDefault();\n      closeAllOpenToggles();\n      focusSearchInput();\n      appendSearch(key);\n    }\n  };\n}\n\nfunction hasModifier(event: KeyboardEvent): boolean {\n  const { metaKey, ctrlKey, altKey } = event;\n\n  return metaKey || ctrlKey || altKey;\n}\n","import * as React from 'react';\n\nimport Relative from '../Layout/Relative';\nimport { CategoryNavigation } from '../navigation/CategoryNavigation';\n\nimport './Header.css';\nimport { SearchContainer } from './Search';\n\nexport function Header() {\n  return (\n    <Relative className=\"epr-header\">\n      <SearchContainer />\n      <CategoryNavigation />\n    </Relative>\n  );\n}\n","import { NullableElement } from './selectors';\n\nexport function getActiveElement() {\n  return document.activeElement as NullableElement;\n}\n","import { GetEmojiUrl } from '../components/emoji/Emoji';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiUnified, emojiVariations } from '../dataUtils/emojiSelectors';\nimport { EmojiStyle } from '../types/exposedTypes';\n\nexport function preloadEmoji(\n  getEmojiUrl: GetEmojiUrl,\n  emoji: undefined | DataEmoji,\n  emojiStyle: EmojiStyle\n): void {\n  if (!emoji) {\n    return;\n  }\n\n  if (emojiStyle === EmojiStyle.NATIVE) {\n    return;\n  }\n\n  const unified = emojiUnified(emoji);\n\n  if (preloadedEmojs.has(unified)) {\n    return;\n  }\n\n  emojiVariations(emoji).forEach((variation) => {\n    const emojiUrl = getEmojiUrl(variation, emojiStyle);\n    preloadImage(emojiUrl);\n  });\n\n  preloadedEmojs.add(unified);\n}\n\nexport const preloadedEmojs: Set<string> = new Set();\n\nfunction preloadImage(url: string): void {\n  const image = new Image();\n  image.src = url;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { usePickerSizeConfig, useThemeConfig } from '../../config/useConfig';\nimport useIsSearchMode from '../../hooks/useIsSearchMode';\nimport { useKeyboardNavigation } from '../../hooks/useKeyboardNavigation';\nimport { useOnFocus } from '../../hooks/useOnFocus';\nimport { Theme } from '../../types/exposedTypes';\nimport { usePickerMainRef } from '../context/ElementRefContext';\nimport { PickerContextProvider } from '../context/PickerContext';\nimport './PickerMain.css';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n}>;\n\nexport default function PickerMain({ children }: Props) {\n  return (\n    <PickerContextProvider>\n      <PickerRootElement>{children}</PickerRootElement>\n    </PickerContextProvider>\n  );\n}\n\ntype RootProps = Readonly<{\n  children: React.ReactNode;\n}>;\n\nfunction PickerRootElement({ children }: RootProps) {\n  const theme = useThemeConfig();\n  const searchModeActive = useIsSearchMode();\n  const PickerMainRef = usePickerMainRef();\n  const { height, width } = usePickerSizeConfig();\n\n  useKeyboardNavigation();\n  useOnFocus();\n\n  const style = {\n    height,\n    width\n  };\n\n  return (\n    <aside\n      className={clsx(ClassNames.emojiPicker, 'epr-main', {\n        [ClassNames.searchActive]: searchModeActive,\n        'epr-dark-theme': theme === Theme.DARK\n      })}\n      ref={PickerMainRef}\n      style={style}\n    >\n      {children}\n    </aside>\n  );\n}\n","import { useEffect } from 'react';\n\nimport { buttonFromTarget, emojiFromElement } from '../DomUtils/selectors';\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { useEmojiStyleConfig, useGetEmojiUrlConfig } from '../config/useConfig';\nimport { emojiHasVariations } from '../dataUtils/emojiSelectors';\nimport { EmojiStyle } from '../types/exposedTypes';\n\nimport { preloadEmoji } from './preloadEmoji';\n\nexport function useOnFocus() {\n  const BodyRef = useBodyRef();\n  const emojiStyle = useEmojiStyleConfig();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  useEffect(() => {\n    if (emojiStyle === EmojiStyle.NATIVE) {\n      return;\n    }\n\n    const bodyRef = BodyRef.current;\n\n    bodyRef?.addEventListener('focusin', onFocus);\n\n    return () => {\n      bodyRef?.removeEventListener('focusin', onFocus);\n    };\n\n    function onFocus(event: FocusEvent) {\n      const button = buttonFromTarget(event.target as HTMLElement);\n\n      if (!button) {\n        return;\n      }\n\n      const [emoji] = emojiFromElement(button);\n\n      if (!emoji) {\n        return;\n      }\n\n      if (emojiHasVariations(emoji)) {\n        preloadEmoji(getEmojiUrl, emoji, emojiStyle);\n      }\n    }\n  }, [BodyRef, emojiStyle, getEmojiUrl]);\n}\n","import * as React from 'react';\n\nimport { Body } from './components/body/Body';\nimport { ElementRefContextProvider } from './components/context/ElementRefContext';\nimport { PickerConfigProvider } from './components/context/PickerConfigContext';\nimport { Preview } from './components/footer/Preview';\nimport { Header } from './components/header/Header';\nimport PickerMain from './components/main/PickerMain';\nimport { PickerConfig } from './config/config';\nimport './EmojiPickerReact.css';\n\nexport interface Props extends PickerConfig {}\n\nexport default function EmojiPicker(props: Props) {\n  return (\n    <ElementRefContextProvider>\n      <PickerConfigProvider {...props}>\n        <PickerMain>\n          <Header />\n          <Body />\n          <Preview />\n        </PickerMain>\n      </PickerConfigProvider>\n    </ElementRefContextProvider>\n  );\n}\n","import * as React from 'react';\n\nexport default class ErrorBoundary extends React.Component<\n  { children: React.ReactNode },\n  { hasError: boolean }\n> {\n  constructor(props: { children: React.ReactNode }) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: any) {\n    // eslint-disable-next-line no-console\n    console.error('Emoji Picker React failed to render:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n","import * as React from 'react';\n\nimport { EmojiStyle } from '../../types/exposedTypes';\n\nimport { GetEmojiUrl, ViewOnlyEmoji } from './Emoji';\n\nexport function ExportedEmoji({\n  unified,\n  size = 32,\n  emojiStyle = EmojiStyle.APPLE,\n  lazyLoad = false,\n  getEmojiUrl,\n}: {\n  unified: string;\n  emojiStyle?: EmojiStyle;\n  size?: number;\n  lazyLoad?: boolean;\n  getEmojiUrl?: GetEmojiUrl;\n}) {\n  if (!unified) {\n    return null;\n  }\n\n  return (\n    <ViewOnlyEmoji\n      unified={unified}\n      size={size}\n      emojiStyle={emojiStyle}\n      lazyLoad={lazyLoad}\n      getEmojiUrl={getEmojiUrl}\n    />\n  );\n}\n","import * as React from 'react';\n\nimport EmojiPickerReact from './EmojiPickerReact';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { PickerConfig } from './config/config';\n\nexport { ExportedEmoji as Emoji } from './components/emoji/ExportedEmoji';\n\nexport {\n  EmojiStyle,\n  SkinTones,\n  Theme,\n  Categories,\n  EmojiClickData,\n  SuggestionMode,\n  SkinTonePickerLocation\n} from './types/exposedTypes';\n\nexport interface Props extends PickerConfig {}\n\nexport default function EmojiPicker(props: Props) {\n  return (\n    <ErrorBoundary>\n      <EmojiPickerReact {...props} />\n    </ErrorBoundary>\n  );\n}\n"],"sourceRoot":""}