{"version":3,"sources":["views/apps/plans/PlanList.js"],"names":["PlanList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","field","width","cellRendererFramework","params","className","render","history","size","color","onClick","push","data","_id","runthisfunction","valueGetter","filter","policy_ID_fk","policyNum","planMinDays","valueFormatter","planType","map","ele","plan_type","join","agesupportMin","agesupportMax","planMaximum","planDeductible","preexCoverage","preexDeductible","preexMaxCoverage","CoverageCntry","policyName","planBenefitsCode_fk","value","status","getOptionDataList","axiosConfig","get","then","response","setState","Plan","console","log","onGridReady","gridApi","api","gridColumnApi","columnApi","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","this","id","swal","buttons","cancel","catch","text","delete","sm","tag","length","right","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/247.f8f7c097.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Edit, Trash2, ChevronDown } from \"react-feather\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nclass PlanList extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n\r\n    columnDefs: [\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        width: 200,\r\n        // pinned: window.innerWidth > 992 ? \"right\" : false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              {/* <Eye\r\n                className=\"mr-50\"\r\n                color=\"green\"\r\n                size={20}\r\n                onClick={() =>\r\n                  history.push(`/app/size/viewSize/${params.data._id}`)\r\n                }\r\n              /> */}\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Edit\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"blue\"\r\n                    onClick={() =>\r\n                      history.push(`/app/plans/editPlan/${params.data._id}`)\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n\r\n              <Trash2\r\n                size={20}\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  this.runthisfunction(params.data._id);\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"plan_combination_ID\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 250,\r\n        filter: true,\r\n      },\r\n      {\r\n        headerName: \"policy_num\",\r\n        field: \"EndDate\",\r\n        width: 250,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params?.data?.policy_ID_fk?.policyNum}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"planMinDays\",\r\n        field: \"planMinDays\",\r\n        width: 250,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.planMinDays}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"planType\",\r\n        field: \"planType\",\r\n        filter: true,\r\n        width: 200,\r\n        valueFormatter: (params) => {\r\n          if (params?.data?.planType) {\r\n            return params.data.planType\r\n              ?.map((ele) => ele?.plan_type)\r\n              .join(\", \");\r\n          }\r\n          return null;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"agesupportMin\",\r\n        field: \"agesupportMin\",\r\n        width: 250,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.agesupportMin}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"agesupportMax\",\r\n        field: \"agesupportMax\",\r\n        width: 250,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.agesupportMax}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"planMaximum\",\r\n        field: \"planMaximum\",\r\n        width: 250,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.planMaximum}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"planDeductible\",\r\n        field: \"Maximum\",\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.planDeductible}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"preexCoverage\",\r\n        field: \"preexCoverage\",\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data?.preexCoverage}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"preexDeductible\",\r\n        field: \"preexDeductible\",\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.preexDeductible}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"preexMaxCoverage\",\r\n        field: \"preexMaxCoverage\",\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.preexMaxCoverage}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"CoverageCntry\",\r\n        field: \"Maximum\",\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.CoverageCntry}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"policy_ID_fk\",\r\n        field: \"policy_ID_fk\",\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data?.policy_ID_fk?._id}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"policyName_fk\",\r\n        field: \"Maximum\",\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data?.policy_ID_fk?.policyName}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"policyActive_fk\",\r\n        field: \"Maximum\",\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data?.policy_ID_fk?.policyName}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"planBenefitsCode_fk\",\r\n        field: \"Maximum\",\r\n        width: 250,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data?.planBenefitsCode_fk?._id}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      // {\r\n      //   headerName: \"policy_combination_active\",\r\n      //   field: \"Maximum\",\r\n      //   width: 250,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <span>{params.data.preexDeductible}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      {\r\n        headerName: \"Status\",\r\n        field: \"status\",\r\n        filter: true,\r\n        width: 250,\r\n        cellRendererFramework: (params) => {\r\n          return params.value === \"true\" ? (\r\n            <div className=\"badge badge-pill badge-success\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.value === \"false\" ? (\r\n            <div className=\"badge badge-pill badge-warning\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : null;\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getOptionDataList();\r\n  }\r\n\r\n  getOptionDataList = () => {\r\n    axiosConfig.get(`/plan/view-plan`).then((response) => {\r\n      // const updatedPlanList = response.data.Plan?.filter(\r\n      //   (st) => st.status === \"true\"\r\n      // );\r\n      this.setState({ rowData: response.data.Plan });\r\n      console.log(response.data.Plan);\r\n    });\r\n  };\r\n  runthisfunction(id) {\r\n    swal(\r\n      `Do You Want To Delete`,\r\n      \"This item will be deleted immediately\",\r\n\r\n      {\r\n        buttons: {\r\n          cancel: \"Cancel\",\r\n          catch: { text: \"Delete \", value: \"catch\" },\r\n        },\r\n      }\r\n    ).then((value) => {\r\n      switch (value) {\r\n        case \"cancel\":\r\n          break;\r\n        case \"catch\":\r\n          axiosConfig.delete(`/plan/delete-plan/${id}`).then((response) => {\r\n            this.getOptionDataList();\r\n          });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\"></Col>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"m-2\">\r\n              <Col>\r\n                <h1 sm=\"6\" className=\"float-left\">\r\n                  Plan List\r\n                </h1>\r\n              </Col>\r\n              <Col className=\"pt-4\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      className=\" btn btn-success float-right\"\r\n                      onClick={() => history.push(\"/app/plan/addPlan\")}\r\n                    >\r\n                      Add Plan\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <CardBody>\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}{\" \"}\r\n                          -{\" \"}\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}\r\n                          >\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"search...\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <ContextLayout.Consumer>\r\n                    {(context) => (\r\n                      <AgGridReact\r\n                        gridOptions={{}}\r\n                        rowSelection=\"multiple\"\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={columnDefs}\r\n                        rowData={rowData}\r\n                        onGridReady={this.onGridReady}\r\n                        colResizeDefault={\"shift\"}\r\n                        animateRows={true}\r\n                        floatingFilter={false}\r\n                        pagination={true}\r\n                        paginationPageSize={this.state.paginationPageSize}\r\n                        pivotPanelShow=\"always\"\r\n                        enableRtl={context.state.direction === \"rtl\"}\r\n                      />\r\n                    )}\r\n                  </ContextLayout.Consumer>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default PlanList;\r\n"],"sourceRoot":""}