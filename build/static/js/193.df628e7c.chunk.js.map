{"version":3,"sources":["views/apps/zimmedari/NomineeList.js","../node_modules/reactstrap/es/Spinner.js"],"names":["NomineeList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","userId","userName","mobileNo","nominee","relationWithNominee","console","log","NomineePhoneNumber","mobileVerifyStatus","nomineeEmailId","mailVerifyStatus","AssetList","axiosConfig","get","then","response","oldList","newList","flatMap","item","map","element","setState","catch","err","swal","onGridReady","gridApi","api","gridColumnApi","columnApi","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","this","id","buttons","cancel","text","value","delete","length","col-sm-6","tag","size","right","onClick","placeholder","onChange","e","target","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component","_excluded","propTypes","tagPropType","type","PropTypes","string","cssModule","object","children","Spinner","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","createElement","_extends","role","defaultProps"],"mappings":"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","file":"static/js/193.df628e7c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Card,\r\n  Input,\r\n  Button,\r\n  CardBody,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { ChevronDown, Edit, Eye, Trash2 } from \"react-feather\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport swal from \"sweetalert\";\r\nclass NomineeList extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n\r\n        filter: true,\r\n      },\r\n\r\n      {\r\n        headerName: \"User Id\",\r\n        field: \"userId\",\r\n\r\n        width: 200,\r\n\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.userId.userId}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"User Name\",\r\n        field: \"username\",\r\n\r\n        width: 200,\r\n\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.userId.userName}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Phone No.\",\r\n        field: \"mobileNo\",\r\n\r\n        width: 200,\r\n\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.userId.mobileNo}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Nominee Id\",\r\n        field: \"relationWithNominee\",\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"\">{params?.data?.nominee?.relationWithNominee}</div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Relation With Nominee\",\r\n        field: \"relationWithNominee\",\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          console.log(params?.data?.nominee);\r\n          return (\r\n            <div className=\"\">{params?.data?.nominee?.relationWithNominee}</div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Nominee Phone No.\",\r\n        field: \"NomineePhoneNumber\",\r\n\r\n        width: 200,\r\n\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"\">{params?.data?.nominee?.NomineePhoneNumber}</div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Nominee Phone No. Status\",\r\n        field: \"mobileVerifyStatus\",\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"\">{params?.data?.nominee?.mobileVerifyStatus}</div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Nominee Email\",\r\n        field: \"nomineeemail\",\r\n\r\n        width: 200,\r\n\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"\">{params?.data?.nominee?.nomineeEmailId}</div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Nominee Email-id Status\",\r\n        field: \"nomineeemailidstatus\",\r\n\r\n        width: 200,\r\n\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"\">{params?.data?.nominee?.mailVerifyStatus}</div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  componentDidMount() {\r\n    this.AssetList();\r\n  }\r\n  AssetList = () => {\r\n    axiosConfig\r\n      .get(\"/asset/nominee-list\")\r\n      .then((response) => {\r\n        console.log(response.data.NomineeList);\r\n        const oldList = response.data.NomineeList;\r\n\r\n        const newList = oldList?.flatMap((item) => {\r\n          return item.nominee.map((element) => {\r\n            return { ...item, nominee: element };\r\n          });\r\n        });\r\n        console.log(newList);\r\n        this.setState({ rowData: newList });\r\n      })\r\n      .catch((err) => {\r\n        swal(\"Something Went Wrong\");\r\n      });\r\n  };\r\n\r\n  runthisfunction(id) {\r\n    swal(\r\n      `Do You Want To Delete Permanently`,\r\n      \"This item will be deleted immediately\",\r\n\r\n      {\r\n        buttons: {\r\n          cancel: \"Cancel\",\r\n          catch: { text: \"Delete \", value: \"catch\" },\r\n        },\r\n      }\r\n    ).then((value) => {\r\n      switch (value) {\r\n        case \"cancel\":\r\n          break;\r\n        case \"catch\":\r\n          axiosConfig.delete(`/asset/delete-asset/${id}`).then((response) => {\r\n            this.AssetList();\r\n          });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return this.state.rowData.length > 0 ? (\r\n      <Card className=\"overflow-hidden agGrid-card\">\r\n        <Row className=\"m-1\">\r\n          <Col>\r\n            <h1 col-sm-6 className=\"float-left\">\r\n              Nominee List\r\n            </h1>\r\n          </Col>\r\n          <Col className=\"\"></Col>\r\n        </Row>\r\n\r\n        <CardBody className=\"py-0\">\r\n          {this.state.rowData === null ? null : (\r\n            <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n              <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                <div className=\"mb-1\">\r\n                  <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                    <DropdownToggle tag=\"div\">\r\n                      {this.gridApi\r\n                        ? this.state.currenPageSize\r\n                        : \"\" * this.state.getPageSize -\r\n                          (this.state.getPageSize - 1)}{\" \"}\r\n                      -{\" \"}\r\n                      {this.state.rowData.length -\r\n                        this.state.currenPageSize * this.state.getPageSize >\r\n                      0\r\n                        ? this.state.currenPageSize * this.state.getPageSize\r\n                        : this.state.rowData.length}{\" \"}\r\n                      of {this.state.rowData.length}\r\n                      <ChevronDown className=\"ml-50\" size={15} />\r\n                    </DropdownToggle>\r\n                    <DropdownMenu right>\r\n                      <DropdownItem\r\n                        tag=\"div\"\r\n                        onClick={() => this.filterSize(20)}\r\n                      >\r\n                        20\r\n                      </DropdownItem>\r\n                      <DropdownItem\r\n                        tag=\"div\"\r\n                        onClick={() => this.filterSize(50)}\r\n                      >\r\n                        50\r\n                      </DropdownItem>\r\n                      <DropdownItem\r\n                        tag=\"div\"\r\n                        onClick={() => this.filterSize(100)}\r\n                      >\r\n                        100\r\n                      </DropdownItem>\r\n                      <DropdownItem\r\n                        tag=\"div\"\r\n                        onClick={() => this.filterSize(134)}\r\n                      >\r\n                        134\r\n                      </DropdownItem>\r\n                    </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                </div>\r\n                <div className=\"d-flex flex-wrap  mb-1\">\r\n                  <div className=\"table-input mr-1\">\r\n                    <Input\r\n                      className=\"cssformanageassetinput cssmartopmargin\"\r\n                      placeholder=\"search...\"\r\n                      onChange={(e) => this.updateSearchQuery(e.target.value)}\r\n                      value={this.state.value}\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <Button.Ripple\r\n                      className=\"cssmartopmargin\"\r\n                      color=\"primary\"\r\n                      onClick={() => this.gridApi.exportDataAsCsv()}\r\n                    >\r\n                      Export as CSV\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <ContextLayout.Consumer>\r\n                {(context) => (\r\n                  <AgGridReact\r\n                    gridOptions={{}}\r\n                    rowSelection=\"multiple\"\r\n                    defaultColDef={defaultColDef}\r\n                    columnDefs={columnDefs}\r\n                    rowData={rowData}\r\n                    onGridReady={this.onGridReady}\r\n                    colResizeDefault={\"shift\"}\r\n                    animateRows={true}\r\n                    floatingFilter={false}\r\n                    pagination={true}\r\n                    paginationPageSize={this.state.paginationPageSize}\r\n                    pivotPanelShow=\"always\"\r\n                    enableRtl={context.state.direction === \"rtl\"}\r\n                  />\r\n                )}\r\n              </ContextLayout.Consumer>\r\n            </div>\r\n          )}\r\n        </CardBody>\r\n      </Card>\r\n    ) : (\r\n      <Spinner className=\"loader\" color=\"primary\">\r\n        Loading...\r\n      </Spinner>\r\n    );\r\n  }\r\n}\r\nexport default NomineeList;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nvar Spinner = function Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: mapToCssModules('sr-only', cssModule)\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;"],"sourceRoot":""}