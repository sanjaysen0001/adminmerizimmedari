{"version":3,"sources":["views/apps/trade/AddAllTrade.js"],"names":["AddSize","props","changeHandler1","e","setState","status","target","value","changeHandler","name","submitHandler","preventDefault","axiosConfig","post","state","then","response","swal","history","push","catch","error","console","log","sizeName","sm","listTag","href","tag","active","className","col-sm-6","onClick","onSubmit","this","lg","md","id","type","required","placeholder","onChange","desc","Ripple","color","Component"],"mappings":"sYAoBqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAMRC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEC,OAAQF,EAAEG,OAAOC,SARhB,EAWnBC,cAAgB,SAACL,GACf,EAAKC,SAAL,eAAiBD,EAAEG,OAAOG,KAAON,EAAEG,OAAOC,SAZzB,EAcnBG,cAAgB,SAACP,GACfA,EAAEQ,iBAEFC,IACGC,KAAK,WAAY,EAAKC,MAAO,IAC7BC,MAAK,SAACC,GACLC,IAAK,WAAY,yBAA0B,WAC3C,EAAKhB,MAAMiB,QAAQC,KAAK,8BAEzBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAtBhB,EAAKP,MAAQ,CACXU,SAAU,GACVnB,OAAQ,IAJO,E,0CA4BnB,WACE,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKoB,GAAG,MACN,6BACE,kBAAC,IAAD,CAAYC,QAAQ,OAClB,kBAAC,IAAD,CAAgBC,KAAK,sBAAsBC,IAAI,KAA/C,QAGA,kBAAC,IAAD,CAAgBD,KAAK,0BAA0BC,IAAI,KAAnD,yBAGA,kBAAC,IAAD,CAAgBC,QAAM,GAAtB,6BAKR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,UAAU,OACb,kBAAC,IAAD,KACE,wBAAIC,YAAA,EAASD,UAAU,cAAvB,yBAIF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEA,UAAU,8BACVE,QAAS,kBAAMd,IAAQC,KAAK,6BAF9B,UAQJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMW,UAAU,MAAMG,SAAUC,KAAKxB,eACnC,kBAAC,IAAD,KACG,IACD,kBAAC,IAAD,CAAKyB,GAAG,IAAIC,GAAG,IAAIN,UAAU,QAC3B,kBAAC,IAAD,wBACA,kBAAC,IAAD,CACEO,GAAG,gBACH5B,KAAK,cACL6B,KAAK,UAIL,iDAEA,6CACA,+CACA,iDAKJ,kBAAC,IAAD,CAAKH,GAAG,IAAIC,GAAG,IAAIX,GAAG,IAAIK,UAAU,QAClC,kBAAC,IAAD,kBACA,kBAAC,IAAD,CACES,UAAQ,EACRD,KAAK,OACL7B,KAAK,WACL+B,YAAY,MAKhB,kBAAC,IAAD,CAAKL,GAAG,IAAIC,GAAG,IAAIX,GAAG,IAAIK,UAAU,QAClC,kBAAC,IAAD,cACA,kBAAC,IAAD,CACES,UAAQ,EACRD,KAAK,SACL7B,KAAK,QACL+B,YAAY,GACZjC,MAAO2B,KAAKpB,MAAMP,MAClBkC,SAAUP,KAAK1B,iBAGnB,kBAAC,IAAD,CAAK2B,GAAG,IAAIC,GAAG,IAAIX,GAAG,IAAIK,UAAU,QAClC,kBAAC,IAAD,gBACA,kBAAC,IAAD,CACES,UAAQ,EACRD,KAAK,WACL7B,KAAK,OACL+B,YAAY,GACZjC,MAAO2B,KAAKpB,MAAM4B,KAClBD,SAAUP,KAAK1B,kBA2BrB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK2B,GAAG,IAAIC,GAAG,IAAIX,GAAG,IAAIK,UAAU,QAClC,kBAAC,IAAOa,OAAR,CACEC,MAAM,UACNN,KAAK,SACLR,UAAU,aAHZ,iB,GAhJmBe","file":"static/js/267.d6364161.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  CustomInput,\r\n  Button,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { history } from \"../../../history\";\r\nimport swal from \"sweetalert\";\r\n\r\nexport default class AddSize extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sizeName: \"\",\r\n      status: \"\",\r\n    };\r\n  }\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    axiosConfig\r\n      .post(\"/addsize\", this.state, {})\r\n      .then((response) => {\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        this.props.history.push(\"/app/trade/allTradeList\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <div>\r\n              <Breadcrumb listTag=\"div\">\r\n                <BreadcrumbItem href=\"/analyticsDashboard\" tag=\"a\">\r\n                  Home\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem href=\"/app/trade/allTradeList\" tag=\"a\">\r\n                  All Active Trade List\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem active>Add All Active Trade </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Add All Active Trade\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                className=\" btn btn-danger float-right\"\r\n                onClick={() => history.push(\"/app/trade/allTradeList\")}\r\n              >\r\n                Back\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row>\r\n                {\" \"}\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label>Type Of Scripts</Label>\r\n                  <Input\r\n                    id=\"exampleSelect\"\r\n                    name=\"script_type\"\r\n                    type=\"select\"\r\n                    // value={this.state.script_type}\r\n                    // onChange={this.changeHandler}\r\n                  >\r\n                    <option>Select Script</option>\r\n                    {/* <option>All TRADES</option> */}\r\n                    <option>FNO INDEX</option>\r\n                    <option>FNO OPTIONS</option>\r\n                    <option>CASH EQUITY</option>\r\n                    {/* <option>BANK NIFTY</option>\r\n                    <option>NIFTY </option> */}\r\n                  </Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Date/Time</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"sizeName\"\r\n                    placeholder=\"\"\r\n                    // value={this.state.sizeName}\r\n                    // onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Trade</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"value\"\r\n                    placeholder=\"\"\r\n                    value={this.state.value}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Message</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"textarea\"\r\n                    name=\"desc\"\r\n                    placeholder=\"\"\r\n                    value={this.state.desc}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                {/* <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label className=\"mb-1\">Status</Label>\r\n                  <div\r\n                    className=\"form-label-group\"\r\n                    onChange={(e) => this.changeHandler1(e)}\r\n                  >\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Active\"\r\n                    />\r\n                    <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Inactive\"\r\n                    />\r\n                    <span style={{ marginRight: \"3px\" }}>Inactive</span>\r\n                  </div>\r\n                </Col>  */}\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                  >\r\n                    Add\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}