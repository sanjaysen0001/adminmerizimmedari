{"version":3,"sources":["views/apps/trade/AddFnoIndex.js"],"names":["AddFnoIndex","props","changeHandler1","e","setState","status","target","value","changeHandler","name","submitHandler","preventDefault","console","log","state","axiosConfig","post","then","response","data","swal","history","push","catch","error","expiryDate","script_type","fnoindex_scrpt_name","active_value","call_type","qty","investment_amt","no_of_lots","trade_type","t5","type","scriptN","expdateI","get","className","col-sm-6","render","onClick","onSubmit","this","lg","md","sm","onChange","map","allScript","_id","key","scriptName","allExpDate","expDate","for","id","placeholder","required","Ripple","color","Component"],"mappings":"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","file":"static/js/272.4ab78f3a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport { Route } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\n\r\nexport class AddFnoIndex extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expiryDate: \"\",\r\n      script_type: \"\",\r\n      fnoindex_scrpt_name: \"\",\r\n      active_value: \"\",\r\n      call_type: \"\",\r\n      qty: \"\",\r\n      investment_amt: \"\",\r\n      no_of_lots: \"\",\r\n      trade_type: \"\",\r\n      t5: \"\",\r\n      status: \"\",\r\n      // cstmMsg: \"\",\r\n    };\r\n    this.state = {\r\n      type: \"Index\",\r\n      scriptN: [],\r\n      expdateI: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axiosConfig\r\n      .get(\"/admin/getFnoScript\")\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          scriptN: response.data.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    // expDate//\r\n    axiosConfig\r\n      .get(\"/admin/datelist\")\r\n      .then((response) => {\r\n        this.setState({\r\n          expdateI: response.data.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"type\", this.state);\r\n    axiosConfig\r\n      .post(\"/admin/add_fnoIndex\", this.state)\r\n      .then((response) => {\r\n        console.log(\"add Data\", response.data);\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        this.props.history.push(\"/app/trade/fnoIndexList\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Add FNO Index\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() => history.push(\"/app/trade/fnoIndexList\")}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                {/* <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label>Exp. Date</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"expiryDate\"\r\n                    value={this.state.expiryDate}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col> */}\r\n\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Script Name</Label>\r\n                  <CustomInput\r\n                    type=\"select\"\r\n                    name=\"fnoindex_scrpt_name\"\r\n                    // valid={this.state.fnoindex_scrpt_name ? true : false}\r\n                    // invalid={this.state.fnoindex_scrpt_name ? false : true}\r\n                    value={this.state.fnoindex_scrpt_name}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>Select Script</option>\r\n                    {this.state.scriptN?.map((allScript) => (\r\n                      <option value={allScript?._id} key={allScript?._id}>\r\n                        {allScript?.scriptName}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Expiry Date</Label>\r\n                  <CustomInput\r\n                    type=\"select\"\r\n                    name=\"expiryDate\"\r\n                    // valid={this.state.expiryDate ? true : false}\r\n                    // invalid={this.state.expiryDate ? false : true}\r\n                    value={this.state.expiryDate}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>Expiry Date</option>\r\n                    {this.state.expdateI?.map((allExpDate) => (\r\n                      <option value={allExpDate?._id} key={allExpDate?._id}>\r\n                        {allExpDate?.expDate}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label for=\"exampleSelect\">Equity Script</Label>\r\n                  <Input\r\n                    // id=\"exampleSelect\"\r\n                    name=\"script_type\"\r\n                    type=\"select\"\r\n                    value={this.state.script_type}\r\n                    onChange={this.changeHandler}\r\n                    // valid={this.state.script_type ? true : false}\r\n                    // invalid={this.state.script_type ? false : true}\r\n                  >\r\n                    <option>Select Script</option>\r\n                    <option>BUY</option>\r\n                    <option>SELL</option>\r\n                  </Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label for=\"exampleSelect\">Trade Type</Label>\r\n                  <Input\r\n                    id=\"exampleSelect\"\r\n                    name=\"trade_type\"\r\n                    type=\"select\"\r\n                    value={this.state.trade_type}\r\n                    onChange={this.changeHandler}\r\n                    // valid={this.state.trade_type ? true : false}\r\n                    // invalid={this.state.trade_type ? false : true}\r\n                  >\r\n                    <option>Select Trade</option>\r\n                    <option value=\"BankNifty\">BANK NIFTY</option>\r\n                    <option value=\"Nifty\">NIFTY</option>\r\n                  </Input>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label for=\"exampleSelect\">Call Type</Label>\r\n                  <Input\r\n                    id=\"exampleSelect\"\r\n                    name=\"call_type\"\r\n                    type=\"select\"\r\n                    value={this.state.call_type}\r\n                    onChange={this.changeHandler}\r\n                    placeholder=\"Select Call Type\"\r\n                    // valid={this.state.call_type ? true : false}\r\n                    // invalid={this.state.call_type ? false : true}\r\n                  >\r\n                    {/* <option>Select Call Type</option> */}\r\n                    <option>Intraday</option>\r\n                    <option>BTST</option>\r\n                    <option>Short Term</option>\r\n                    <option>Intraday or BTST</option>\r\n                    <option>Intraday (Risky)</option>\r\n                    <option>Intraday (Trailed)</option>\r\n                    <option>Intraday (Re-entry)</option>\r\n                    <option>Intraday (Re-entry- Trailed)</option>\r\n                    <option>Intraday (Hero-Zero)</option>\r\n                  </Input>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label>Active Value*</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    required\r\n                    placeholder=\"Enter Active Value\"\r\n                    name=\"active_value\"\r\n                    value={this.state.active_value}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label>Range value*</Label>\r\n                  <Input\r\n                    name=\"t5\"\r\n                    type=\"number\"\r\n                    required\r\n                    placeholder=\"Enter T5 \"\r\n                    value={this.state.t5}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                {/* <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label>Tiral</Label>\r\n                  <Input\r\n                    name=\"trl\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Tiral \"\r\n                    value={this.state.t5}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label>T1</Label>\r\n                  <Input\r\n                    name=\"FT1\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter T1 \"\r\n                    value={this.state.FT1}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label>T2</Label>\r\n                  <Input\r\n                    name=\"FT1\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter T2 \"\r\n                    value={this.state.FT2}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label>T3</Label>\r\n                  <Input\r\n                    name=\"FT3\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter T3 \"\r\n                    value={this.state.FT3}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col> */}\r\n                {/* <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label>Quantity</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"qty\"\r\n                    placeholder=\"Enter Quantity\"\r\n                    value={this.state.qty}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col> */}\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label>Number Of Lots</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"no_of_lots\"\r\n                    placeholder=\"Enter Lots Price\"\r\n                    value={this.state.no_of_lots}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n\r\n                {/* <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label> Type </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"type\"\r\n                    placeholder=\"Enter Trade Type\"\r\n                    value={this.state.type}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>Select type</option>\r\n                    <option>Index</option>\r\n                  </Input>\r\n                </Col> */}\r\n                {/* <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label>Trade Alert</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Keep booking or trailing stop loss\"\r\n                    name=\"cstmMsg\"\r\n                    value={this.state.cstmMsg}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col> */}\r\n                {/* <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label className=\"mb-1\">Status</Label>\r\n                  <div\r\n                    className=\"form-label-group\"\r\n                    onChange={(e) => this.changeHandler1(e)}\r\n                  >\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Active\"\r\n                    />\r\n                    <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Inactive\"\r\n                    />\r\n                    <span style={{ marginRight: \"3px\" }}>Inactive</span>\r\n                  </div>\r\n                </Col> */}\r\n                {/* <span>\r\n                    <b> We will type 210+ Keep booking or trailing stop loss</b>\r\n                  </span> */}\r\n              </Row>\r\n              <Row>\r\n                <Button.Ripple\r\n                  className=\"mr-1 mb-1\"\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                >\r\n                  Add FNO Index\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AddFnoIndex;\r\n"],"sourceRoot":""}