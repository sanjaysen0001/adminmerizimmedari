{"version":3,"sources":["views/apps/pageSetUp/about/AllaboutUs.js"],"names":["AllaboutUs","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","ReactHtmlParser","data","desc","render","history","size","color","onClick","push","_id","runthisfunction","allAboutList","axiosConfig","get","then","response","setState","onGridReady","gridApi","api","gridColumnApi","columnApi","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","this","id","console","log","swal","buttons","cancel","catch","text","value","delete","Fragment","col-sm-6","tag","length","right","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/201.4ff5747b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Card,\r\n  Input,\r\n  Button,\r\n  CardBody,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n} from \"reactstrap\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { ChevronDown, Edit, Trash2 } from \"react-feather\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport swal from \"sweetalert\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nclass AllaboutUs extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n      },\r\n      {\r\n        headerName: \"Descriptions\",\r\n        field: \"desc\",\r\n        width: 250,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span className=\"\">{ReactHtmlParser(params.data.desc)}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        width: 200,\r\n        // pinned: window.innerWidth > 992 ? \"right\" : false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Edit\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"blue\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        `/app/pageSetUp/about/editAboutUs/${params.data._id}`\r\n                      )\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n\r\n              <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  this.runthisfunction(params.data._id);\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  componentDidMount() {\r\n    this.allAboutList();\r\n  }\r\n  allAboutList = () => {\r\n    axiosConfig.get(\"/admin/getAbout_us\").then((response) => {\r\n      const rowData = response.data.data;\r\n      this.setState({ rowData });\r\n    });\r\n  };\r\n\r\n  runthisfunction(id) {\r\n    console.log(id);\r\n    swal(\r\n      `Do You Want To Delete Permanently`,\r\n      \"This item will be deleted immediately\",\r\n\r\n      {\r\n        buttons: {\r\n          cancel: \"Cancel\",\r\n          catch: { text: \"Delete \", value: \"catch\" },\r\n        },\r\n      }\r\n    ).then((value) => {\r\n      switch (value) {\r\n        case \"cancel\":\r\n          break;\r\n        case \"catch\":\r\n          axiosConfig.delete(`/admin/dlt_abtus/${id}`).then((response) => {\r\n            this.allAboutList();\r\n          });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Card className=\"overflow-hidden agGrid-card\">\r\n          <Row className=\"m-1\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                AboutUs List\r\n              </h1>\r\n            </Col>\r\n            <Col className=\"\">\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn  float-right\"\r\n                    color=\"primary\"\r\n                    onClick={() => history.push(\"/app/about/aboutUs\")}\r\n                  >\r\n                    Add Aboutus\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody className=\"py-0\">\r\n            {this.state.rowData === null ? null : (\r\n              <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                  <div className=\"mb-1\">\r\n                    <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                      <DropdownToggle tag=\"div\">\r\n                        {this.gridApi\r\n                          ? this.state.currenPageSize\r\n                          : \"\" * this.state.getPageSize -\r\n                            (this.state.getPageSize - 1)}{\" \"}\r\n                        -{\" \"}\r\n                        {this.state.rowData.length -\r\n                          this.state.currenPageSize * this.state.getPageSize >\r\n                        0\r\n                          ? this.state.currenPageSize * this.state.getPageSize\r\n                          : this.state.rowData.length}{\" \"}\r\n                        of {this.state.rowData.length}\r\n                        <ChevronDown className=\"ml-50\" size={15} />\r\n                      </DropdownToggle>\r\n                      <DropdownMenu right>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(20)}\r\n                        >\r\n                          20\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(50)}\r\n                        >\r\n                          50\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(100)}\r\n                        >\r\n                          100\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(134)}\r\n                        >\r\n                          134\r\n                        </DropdownItem>\r\n                      </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                  </div>\r\n                  <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                    <div className=\"table-input mr-1\">\r\n                      <Input\r\n                        placeholder=\"search...\"\r\n                        onChange={(e) => this.updateSearchQuery(e.target.value)}\r\n                        value={this.state.value}\r\n                      />\r\n                    </div>\r\n                    <div className=\"export-btn\">\r\n                      <Button.Ripple\r\n                        color=\"primary\"\r\n                        onClick={() => this.gridApi.exportDataAsCsv()}\r\n                      >\r\n                        Export as CSV\r\n                      </Button.Ripple>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <ContextLayout.Consumer>\r\n                  {(context) => (\r\n                    <AgGridReact\r\n                      gridOptions={{}}\r\n                      rowSelection=\"multiple\"\r\n                      defaultColDef={defaultColDef}\r\n                      columnDefs={columnDefs}\r\n                      rowData={rowData}\r\n                      onGridReady={this.onGridReady}\r\n                      colResizeDefault={\"shift\"}\r\n                      animateRows={true}\r\n                      floatingFilter={false}\r\n                      pagination={true}\r\n                      paginationPageSize={this.state.paginationPageSize}\r\n                      pivotPanelShow=\"always\"\r\n                      enableRtl={context.state.direction === \"rtl\"}\r\n                    />\r\n                  )}\r\n                </ContextLayout.Consumer>\r\n              </div>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default AllaboutUs;\r\n"],"sourceRoot":""}