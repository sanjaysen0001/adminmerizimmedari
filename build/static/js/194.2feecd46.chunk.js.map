{"version":3,"sources":["views/apps/zimmedari/report/UserAssetData.js"],"names":["UserAssetData","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","firstName","email","style","src","image","alt","axiosConfig","get","then","response","User","setState","catch","err","swal","onGridReady","gridApi","api","gridColumnApi","columnApi","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","this","id","console","log","buttons","cancel","text","value","delete","planTypeList","Fragment","col-sm-6","tag","length","size","right","onClick","placeholder","onChange","e","target","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"8WAqBMA,G,mNACJC,MAAQ,CACNC,QAAS,GACTC,mBAAoB,GACpBC,eAAgB,GAChBC,YAAa,GACbC,cAAe,CACbC,UAAU,EACVC,UAAU,EACVC,WAAW,EACXC,cAAc,GAEhBC,WAAY,CACV,CACEC,WAAY,OACZC,YAAa,oBACbC,MAAO,oBACPC,MAAO,IACPC,QAAQ,GAEV,CACEJ,WAAY,UACZE,MAAO,YACPC,MAAO,IAEPE,sBAAuB,SAACC,GACtB,OACE,yBAAKC,UAAU,6BA8BrB,CACEP,WAAY,OACZE,MAAO,OACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GAAY,IAAD,EACjC,OAAO,yBAAKC,UAAU,IAAf,OAAmBD,QAAnB,IAAmBA,GAAnB,UAAmBA,EAAQE,YAA3B,aAAmB,EAAcC,aAG5C,CACET,WAAY,QACZE,MAAO,QACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GAAY,IAAD,EACjC,OAAO,yBAAKC,UAAU,IAAf,OAAmBD,QAAnB,IAAmBA,GAAnB,UAAmBA,EAAQE,YAA3B,aAAmB,EAAcE,SAG5C,CACEV,WAAY,QACZE,MAAO,QACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GAAY,IAAD,EACjC,OACE,yBAAKC,UAAU,WACb,yBACEA,UAAU,UACVI,MAAO,CAAER,MAAO,SAChBS,IAAG,OAAEN,QAAF,IAAEA,GAAF,UAAEA,EAAQE,YAAV,aAAE,EAAcK,MACnBC,IAAI,a,EA0BlB1B,cAAgB,WACd2B,IACGC,IAAI,cACJC,MAAK,SAACC,GAEL,IAAM5B,EAAU4B,EAASV,KAAKW,KAC9B,EAAKC,SAAS,CAAE9B,eAEjB+B,OAAM,SAACC,GACNC,IAAK,4B,EA8BXC,YAAc,SAAClB,GACb,EAAKmB,QAAUnB,EAAOoB,IACtB,EAAKC,cAAgBrB,EAAOsB,UAC5B,EAAKR,SAAS,CACZ5B,eAAgB,EAAKiC,QAAQI,2BAA6B,EAC1DpC,YAAa,EAAKgC,QAAQK,wBAC1BC,WAAY,EAAKN,QAAQO,6B,EAI7BC,kBAAoB,SAACC,GACnB,EAAKT,QAAQU,eAAeD,I,EAG9BE,WAAa,SAACF,GACR,EAAKT,UACP,EAAKA,QAAQY,sBAAsBC,OAAOJ,IAC1C,EAAKd,SAAS,CACZ5B,eAAgB0C,EAChBzC,YAAayC,M,uDA7DnB,WACEK,KAAKnD,kB,6BAeP,SAAgBoD,GAAK,IAAD,OAClBC,QAAQC,IAAIF,GACZjB,IAAK,oCAEH,wCAEA,CACEoB,QAAS,CACPC,OAAQ,SACRvB,MAAO,CAAEwB,KAAM,UAAWC,MAAO,YAGrC7B,MAAK,SAAC6B,GACN,OAAQA,GACN,IAAK,SACH,MACF,IAAK,QACH/B,IAAYgC,OAAZ,6BAAyCP,IAAMvB,MAAK,SAACC,GACnD,EAAK8B,wB,oBAgCf,WAAU,IAAD,OACP,EAA+CT,KAAKlD,MAA5CC,EAAR,EAAQA,QAASS,EAAjB,EAAiBA,WAAYL,EAA7B,EAA6BA,cAC7B,OACE,kBAAC,IAAMuD,SAAP,KACE,kBAAC,IAAD,CAAM1C,UAAU,+BACd,kBAAC,IAAD,CAAKA,UAAU,OACb,kBAAC,IAAD,KACE,wBAAI2C,YAAA,EAAS3C,UAAU,cAAvB,yBAIF,kBAAC,IAAD,CAAKA,UAAU,MAejB,kBAAC,IAAD,CAAUA,UAAU,QACM,OAAvBgC,KAAKlD,MAAMC,QAAmB,KAC7B,yBAAKiB,UAAU,8CACb,yBAAKA,UAAU,+DACb,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAAsBA,UAAU,mBAC9B,kBAAC,IAAD,CAAgB4C,IAAI,OACjBZ,KAAKd,QACFc,KAAKlD,MAAMG,eACX,GAAK+C,KAAKlD,MAAMI,aACf8C,KAAKlD,MAAMI,YAAc,GAAI,IAJpC,IAKI,IACD8C,KAAKlD,MAAMC,QAAQ8D,OAClBb,KAAKlD,MAAMG,eAAiB+C,KAAKlD,MAAMI,YACzC,EACI8C,KAAKlD,MAAMG,eAAiB+C,KAAKlD,MAAMI,YACvC8C,KAAKlD,MAAMC,QAAQ8D,OAAQ,IAVjC,MAWMb,KAAKlD,MAAMC,QAAQ8D,OACvB,kBAAC,IAAD,CAAa7C,UAAU,QAAQ8C,KAAM,MAEvC,kBAAC,IAAD,CAAcC,OAAK,GACjB,kBAAC,IAAD,CACEH,IAAI,MACJI,QAAS,kBAAM,EAAKnB,WAAW,MAFjC,MAMA,kBAAC,IAAD,CACEe,IAAI,MACJI,QAAS,kBAAM,EAAKnB,WAAW,MAFjC,MAMA,kBAAC,IAAD,CACEe,IAAI,MACJI,QAAS,kBAAM,EAAKnB,WAAW,OAFjC,OAMA,kBAAC,IAAD,CACEe,IAAI,MACJI,QAAS,kBAAM,EAAKnB,WAAW,OAFjC,UASN,yBAAK7B,UAAU,iDACb,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CACEiD,YAAY,YACZC,SAAU,SAACC,GAAD,OAAO,EAAKzB,kBAAkByB,EAAEC,OAAOb,QACjDA,MAAOP,KAAKlD,MAAMyD,SAGtB,yBAAKvC,UAAU,cACb,kBAAC,IAAOqD,OAAR,CACEC,MAAM,UACNN,QAAS,kBAAM,EAAK9B,QAAQqC,oBAF9B,oBASN,kBAAC,IAAcC,SAAf,MACG,SAACC,GAAD,OACC,kBAAC,cAAD,CACEC,YAAa,GACbC,aAAa,WACbxE,cAAeA,EACfK,WAAYA,EACZT,QAASA,EACTkC,YAAa,EAAKA,YAClB2C,iBAAkB,QAClBC,aAAa,EACbC,gBAAgB,EAChBC,YAAY,EACZ/E,mBAAoB,EAAKF,MAAME,mBAC/BgF,eAAe,SACfC,UAAuC,QAA5BR,EAAQ3E,MAAMoF,uB,GA3RnBC,IAAMC,YAuSnBvF,a","file":"static/js/194.2feecd46.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Card,\r\n  Input,\r\n  Button,\r\n  CardBody,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n} from \"reactstrap\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { ChevronDown, Edit, Trash2 } from \"react-feather\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport swal from \"sweetalert\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nclass UserAssetData extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n      },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        width: 200,\r\n        // pinned: window.innerWidth > 992 ? \"right\" : false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              {/* <Route\r\n                render={({ history }) => (\r\n                  <Edit\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"blue\"\r\n                    onClick={() =>\r\n                      history.push({\r\n                        pathname: `/app/plan/EditPlanType/${params.data._id}`,\r\n                        state: params.data,\r\n                      })\r\n                    }\r\n                  />\r\n                )}\r\n              /> */}\r\n\r\n              {/* <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  this.runthisfunction(params.data._id);\r\n                }}\r\n              /> */}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Name\",\r\n        field: \"name\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.firstName}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Email\",\r\n        field: \"email\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.email}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Image\",\r\n        field: \"Image\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"mainImg\">\r\n              <img\r\n                className=\"Picture\"\r\n                style={{ width: \"160px\" }}\r\n                src={params?.data?.image}\r\n                alt=\"Img\"\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      //   {\r\n      //     headerName: \"PlanType Description\",\r\n      //     field: \"Description\",\r\n      //     filter: true,\r\n      //     width: 500,\r\n      //     cellRendererFramework: (params) => {\r\n      //       return (\r\n      //         <div className=\"\">\r\n      //           <span className=\"\">\r\n      //             {ReactHtmlParser(params?.data?.plan_desc)}\r\n      //           </span>\r\n      //         </div>\r\n      //       );\r\n      //     },\r\n      //   },\r\n    ],\r\n  };\r\n  componentDidMount() {\r\n    this.UserAssetData();\r\n  }\r\n  UserAssetData = () => {\r\n    axiosConfig\r\n      .get(\"/user-list\")\r\n      .then((response) => {\r\n        // console.log(response.data.User);\r\n        const rowData = response.data.User;\r\n        this.setState({ rowData });\r\n      })\r\n      .catch((err) => {\r\n        swal(\"Something Went Wrong\");\r\n      });\r\n  };\r\n\r\n  runthisfunction(id) {\r\n    console.log(id);\r\n    swal(\r\n      `Do You Want To Delete Permanently`,\r\n      \"This item will be deleted immediately\",\r\n\r\n      {\r\n        buttons: {\r\n          cancel: \"Cancel\",\r\n          catch: { text: \"Delete \", value: \"catch\" },\r\n        },\r\n      }\r\n    ).then((value) => {\r\n      switch (value) {\r\n        case \"cancel\":\r\n          break;\r\n        case \"catch\":\r\n          axiosConfig.delete(`/admin/dlt_plantyp/${id}`).then((response) => {\r\n            this.planTypeList();\r\n          });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Card className=\"overflow-hidden agGrid-card\">\r\n          <Row className=\"m-1\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                User Asset Data List\r\n              </h1>\r\n            </Col>\r\n            <Col className=\"\">\r\n              {/* <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn  float-right\"\r\n                    color=\"primary\"\r\n                    onClick={() => history.push(\"/app/AddAssets\")}\r\n                  >\r\n                    Add Assets\r\n                  </Button>\r\n                )}\r\n              /> */}\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody className=\"py-0\">\r\n            {this.state.rowData === null ? null : (\r\n              <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                  <div className=\"mb-1\">\r\n                    <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                      <DropdownToggle tag=\"div\">\r\n                        {this.gridApi\r\n                          ? this.state.currenPageSize\r\n                          : \"\" * this.state.getPageSize -\r\n                            (this.state.getPageSize - 1)}{\" \"}\r\n                        -{\" \"}\r\n                        {this.state.rowData.length -\r\n                          this.state.currenPageSize * this.state.getPageSize >\r\n                        0\r\n                          ? this.state.currenPageSize * this.state.getPageSize\r\n                          : this.state.rowData.length}{\" \"}\r\n                        of {this.state.rowData.length}\r\n                        <ChevronDown className=\"ml-50\" size={15} />\r\n                      </DropdownToggle>\r\n                      <DropdownMenu right>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(20)}\r\n                        >\r\n                          20\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(50)}\r\n                        >\r\n                          50\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(100)}\r\n                        >\r\n                          100\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(134)}\r\n                        >\r\n                          134\r\n                        </DropdownItem>\r\n                      </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                  </div>\r\n                  <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                    <div className=\"table-input mr-1\">\r\n                      <Input\r\n                        placeholder=\"search...\"\r\n                        onChange={(e) => this.updateSearchQuery(e.target.value)}\r\n                        value={this.state.value}\r\n                      />\r\n                    </div>\r\n                    <div className=\"export-btn\">\r\n                      <Button.Ripple\r\n                        color=\"primary\"\r\n                        onClick={() => this.gridApi.exportDataAsCsv()}\r\n                      >\r\n                        Export as CSV\r\n                      </Button.Ripple>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <ContextLayout.Consumer>\r\n                  {(context) => (\r\n                    <AgGridReact\r\n                      gridOptions={{}}\r\n                      rowSelection=\"multiple\"\r\n                      defaultColDef={defaultColDef}\r\n                      columnDefs={columnDefs}\r\n                      rowData={rowData}\r\n                      onGridReady={this.onGridReady}\r\n                      colResizeDefault={\"shift\"}\r\n                      animateRows={true}\r\n                      floatingFilter={false}\r\n                      pagination={true}\r\n                      paginationPageSize={this.state.paginationPageSize}\r\n                      pivotPanelShow=\"always\"\r\n                      enableRtl={context.state.direction === \"rtl\"}\r\n                    />\r\n                  )}\r\n                </ContextLayout.Consumer>\r\n              </div>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default UserAssetData;\r\n"],"sourceRoot":""}