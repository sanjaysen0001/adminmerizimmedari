{"version":3,"sources":["views/apps/plan/Duelifedeclaration.js"],"names":["Duelifedeclaration","state","rowData","deadCertificateValidationStatus","isCheck","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","userId","mobileNo","lastDeclarationDate","updatedDate","getDateThreeDaysLater","dateOfUserStatusConfirmationMailNominee","dateOfResponseReceivedNominee","userStatus","dateOfDeadCertificateRequestingMailNominee","dateOfDeadCertificateReceivedNominee","dateOfValidationStatusMailNominee","dateOfAssetDetailNominee","toLowerCase","AssetList","axiosConfig","get","then","response","console","log","User","setState","catch","err","swal","dateString","startDate","Date","setDate","getDate","toISOString","split","onGridReady","gridApi","api","gridColumnApi","columnApi","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","this","id","buttons","cancel","text","value","delete","Fragment","col-sm-6","tag","length","size","right","onClick","placeholder","onChange","e","target","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/183.c0dfa7ee.chunk.js","sourcesContent":["import React from \"react\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Card,\r\n  Input,\r\n  Button,\r\n  CardBody,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  FormGroup,\r\n  Label,\r\n  Form,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { ChevronDown, Edit, Eye, Trash2 } from \"react-feather\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport swal from \"sweetalert\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nclass Duelifedeclaration extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n\r\n    deadCertificateValidationStatus: \"\",\r\n    isCheck: false,\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n\r\n        filter: true,\r\n      },\r\n      {\r\n        headerName: \"User Phone Number\",\r\n        field: \"mobileNo\",\r\n        width: 200,\r\n\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.userId?.mobileNo}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Actual Life declaration due date\",\r\n        field: \"ActualLifedeclarationduedate\",\r\n        width: 300,\r\n\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.lastDeclarationDate}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Revised Life declaration due date\",\r\n        field: \"RevisedLifedeclarationduedate\",\r\n        width: 350,\r\n\r\n        cellRendererFramework: (params) => {\r\n          let updatedDate = this.getDateThreeDaysLater(\r\n            params?.data?.lastDeclarationDate\r\n          );\r\n          return <div className=\"\">{updatedDate}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName:\r\n          \"Last Life declaration on due date offerted to Nominee/User\",\r\n        field: \"Lifedeclarationduedate\",\r\n        width: 400,\r\n\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.lastDeclarationDate}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"DateOfUser StatusConfirmation mailshared with nominee\",\r\n        field: \"dateOfUserStatusConfirmationMailNominee\",\r\n        width: 400,\r\n\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"\">\r\n              {params?.data?.dateOfUserStatusConfirmationMailNominee}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Date of Response Reveived from nominee\",\r\n        field: \"dateOfResponseReceivedNominee\",\r\n        width: 400,\r\n\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"\">\r\n              {params?.data?.dateOfResponseReceivedNominee}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Response Received from nominee\",\r\n        field: \"userStatus\",\r\n        width: 350,\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.userStatus}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName:\r\n          \"DateOfDeath certificate requesting mail shared with nominee\",\r\n        field: \"dateOfDeadCertificateRequestingMailNominee\",\r\n        width: 350,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"\">\r\n              {params?.data?.dateOfDeadCertificateRequestingMailNominee}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Date of death certificate received from nominee\",\r\n        field: \"dateOfDeadCertificateReceivedNominee\",\r\n        width: 450,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"\">\r\n              {params?.data?.dateOfDeadCertificateReceivedNominee}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Death certificate Validation Status\",\r\n        field: \"deadCertificateValidationStatus\",\r\n        width: 400,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"\">\r\n              {params?.data?.deadCertificateValidationStatus}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Date of Validation Status mail shared with nominee\",\r\n        field: \"dateOfValidationStatusMailNominee\",\r\n        width: 400,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"\">\r\n              {params?.data?.dateOfValidationStatusMailNominee}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Date of asset details shared with nominee\",\r\n        field: \"dateOfAssetDetailNominee\",\r\n        width: 350,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"\">{params?.data?.dateOfAssetDetailNominee}</div>\r\n          );\r\n        },\r\n      },\r\n      // {\r\n      //   headerName:\r\n      //     \"Date of receiving of asset details receiving confirmation from nominee\",\r\n      //   field: \"DateofResponse\",\r\n      //   width: 350,\r\n      //   cellRendererFramework: (params) => {\r\n      //     // return <div className=\"\">{params?.data?.lastDeclarationDate}</div>;\r\n      //   },\r\n      // },\r\n      {\r\n        headerName: \"Loop Status\",\r\n        field: \"DateofResponse\",\r\n        width: 350,\r\n        cellRendererFramework: (params) => {\r\n          // params.data?.userStatus\r\n\r\n          return (\r\n            <div className=\"\">\r\n              {params.data?.userStatus?.toLowerCase() == \"demise\"\r\n                ? \"\"\r\n                : \"Alive\" &&\r\n                  params?.data?.deadCertificateValidationStatus?.toLowerCase() ==\r\n                    \"valid\"\r\n                ? \"Close\"\r\n                : params?.data?.deadCertificateValidationStatus?.toLowerCase() ==\r\n                  \"invalid\"\r\n                ? \"Open\"\r\n                : \"Close\"}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      // {\r\n      // {params?.data?.deadCertificateValidationStatus\r\n      //         .toLowerCase()\r\n      //         .includes(\"valid\")\r\n      //         ? \"Close\"\r\n      //         : \"Open\"}\r\n      //   headerName: \"Actions\",\r\n      //   field: \"sortorder\",\r\n      //   width: 200,\r\n\r\n      //   // pinned: window.innerWidth > 992 ? \"right\" : false,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"actions cursor-pointer\">\r\n      //         <Route\r\n      //           render={({ history }) => (\r\n      //             <Eye\r\n      //               className=\"mr-50\"\r\n      //               size=\"25px\"\r\n      //               color=\"green\"\r\n      //               onClick={() =>\r\n      //                 history.push({\r\n      //                   pathname: `/ViewDueLife/${params?.data?._id}`,\r\n      //                 })\r\n      //               }\r\n      //             />\r\n      //           )}\r\n      //         />\r\n      //         <Route\r\n      //           render={({ history }) => (\r\n      //             <Edit\r\n      //               className=\"mr-50\"\r\n      //               size=\"25px\"\r\n      //               color=\"blue\"\r\n      //               onClick={() =>\r\n      //                 history.push({\r\n      //                   pathname: `/app/asset/EditAsset/${params?.data?._id}`,\r\n      //                   state: params.data,\r\n      //                 })\r\n      //               }\r\n      //             />\r\n      //           )}\r\n      //         />\r\n\r\n      //         <Trash2\r\n      //           className=\"mr-50\"\r\n      //           size=\"25px\"\r\n      //           color=\"red\"\r\n      //           onClick={() => {\r\n      //             this.runthisfunction(params.data?._id);\r\n      //           }}\r\n      //         />\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n    ],\r\n  };\r\n  componentDidMount() {\r\n    this.AssetList();\r\n  }\r\n  AssetList = () => {\r\n    axiosConfig\r\n      .get(\"/life-declaration/view-user-status\")\r\n      .then((response) => {\r\n        console.log(response.data.User);\r\n        const rowData = response?.data?.User;\r\n        this.setState({ rowData });\r\n      })\r\n      .catch((err) => {\r\n        swal(\"Something Went Wrong\");\r\n      });\r\n  };\r\n\r\n  getDateThreeDaysLater = (dateString) => {\r\n    const startDate = new Date(dateString);\r\n    startDate.setDate(startDate.getDate() + 3);\r\n    return startDate.toISOString().split(\"T\")[0];\r\n  };\r\n\r\n  runthisfunction(id) {\r\n    swal(\r\n      `Do You Want To Delete Permanently`,\r\n      \"This item will be deleted immediately\",\r\n\r\n      {\r\n        buttons: {\r\n          cancel: \"Cancel\",\r\n          catch: { text: \"Delete \", value: \"catch\" },\r\n        },\r\n      }\r\n    ).then((value) => {\r\n      switch (value) {\r\n        case \"cancel\":\r\n          break;\r\n        case \"catch\":\r\n          axiosConfig.delete(`/asset/delete-asset/${id}`).then((response) => {\r\n            this.AssetList();\r\n          });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  // toggleSwitch = (newState) => {\r\n  //   console.log(newState);\r\n  //   this.setState({\r\n  //     switchState: newState,\r\n  //   });\r\n  // };\r\n  // toggleSwitch = (newState, id) => {\r\n  //   console.log(newState, id);\r\n  //   debugger;\r\n  //   let ab = \"\";\r\n  //   if (newState) {\r\n  //     ab = \"Valid\";\r\n  //     this.setState({ deadCertificateValidationStatus: \"Valid\" });\r\n  //   } else {\r\n  //      ab = \"Invalid\";\r\n  //     this.setState({ deadCertificateValidationStatus: \"Invalid\" });\r\n  //   }\r\n  //   // console.log(newState);\r\n  //   this.setState({\r\n  //     switchState: newState,\r\n  //   });\r\n\r\n  //   const payload = {\r\n  //     deadCertificateValidationStatus:\r\n  //       this.state.deadCertificateValidationStatus,\r\n  //   };\r\n  //   debugger;\r\n  //   axiosConfig\r\n  //     .put(`/life-declaration/update-status/${id}`, payload)\r\n\r\n  //     .then((response) => {\r\n  //       debugger;\r\n  //       console.log(response);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //     });\r\n  // };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Card className=\"overflow-hidden agGrid-card\">\r\n          <Row className=\"m-1\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Life Declaration List\r\n              </h1>\r\n            </Col>\r\n            <Col className=\"\"></Col>\r\n          </Row>\r\n\r\n          <CardBody className=\"py-0\">\r\n            {this.state.rowData === null ? null : (\r\n              <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                  <div className=\"mb-1\">\r\n                    <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                      <DropdownToggle tag=\"div\">\r\n                        {this.gridApi\r\n                          ? this.state.currenPageSize\r\n                          : \"\" * this.state.getPageSize -\r\n                            (this.state.getPageSize - 1)}{\" \"}\r\n                        -{\" \"}\r\n                        {this.state.rowData.length -\r\n                          this.state.currenPageSize * this.state.getPageSize >\r\n                        0\r\n                          ? this.state.currenPageSize * this.state.getPageSize\r\n                          : this.state.rowData.length}{\" \"}\r\n                        of {this.state.rowData.length}\r\n                        <ChevronDown className=\"ml-50\" size={15} />\r\n                      </DropdownToggle>\r\n                      <DropdownMenu right>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(20)}\r\n                        >\r\n                          20\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(50)}\r\n                        >\r\n                          50\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(100)}\r\n                        >\r\n                          100\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(134)}\r\n                        >\r\n                          134\r\n                        </DropdownItem>\r\n                      </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                  </div>\r\n                  <div className=\"d-flex flex-wrap  mb-1\">\r\n                    <div className=\"table-input mr-1\">\r\n                      <Input\r\n                        className=\"cssformanageassetinput cssmartopmargin\"\r\n                        placeholder=\"search...\"\r\n                        onChange={(e) => this.updateSearchQuery(e.target.value)}\r\n                        value={this.state.value}\r\n                      />\r\n                    </div>\r\n                    {/* <div style={{ marginRight: \"10px\" }}>\r\n                      <Route\r\n                        render={({ history }) => (\r\n                          <Button\r\n                            className=\" btn  float-right cssmartopmargin\"\r\n                            color=\"primary\"\r\n                            onClick={() => history.push(\"/app/AddAssets\")}\r\n                          >\r\n                            Add DueLifeDecalaration\r\n                          </Button>\r\n                        )}\r\n                      />\r\n                    </div> */}\r\n                    <div>\r\n                      <Button.Ripple\r\n                        className=\"cssmartopmargin\"\r\n                        color=\"primary\"\r\n                        onClick={() => this.gridApi.exportDataAsCsv()}\r\n                      >\r\n                        Export as CSV\r\n                      </Button.Ripple>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <ContextLayout.Consumer>\r\n                  {(context) => (\r\n                    <AgGridReact\r\n                      gridOptions={{}}\r\n                      rowSelection=\"multiple\"\r\n                      defaultColDef={defaultColDef}\r\n                      columnDefs={columnDefs}\r\n                      rowData={rowData}\r\n                      onGridReady={this.onGridReady}\r\n                      colResizeDefault={\"shift\"}\r\n                      animateRows={true}\r\n                      floatingFilter={false}\r\n                      pagination={true}\r\n                      paginationPageSize={this.state.paginationPageSize}\r\n                      pivotPanelShow=\"always\"\r\n                      enableRtl={context.state.direction === \"rtl\"}\r\n                    />\r\n                  )}\r\n                </ContextLayout.Consumer>\r\n              </div>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Duelifedeclaration;\r\n"],"sourceRoot":""}