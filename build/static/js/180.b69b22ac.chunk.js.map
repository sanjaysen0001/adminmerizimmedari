{"version":3,"sources":["views/apps/pageSetUp/termscondition/EditTermCondition.js"],"names":["EditTermCondition","props","onEditorStateChange","editorState","console","log","setState","desc","draftToHtml","convertToRaw","getCurrentContent","changeHandler","e","target","name","value","submitHandler","preventDefault","id","match","params","axiosConfig","post","state","then","response","swal","catch","error","data","EditorState","createEmpty","command","newState","RichUtils","handleKeyCommand","this","onChange","get","className","col-sm-6","render","history","onClick","push","onSubmit","toolbarClassName","wrapperClassName","editorClassName","toolbar","options","inline","bold","italic","underline","strikethrough","code","blockType","fontSize","fontFamily","color","React","Component"],"mappings":"2XAcMA,G,yDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAORC,oBAAsB,SAACC,GACrBC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CACZH,cAEAI,KAAMC,IAAYC,uBAAaN,EAAYO,yBAb5B,EAyCnBC,cAAgB,SAACC,GACf,EAAKN,SAAL,eAAiBM,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,SA1CzB,EA4CnBC,cAAgB,SAACJ,GACfA,EAAEK,iBACF,IAAMC,EAAO,EAAKjB,MAAMkB,MAAMC,OAAxBF,GACNd,QAAQC,IAAIa,GACZG,IACGC,KADH,gCACiCJ,GAAM,EAAKK,OACzCC,MAAK,SAACC,GACLrB,QAAQC,IAAIoB,GACZC,IAAK,WAAY,yBAA0B,cAK5CC,OAAM,SAACC,GACNxB,QAAQC,IAAIuB,EAAMH,SAASI,UAxD/B,EAAKN,MAAQ,CACXhB,KAAM,GACNJ,YAAa2B,cAAYC,eAJV,E,oDAgBnB,SAAiBC,EAAS7B,GACxB,IAAM8B,EAAWC,YAAUC,iBAAiBhC,EAAa6B,GAEzD,OAAIC,GACFG,KAAKC,SAASJ,GACP,WAGF,gB,+BAET,WAAqB,IAAD,OACZf,EAAOkB,KAAKnC,MAAMkB,MAAMC,OAAxBF,GACNG,IACGiB,IADH,kCACkCpB,IAC/BM,MAAK,SAACC,GACLrB,QAAQC,IAAIoB,EAASI,KAAKA,KAAKtB,MAC/B,EAAKD,SAAS,CACZC,KAAMkB,EAASI,KAAKA,KAAKtB,UAG5BoB,OAAM,SAACC,GACNxB,QAAQC,IAAIuB,Q,oBAyBlB,WACE,IAAQzB,EAAgBiC,KAAKb,MAArBpB,YACR,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKoC,UAAU,OACb,kBAAC,IAAD,KACE,wBAAIC,YAAA,EAASD,UAAU,cAAvB,4BAIF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEE,OAAQ,gBAAGC,EAAH,EAAGA,QAAH,OACN,kBAAC,IAAD,CACEH,UAAU,8BACVI,QAAS,kBACPD,EAAQE,KACN,qDAJN,aAcR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMC,SAAUT,KAAKpB,eASnB,kBAAC,SAAD,CACEb,YAAaA,EACbgC,iBAAkBC,KAAKD,iBACvBjC,oBAAqBkC,KAAKlC,oBAC1B4C,iBAAiB,wBACjBC,iBAAiB,eACjBC,gBAAgB,cAChBC,QAAS,CACPC,QAAS,CAAC,SAAU,YAAa,WAAY,cAC7CC,OAAQ,CACND,QAAS,CACP,OACA,SACA,YACA,gBACA,aAEFE,KAAM,CAAEb,UAAW,6BACnBc,OAAQ,CAAEd,UAAW,6BACrBe,UAAW,CAAEf,UAAW,6BACxBgB,cAAe,CAAEhB,UAAW,6BAC5BiB,KAAM,CAAEjB,UAAW,8BAErBkB,UAAW,CACTlB,UAAW,6BAEbmB,SAAU,CACRnB,UAAW,6BAEboB,WAAY,CACVpB,UAAW,gCAIjB,6BACA,kBAAC,IAAD,CAAQqB,MAAM,WAAd,iB,GAvIoBC,IAAMC,YA8IvB9D,a","file":"static/js/180.b69b22ac.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardBody, Col, Row, Form, Button } from \"reactstrap\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { EditorState, convertToRaw, RichUtils } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../../../../assets/scss/plugins/extensions/editor.scss\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { history } from \"../../../../history\";\r\nimport swal from \"sweetalert\";\r\nimport { Route } from \"react-router-dom\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\n\r\nclass EditTermCondition extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      desc: \"\",\r\n      editorState: EditorState.createEmpty(),\r\n    };\r\n  }\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    console.log(editorState);\r\n    this.setState({\r\n      editorState,\r\n      // desc: convertToRaw(editorState.getCurrentContent()),\r\n      desc: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n    });\r\n  };\r\n  handleKeyCommand(command, editorState) {\r\n    const newState = RichUtils.handleKeyCommand(editorState, command);\r\n\r\n    if (newState) {\r\n      this.onChange(newState);\r\n      return \"handled\";\r\n    }\r\n\r\n    return \"not-handled\";\r\n  }\r\n  componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .get(`/admin/getone_term_cond/${id}`)\r\n      .then((response) => {\r\n        console.log(response.data.data.desc);\r\n        this.setState({\r\n          desc: response.data.data.desc,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let { id } = this.props.match.params;\r\n    console.log(id);\r\n    axiosConfig\r\n      .post(`/admin/edit_term_cond/${id}`, this.state)\r\n      .then((response) => {\r\n        console.log(response);\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        // this.props.history.push(\r\n        //   `/app/pageSetUp/termscondition/TermConditionList`\r\n        // );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { editorState } = this.state;\r\n    return (\r\n      <Card>\r\n        <Row className=\"m-2\">\r\n          <Col>\r\n            <h1 col-sm-6 className=\"float-left\">\r\n              Edit Term And Condition\r\n            </h1>\r\n          </Col>\r\n          <Col>\r\n            <Route\r\n              render={({ history }) => (\r\n                <Button\r\n                  className=\" btn btn-danger float-right\"\r\n                  onClick={() =>\r\n                    history.push(\r\n                      \"/app/pageSetUP/termscondition/TermConditionList\"\r\n                    )\r\n                  }\r\n                >\r\n                  Back\r\n                </Button>\r\n              )}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <CardBody>\r\n          <Form onSubmit={this.submitHandler}>\r\n            {/* <Editor\r\n  editorState={this.state.editorState}\r\n  toolbarClassName=\"toolbarClassName\"\r\n  wrapperClassName=\"wrapperClassName\"\r\n  editorClassName=\"editorClassName\"\r\n  onEditorStateChange={this.onEditorStateChange}\r\n/>; */}\r\n\r\n            <Editor\r\n              editorState={editorState}\r\n              handleKeyCommand={this.handleKeyCommand}\r\n              onEditorStateChange={this.onEditorStateChange}\r\n              toolbarClassName=\"demo-toolbar-absolute\"\r\n              wrapperClassName=\"demo-wrapper\"\r\n              editorClassName=\"demo-editor\"\r\n              toolbar={{\r\n                options: [\"inline\", \"blockType\", \"fontSize\", \"fontFamily\"],\r\n                inline: {\r\n                  options: [\r\n                    \"bold\",\r\n                    \"italic\",\r\n                    \"underline\",\r\n                    \"strikethrough\",\r\n                    \"monospace\",\r\n                  ],\r\n                  bold: { className: \"bordered-option-classname\" },\r\n                  italic: { className: \"bordered-option-classname\" },\r\n                  underline: { className: \"bordered-option-classname\" },\r\n                  strikethrough: { className: \"bordered-option-classname\" },\r\n                  code: { className: \"bordered-option-classname\" },\r\n                },\r\n                blockType: {\r\n                  className: \"bordered-option-classname\",\r\n                },\r\n                fontSize: {\r\n                  className: \"bordered-option-classname\",\r\n                },\r\n                fontFamily: {\r\n                  className: \"bordered-option-classname\",\r\n                },\r\n              }}\r\n            />\r\n            <br />\r\n            <Button color=\"primary\">Submit</Button>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default EditTermCondition;\r\n"],"sourceRoot":""}