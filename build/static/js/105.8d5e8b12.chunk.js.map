{"version":3,"sources":["views/apps/plan/AddPlanType.js","../node_modules/draftjs-to-html/lib/draftjs-to-html.js"],"names":["AddPlanType","props","data","onEditorStateChange","editorState","setState","desc","draftToHtml","convertToRaw","getCurrentContent","handleFileChange1","event","console","log","target","files","handleFileChange","e","value","name","submitHandler1","preventDefault","formData","FormData","append","state","axiosConfig","post","then","response","swal","message","catch","error","submitHandler","payload","Asset_Type","assetType","Field_1","field1","Field_2","field2","Field_3","field3","Field_4","field4","Drop_down_Menu_Options","company","downloadExcel","ws","XLSX","aoa_to_sheet","wb","book_new","book_append_sheet","wbout","bookType","type","blob","Blob","s2ab","url","window","URL","createObjectURL","a","document","createElement","body","appendChild","href","download","click","revokeObjectURL","s","buf","ArrayBuffer","length","view","Uint8Array","i","charCodeAt","downloadImage","fetch","ok","Error","alert","planType","breadCrumbTitle","breadCrumbParent","breadCrumbActive","className","col-sm-6","style","color","fontSize","fontWeight","render","history","onClick","push","onSubmit","this","lg","md","sm","textTransform","marginBottom","onChange","Ripple","placeholder","justifyContent","display","React","Component","module","exports","forEach","obj","callback","key","hasOwnProperty","call","blockTypesMapping","unstyled","blockquote","code","getBlockTag","getBlockStyle","styles","concat","getStylesAtOffset","inlineStyles","offset","COLOR","BGCOLOR","FONTSIZE","FONTFAMILY","UNDERLINE","ITALIC","BOLD","STRIKETHROUGH","CODE","SUBSCRIPT","SUPERSCRIPT","sameStyleAsPrevious","index","sameStyled","getEntityMarkup","entityMap","entityKey","text","customEntityTransform","entity","html","targetOption","alignment","src","alt","height","width","getInlineStyleSections","block","start","end","styleSections","Array","from","section","inlineStyleRanges","range","indexOf","substring","getStyleArrayForBlock","getInlineStyleSectionMarkup","styleSection","styleTagSections","styleSectionText","stylePropertySection","content","map","ch","join","getSectionText","addInlineStyleMarkup","getStyleTagSectionMarkup","styleString","test","addStylePropertyMarkup","getBlockInnerMarkup","hashtagConfig","blockMarkup","sections","lastOffset","sectionRanges","entityRanges","blockText","counter","startIndex","trigger","separator","substr","endIndex","hashtag","getHashtagRanges","sort","s1","s2","r","getSections","sectionText","entityInlineMarkup","undefined","getSectionMarkup","replacedText","replace","trimLeadingZeros","trimTrailingZeros","getListMarkup","listBlocks","directional","previousBlock","listHtml","nestedListBlock","nestedBlock","depth","blockStyle","editorContent","blocks","blockType","blockHtml","str","trim","isAtomicEntityBlock","blockTag","getBlockMarkup","factory"],"mappings":"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","file":"static/js/105.8d5e8b12.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  FormGroup,\r\n} from \"reactstrap\";\r\nimport { BsDownload } from \"react-icons/bs\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { Route } from \"react-router-dom\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../../../assets/scss/plugins/extensions/editor.scss\";\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport swal from \"sweetalert\";\r\n\r\nclass AddPlanType extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      planType: \"\",\r\n      desc: \"\",\r\n    };\r\n  }\r\n\r\n  // Sample data for the Excel file\r\n  data = [\r\n    [\"S.No.\", \"Asset_Type\", \"Field_1\", \"Field_2\", \"Field_3\", \"Field_4\"],\r\n    [\r\n      \"1\",\r\n      \"Term Insurance\",\r\n      \"Upload Policy (Optional)\",\r\n      \"Policy issuer's Name \",\r\n      \"Policy Number \",\r\n      \"Re-enter Policy Number \",\r\n    ],\r\n  ];\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n      desc: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n    });\r\n  };\r\n\r\n  handleFileChange1 = (event) => {\r\n    console.log(event.target.files[0]);\r\n    this.setState({ files: event.target.files[0] });\r\n  };\r\n  handleFileChange = (e) => {\r\n    console.log(e.target.value);\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  submitHandler1 = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"file\", this.state.files);\r\n    axiosConfig\r\n      .post(\"/admin/import-data\", formData)\r\n      .then((response) => {\r\n        // console.log(response.data.message);\r\n        swal(\"Success!\", response.data.message, \"success\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const payload = {\r\n      Asset_Type: this.state.assetType,\r\n      Field_1: this.state.field1,\r\n      Field_2: this.state.field2,\r\n      Field_3: this.state.field3,\r\n      Field_4: this.state.field4,\r\n      Drop_down_Menu_Options: this.state.company,\r\n      // Offered_by_Post_office: this.state.field4,\r\n    };\r\n    console.log(payload);\r\n    axiosConfig\r\n      .post(\"/admin/save-field\", payload)\r\n      .then((response) => {\r\n        // console.log(response.data.message);\r\n        swal(\"Success!\", response.data.message, \"success\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n  // Function to trigger the download\r\n  downloadExcel = () => {\r\n    console.log(this.data);\r\n    const ws = XLSX.utils.aoa_to_sheet(this.data);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"Sheet1\");\r\n    const wbout = XLSX.write(wb, { bookType: \"xlsx\", type: \"binary\" });\r\n\r\n    const blob = new Blob([this.s2ab(wbout)], {\r\n      type: \"application/octet-stream\",\r\n    });\r\n\r\n    // Trigger download\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    document.body.appendChild(a);\r\n    a.href = url;\r\n    a.download = \"AssetType.xlsx\";\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n  };\r\n  s2ab = (s) => {\r\n    const buf = new ArrayBuffer(s.length);\r\n    const view = new Uint8Array(buf);\r\n    for (let i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xff;\r\n    return buf;\r\n  };\r\n  downloadImage = async () => {\r\n    const pdfUrl = \"\";\r\n    try {\r\n      const response = await fetch(pdfUrl);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to download PDF\");\r\n      }\r\n\r\n      // const blob = await response.blob();\r\n      // saveAs(blob, \"downloaded.pdf\");\r\n    } catch (error) {\r\n      console.error(\"Error downloading PDF:\", error);\r\n      // Display a user-friendly error message\r\n      alert(\"Failed to download PDF. Please try again later.\");\r\n    }\r\n    // }\r\n    // else if (extentionName == \"image\") {\r\n    //   if (!pdfUrl) {\r\n    //     console.error(\"Image URL is not available.\");\r\n    //     return;\r\n    //   }\r\n    //   const link = document.createElement(\"a\");\r\n    //   link.href = pdfUrl;\r\n    //   link.download = \"image.jpg\";\r\n    //   link.click();\r\n    // }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Add Assets\"\r\n          breadCrumbParent=\"Home\"\r\n          breadCrumbActive=\"Add Assets\"\r\n        />\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Add Assets\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              {\" \"}\r\n              <span\r\n                style={{\r\n                  color: \"rgb(43 21 215)\",\r\n                  fontSize: \"12px\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Download Bulk Import Sample Format\r\n              </span>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    type=\"download\"\r\n                    // className=\"float-right\"\r\n                    className=\"btn w-25\"\r\n                    onClick={this.downloadExcel}\r\n                  >\r\n                    <BsDownload />\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() => history.push(\"/app/assets/AsstesList\")}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler1}>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                  <Label\r\n                    style={{\r\n                      fontSize: \"18px\",\r\n                      textTransform: \"capitalize\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                  >\r\n                    bulk upload\r\n                  </Label>\r\n                  <Input\r\n                    type=\"file\"\r\n                    name=\"assetName\"\r\n                    onChange={this.handleFileChange1}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                  >\r\n                    Submit\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n              <h2>Asset Fields</h2>\r\n            </Form>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                  <Label style={{ fontSize: \"18px\" }}>Asset Name</Label>\r\n                  <Input\r\n                    style={{ fontSize: \"18px\" }}\r\n                    type=\"text\"\r\n                    name=\"assetType\"\r\n                    value={this.state.assetType}\r\n                    placeholder=\"Asset Name\"\r\n                    onChange={this.handleFileChange}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                  <Label style={{ fontSize: \"18px\" }}>Filed 1</Label>\r\n                  <Input\r\n                    style={{ fontSize: \"18px\" }}\r\n                    type=\"text\"\r\n                    placeholder=\"Field 1\"\r\n                    name=\"field1\"\r\n                    value={this.state.field1}\r\n                    onChange={this.handleFileChange}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                  <Label style={{ fontSize: \"18px\" }}>Filed 2</Label>\r\n                  <Input\r\n                    style={{ fontSize: \"18px\" }}\r\n                    type=\"text\"\r\n                    placeholder=\"Field 2\"\r\n                    name=\"field2\"\r\n                    value={this.state.field2}\r\n                    onChange={this.handleFileChange}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                  <Label style={{ fontSize: \"18px\" }}>Filed 3</Label>\r\n                  <Input\r\n                    style={{ fontSize: \"18px\" }}\r\n                    type=\"text\"\r\n                    placeholder=\"Field 3\"\r\n                    name=\"field3\"\r\n                    value={this.state.field3}\r\n                    onChange={this.handleFileChange}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                  <Label style={{ fontSize: \"18px\" }}>Filed 4</Label>\r\n                  <Input\r\n                    style={{ fontSize: \"18px\" }}\r\n                    type=\"text\"\r\n                    placeholder=\"Field 4\"\r\n                    name=\"field4\"\r\n                    value={this.state.field4}\r\n                    onChange={this.handleFileChange}\r\n                  />\r\n                </Col>\r\n                {/*\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"\">\r\n                  <Label for=\"data-category\">Drop_down_Menu_Options</Label>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"select\"\r\n                      required\r\n                      id=\"data-category\"\r\n                      name=\"company\"\r\n                      value={this.state.company}\r\n                      onChange={this.handleFileChange}\r\n                      defaultValue=\"\"\r\n                    >\r\n                      <option disabled value=\"\">\r\n                        Select Company\r\n                      </option>\r\n                      <option value=\"5\">All Insurance companies</option>\r\n                      <option value=\"Employees' Provident Fund Organization & Trusts\">\r\n                        Employees' Provident Fund Organization & Trusts\r\n                      </option>\r\n                      <option value=\"Pension Fund Regulatory and Development Authority (PFRDA)\">\r\n                        Pension Fund Regulatory and Development Authority\r\n                        (PFRDA)\r\n                      </option>\r\n                      <option value=\"Post Office & All Banks\">\r\n                        Post Office & All Banks\r\n                      </option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n                 */}\r\n              </Row>\r\n              <Row>\r\n                <div style={{ justifyContent: \"right\", display: \"flex\" }}>\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                  >\r\n                    Submit\r\n                  </Button.Ripple>\r\n                </div>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddPlanType;\r\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.draftjsToHtml = factory());\n}(this, (function () { 'use strict';\n\n  /**\n  * Utility function to execute callback for eack key->value pair.\n  */\n  function forEach(obj, callback) {\n    if (obj) {\n      for (var key in obj) {\n        // eslint-disable-line no-restricted-syntax\n        if ({}.hasOwnProperty.call(obj, key)) {\n          callback(key, obj[key]);\n        }\n      }\n    }\n  }\n  /**\n  * The function returns true if the string passed to it has no content.\n  */\n\n  function isEmptyString(str) {\n    if (str === undefined || str === null || str.length === 0 || str.trim().length === 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n  * Mapping block-type to corresponding html tag.\n  */\n\n  var blockTypesMapping = {\n    unstyled: 'p',\n    'header-one': 'h1',\n    'header-two': 'h2',\n    'header-three': 'h3',\n    'header-four': 'h4',\n    'header-five': 'h5',\n    'header-six': 'h6',\n    'unordered-list-item': 'ul',\n    'ordered-list-item': 'ol',\n    blockquote: 'blockquote',\n    code: 'pre'\n  };\n  /**\n  * Function will return HTML tag for a block.\n  */\n\n  function getBlockTag(type) {\n    return type && blockTypesMapping[type];\n  }\n  /**\n  * Function will return style string for a block.\n  */\n\n  function getBlockStyle(data) {\n    var styles = '';\n    forEach(data, function (key, value) {\n      if (value) {\n        styles += \"\".concat(key, \":\").concat(value, \";\");\n      }\n    });\n    return styles;\n  }\n  /**\n  * The function returns an array of hashtag-sections in blocks.\n  * These will be areas in block which have hashtags applicable to them.\n  */\n\n  function getHashtagRanges(blockText, hashtagConfig) {\n    var sections = [];\n\n    if (hashtagConfig) {\n      var counter = 0;\n      var startIndex = 0;\n      var text = blockText;\n      var trigger = hashtagConfig.trigger || '#';\n      var separator = hashtagConfig.separator || ' ';\n\n      for (; text.length > 0 && startIndex >= 0;) {\n        if (text[0] === trigger) {\n          startIndex = 0;\n          counter = 0;\n          text = text.substr(trigger.length);\n        } else {\n          startIndex = text.indexOf(separator + trigger);\n\n          if (startIndex >= 0) {\n            text = text.substr(startIndex + (separator + trigger).length);\n            counter += startIndex + separator.length;\n          }\n        }\n\n        if (startIndex >= 0) {\n          var endIndex = text.indexOf(separator) >= 0 ? text.indexOf(separator) : text.length;\n          var hashtag = text.substr(0, endIndex);\n\n          if (hashtag && hashtag.length > 0) {\n            sections.push({\n              offset: counter,\n              length: hashtag.length + trigger.length,\n              type: 'HASHTAG'\n            });\n          }\n\n          counter += trigger.length;\n        }\n      }\n    }\n\n    return sections;\n  }\n  /**\n  * The function returns an array of entity-sections in blocks.\n  * These will be areas in block which have same entity or no entity applicable to them.\n  */\n\n\n  function getSections(block, hashtagConfig) {\n    var sections = [];\n    var lastOffset = 0;\n    var sectionRanges = block.entityRanges.map(function (range) {\n      var offset = range.offset,\n          length = range.length,\n          key = range.key;\n      return {\n        offset: offset,\n        length: length,\n        key: key,\n        type: 'ENTITY'\n      };\n    });\n    sectionRanges = sectionRanges.concat(getHashtagRanges(block.text, hashtagConfig));\n    sectionRanges = sectionRanges.sort(function (s1, s2) {\n      return s1.offset - s2.offset;\n    });\n    sectionRanges.forEach(function (r) {\n      if (r.offset > lastOffset) {\n        sections.push({\n          start: lastOffset,\n          end: r.offset\n        });\n      }\n\n      sections.push({\n        start: r.offset,\n        end: r.offset + r.length,\n        entityKey: r.key,\n        type: r.type\n      });\n      lastOffset = r.offset + r.length;\n    });\n\n    if (lastOffset < block.text.length) {\n      sections.push({\n        start: lastOffset,\n        end: block.text.length\n      });\n    }\n\n    return sections;\n  }\n  /**\n  * Function to check if the block is an atomic entity block.\n  */\n\n\n  function isAtomicEntityBlock(block) {\n    if (block.entityRanges.length > 0 && (isEmptyString(block.text) || block.type === 'atomic')) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n  * The function will return array of inline styles applicable to the block.\n  */\n\n\n  function getStyleArrayForBlock(block) {\n    var text = block.text,\n        inlineStyleRanges = block.inlineStyleRanges;\n    var inlineStyles = {\n      BOLD: new Array(text.length),\n      ITALIC: new Array(text.length),\n      UNDERLINE: new Array(text.length),\n      STRIKETHROUGH: new Array(text.length),\n      CODE: new Array(text.length),\n      SUPERSCRIPT: new Array(text.length),\n      SUBSCRIPT: new Array(text.length),\n      COLOR: new Array(text.length),\n      BGCOLOR: new Array(text.length),\n      FONTSIZE: new Array(text.length),\n      FONTFAMILY: new Array(text.length),\n      length: text.length\n    };\n\n    if (inlineStyleRanges && inlineStyleRanges.length > 0) {\n      inlineStyleRanges.forEach(function (range) {\n        var offset = range.offset;\n        var length = offset + range.length;\n\n        for (var i = offset; i < length; i += 1) {\n          if (range.style.indexOf('color-') === 0) {\n            inlineStyles.COLOR[i] = range.style.substring(6);\n          } else if (range.style.indexOf('bgcolor-') === 0) {\n            inlineStyles.BGCOLOR[i] = range.style.substring(8);\n          } else if (range.style.indexOf('fontsize-') === 0) {\n            inlineStyles.FONTSIZE[i] = range.style.substring(9);\n          } else if (range.style.indexOf('fontfamily-') === 0) {\n            inlineStyles.FONTFAMILY[i] = range.style.substring(11);\n          } else if (inlineStyles[range.style]) {\n            inlineStyles[range.style][i] = true;\n          }\n        }\n      });\n    }\n\n    return inlineStyles;\n  }\n  /**\n  * The function will return inline style applicable at some offset within a block.\n  */\n\n\n  function getStylesAtOffset(inlineStyles, offset) {\n    var styles = {};\n\n    if (inlineStyles.COLOR[offset]) {\n      styles.COLOR = inlineStyles.COLOR[offset];\n    }\n\n    if (inlineStyles.BGCOLOR[offset]) {\n      styles.BGCOLOR = inlineStyles.BGCOLOR[offset];\n    }\n\n    if (inlineStyles.FONTSIZE[offset]) {\n      styles.FONTSIZE = inlineStyles.FONTSIZE[offset];\n    }\n\n    if (inlineStyles.FONTFAMILY[offset]) {\n      styles.FONTFAMILY = inlineStyles.FONTFAMILY[offset];\n    }\n\n    if (inlineStyles.UNDERLINE[offset]) {\n      styles.UNDERLINE = true;\n    }\n\n    if (inlineStyles.ITALIC[offset]) {\n      styles.ITALIC = true;\n    }\n\n    if (inlineStyles.BOLD[offset]) {\n      styles.BOLD = true;\n    }\n\n    if (inlineStyles.STRIKETHROUGH[offset]) {\n      styles.STRIKETHROUGH = true;\n    }\n\n    if (inlineStyles.CODE[offset]) {\n      styles.CODE = true;\n    }\n\n    if (inlineStyles.SUBSCRIPT[offset]) {\n      styles.SUBSCRIPT = true;\n    }\n\n    if (inlineStyles.SUPERSCRIPT[offset]) {\n      styles.SUPERSCRIPT = true;\n    }\n\n    return styles;\n  }\n  /**\n  * Function returns true for a set of styles if the value of these styles at an offset\n  * are same as that on the previous offset.\n  */\n\n  function sameStyleAsPrevious(inlineStyles, styles, index) {\n    var sameStyled = true;\n\n    if (index > 0 && index < inlineStyles.length) {\n      styles.forEach(function (style) {\n        sameStyled = sameStyled && inlineStyles[style][index] === inlineStyles[style][index - 1];\n      });\n    } else {\n      sameStyled = false;\n    }\n\n    return sameStyled;\n  }\n  /**\n  * Function returns html for text depending on inline style tags applicable to it.\n  */\n\n  function addInlineStyleMarkup(style, content) {\n    if (style === 'BOLD') {\n      return \"<strong>\".concat(content, \"</strong>\");\n    }\n\n    if (style === 'ITALIC') {\n      return \"<em>\".concat(content, \"</em>\");\n    }\n\n    if (style === 'UNDERLINE') {\n      return \"<ins>\".concat(content, \"</ins>\");\n    }\n\n    if (style === 'STRIKETHROUGH') {\n      return \"<del>\".concat(content, \"</del>\");\n    }\n\n    if (style === 'CODE') {\n      return \"<code>\".concat(content, \"</code>\");\n    }\n\n    if (style === 'SUPERSCRIPT') {\n      return \"<sup>\".concat(content, \"</sup>\");\n    }\n\n    if (style === 'SUBSCRIPT') {\n      return \"<sub>\".concat(content, \"</sub>\");\n    }\n\n    return content;\n  }\n  /**\n  * The function returns text for given section of block after doing required character replacements.\n  */\n\n  function getSectionText(text) {\n    if (text && text.length > 0) {\n      var chars = text.map(function (ch) {\n        switch (ch) {\n          case '\\n':\n            return '<br>';\n\n          case '&':\n            return '&amp;';\n\n          case '<':\n            return '&lt;';\n\n          case '>':\n            return '&gt;';\n\n          default:\n            return ch;\n        }\n      });\n      return chars.join('');\n    }\n\n    return '';\n  }\n  /**\n  * Function returns html for text depending on inline style tags applicable to it.\n  */\n\n\n  function addStylePropertyMarkup(styles, text) {\n    if (styles && (styles.COLOR || styles.BGCOLOR || styles.FONTSIZE || styles.FONTFAMILY)) {\n      var styleString = 'style=\"';\n\n      if (styles.COLOR) {\n        styleString += \"color: \".concat(styles.COLOR, \";\");\n      }\n\n      if (styles.BGCOLOR) {\n        styleString += \"background-color: \".concat(styles.BGCOLOR, \";\");\n      }\n\n      if (styles.FONTSIZE) {\n        styleString += \"font-size: \".concat(styles.FONTSIZE).concat(/^\\d+$/.test(styles.FONTSIZE) ? 'px' : '', \";\");\n      }\n\n      if (styles.FONTFAMILY) {\n        styleString += \"font-family: \".concat(styles.FONTFAMILY, \";\");\n      }\n\n      styleString += '\"';\n      return \"<span \".concat(styleString, \">\").concat(text, \"</span>\");\n    }\n\n    return text;\n  }\n  /**\n  * Function will return markup for Entity.\n  */\n\n  function getEntityMarkup(entityMap, entityKey, text, customEntityTransform) {\n    var entity = entityMap[entityKey];\n\n    if (typeof customEntityTransform === 'function') {\n      var html = customEntityTransform(entity, text);\n\n      if (html) {\n        return html;\n      }\n    }\n\n    if (entity.type === 'MENTION') {\n      return \"<a href=\\\"\".concat(entity.data.url, \"\\\" class=\\\"wysiwyg-mention\\\" data-mention data-value=\\\"\").concat(entity.data.value, \"\\\">\").concat(text, \"</a>\");\n    }\n\n    if (entity.type === 'LINK') {\n      var targetOption = entity.data.targetOption || '_self';\n      return \"<a href=\\\"\".concat(entity.data.url, \"\\\" target=\\\"\").concat(targetOption, \"\\\">\").concat(text, \"</a>\");\n    }\n\n    if (entity.type === 'IMAGE') {\n      var alignment = entity.data.alignment;\n\n      if (alignment && alignment.length) {\n        return \"<div style=\\\"text-align:\".concat(alignment, \";\\\"><img src=\\\"\").concat(entity.data.src, \"\\\" alt=\\\"\").concat(entity.data.alt, \"\\\" style=\\\"height: \").concat(entity.data.height, \";width: \").concat(entity.data.width, \"\\\"/></div>\");\n      }\n\n      return \"<img src=\\\"\".concat(entity.data.src, \"\\\" alt=\\\"\").concat(entity.data.alt, \"\\\" style=\\\"height: \").concat(entity.data.height, \";width: \").concat(entity.data.width, \"\\\"/>\");\n    }\n\n    if (entity.type === 'EMBEDDED_LINK') {\n      return \"<iframe width=\\\"\".concat(entity.data.width, \"\\\" height=\\\"\").concat(entity.data.height, \"\\\" src=\\\"\").concat(entity.data.src, \"\\\" frameBorder=\\\"0\\\"></iframe>\");\n    }\n\n    return text;\n  }\n  /**\n  * For a given section in a block the function will return a further list of sections,\n  * with similar inline styles applicable to them.\n  */\n\n\n  function getInlineStyleSections(block, styles, start, end) {\n    var styleSections = [];\n    var text = Array.from(block.text);\n\n    if (text.length > 0) {\n      var inlineStyles = getStyleArrayForBlock(block);\n      var section;\n\n      for (var i = start; i < end; i += 1) {\n        if (i !== start && sameStyleAsPrevious(inlineStyles, styles, i)) {\n          section.text.push(text[i]);\n          section.end = i + 1;\n        } else {\n          section = {\n            styles: getStylesAtOffset(inlineStyles, i),\n            text: [text[i]],\n            start: i,\n            end: i + 1\n          };\n          styleSections.push(section);\n        }\n      }\n    }\n\n    return styleSections;\n  }\n  /**\n  * Replace leading blank spaces by &nbsp;\n  */\n\n\n  function trimLeadingZeros(sectionText) {\n    if (sectionText) {\n      var replacedText = sectionText;\n\n      for (var i = 0; i < replacedText.length; i += 1) {\n        if (sectionText[i] === ' ') {\n          replacedText = replacedText.replace(' ', '&nbsp;');\n        } else {\n          break;\n        }\n      }\n\n      return replacedText;\n    }\n\n    return sectionText;\n  }\n  /**\n  * Replace trailing blank spaces by &nbsp;\n  */\n\n  function trimTrailingZeros(sectionText) {\n    if (sectionText) {\n      var replacedText = sectionText;\n\n      for (var i = replacedText.length - 1; i >= 0; i -= 1) {\n        if (replacedText[i] === ' ') {\n          replacedText = \"\".concat(replacedText.substring(0, i), \"&nbsp;\").concat(replacedText.substring(i + 1));\n        } else {\n          break;\n        }\n      }\n\n      return replacedText;\n    }\n\n    return sectionText;\n  }\n  /**\n  * The method returns markup for section to which inline styles\n  * like BOLD, ITALIC, UNDERLINE, STRIKETHROUGH, CODE, SUPERSCRIPT, SUBSCRIPT are applicable.\n  */\n\n  function getStyleTagSectionMarkup(styleSection) {\n    var styles = styleSection.styles,\n        text = styleSection.text;\n    var content = getSectionText(text);\n    forEach(styles, function (style, value) {\n      content = addInlineStyleMarkup(style, content);\n    });\n    return content;\n  }\n  /**\n  * The method returns markup for section to which inline styles\n  like color, background-color, font-size are applicable.\n  */\n\n\n  function getInlineStyleSectionMarkup(block, styleSection) {\n    var styleTagSections = getInlineStyleSections(block, ['BOLD', 'ITALIC', 'UNDERLINE', 'STRIKETHROUGH', 'CODE', 'SUPERSCRIPT', 'SUBSCRIPT'], styleSection.start, styleSection.end);\n    var styleSectionText = '';\n    styleTagSections.forEach(function (stylePropertySection) {\n      styleSectionText += getStyleTagSectionMarkup(stylePropertySection);\n    });\n    styleSectionText = addStylePropertyMarkup(styleSection.styles, styleSectionText);\n    return styleSectionText;\n  }\n  /*\n  * The method returns markup for an entity section.\n  * An entity section is a continuous section in a block\n  * to which same entity or no entity is applicable.\n  */\n\n\n  function getSectionMarkup(block, entityMap, section, customEntityTransform) {\n    var entityInlineMarkup = [];\n    var inlineStyleSections = getInlineStyleSections(block, ['COLOR', 'BGCOLOR', 'FONTSIZE', 'FONTFAMILY'], section.start, section.end);\n    inlineStyleSections.forEach(function (styleSection) {\n      entityInlineMarkup.push(getInlineStyleSectionMarkup(block, styleSection));\n    });\n    var sectionText = entityInlineMarkup.join('');\n\n    if (section.type === 'ENTITY') {\n      if (section.entityKey !== undefined && section.entityKey !== null) {\n        sectionText = getEntityMarkup(entityMap, section.entityKey, sectionText, customEntityTransform); // eslint-disable-line max-len\n      }\n    } else if (section.type === 'HASHTAG') {\n      sectionText = \"<a href=\\\"\".concat(sectionText, \"\\\" class=\\\"wysiwyg-hashtag\\\">\").concat(sectionText, \"</a>\");\n    }\n\n    return sectionText;\n  }\n  /**\n  * Function will return the markup for block preserving the inline styles and\n  * special characters like newlines or blank spaces.\n  */\n\n\n  function getBlockInnerMarkup(block, entityMap, hashtagConfig, customEntityTransform) {\n    var blockMarkup = [];\n    var sections = getSections(block, hashtagConfig);\n    sections.forEach(function (section, index) {\n      var sectionText = getSectionMarkup(block, entityMap, section, customEntityTransform);\n\n      if (index === 0) {\n        sectionText = trimLeadingZeros(sectionText);\n      }\n\n      if (index === sections.length - 1) {\n        sectionText = trimTrailingZeros(sectionText);\n      }\n\n      blockMarkup.push(sectionText);\n    });\n    return blockMarkup.join('');\n  }\n  /**\n  * Function will return html for the block.\n  */\n\n  function getBlockMarkup(block, entityMap, hashtagConfig, directional, customEntityTransform) {\n    var blockHtml = [];\n\n    if (isAtomicEntityBlock(block)) {\n      blockHtml.push(getEntityMarkup(entityMap, block.entityRanges[0].key, undefined, customEntityTransform));\n    } else {\n      var blockTag = getBlockTag(block.type);\n\n      if (blockTag) {\n        blockHtml.push(\"<\".concat(blockTag));\n        var blockStyle = getBlockStyle(block.data);\n\n        if (blockStyle) {\n          blockHtml.push(\" style=\\\"\".concat(blockStyle, \"\\\"\"));\n        }\n\n        if (directional) {\n          blockHtml.push(' dir = \"auto\"');\n        }\n\n        blockHtml.push('>');\n        blockHtml.push(getBlockInnerMarkup(block, entityMap, hashtagConfig, customEntityTransform));\n        blockHtml.push(\"</\".concat(blockTag, \">\"));\n      }\n    }\n\n    blockHtml.push('\\n');\n    return blockHtml.join('');\n  }\n\n  /**\n  * Function to check if a block is of type list.\n  */\n\n  function isList(blockType) {\n    return blockType === 'unordered-list-item' || blockType === 'ordered-list-item';\n  }\n  /**\n  * Function will return html markup for a list block.\n  */\n\n  function getListMarkup(listBlocks, entityMap, hashtagConfig, directional, customEntityTransform) {\n    var listHtml = [];\n    var nestedListBlock = [];\n    var previousBlock;\n    listBlocks.forEach(function (block) {\n      var nestedBlock = false;\n\n      if (!previousBlock) {\n        listHtml.push(\"<\".concat(getBlockTag(block.type), \">\\n\"));\n      } else if (previousBlock.type !== block.type) {\n        listHtml.push(\"</\".concat(getBlockTag(previousBlock.type), \">\\n\"));\n        listHtml.push(\"<\".concat(getBlockTag(block.type), \">\\n\"));\n      } else if (previousBlock.depth === block.depth) {\n        if (nestedListBlock && nestedListBlock.length > 0) {\n          listHtml.push(getListMarkup(nestedListBlock, entityMap, hashtagConfig, directional, customEntityTransform));\n          nestedListBlock = [];\n        }\n      } else {\n        nestedBlock = true;\n        nestedListBlock.push(block);\n      }\n\n      if (!nestedBlock) {\n        listHtml.push('<li');\n        var blockStyle = getBlockStyle(block.data);\n\n        if (blockStyle) {\n          listHtml.push(\" style=\\\"\".concat(blockStyle, \"\\\"\"));\n        }\n\n        if (directional) {\n          listHtml.push(' dir = \"auto\"');\n        }\n\n        listHtml.push('>');\n        listHtml.push(getBlockInnerMarkup(block, entityMap, hashtagConfig, customEntityTransform));\n        listHtml.push('</li>\\n');\n        previousBlock = block;\n      }\n    });\n\n    if (nestedListBlock && nestedListBlock.length > 0) {\n      listHtml.push(getListMarkup(nestedListBlock, entityMap, hashtagConfig, directional, customEntityTransform));\n    }\n\n    listHtml.push(\"</\".concat(getBlockTag(previousBlock.type), \">\\n\"));\n    return listHtml.join('');\n  }\n\n  /**\n  * The function will generate html markup for given draftjs editorContent.\n  */\n\n  function draftToHtml(editorContent, hashtagConfig, directional, customEntityTransform) {\n    var html = [];\n\n    if (editorContent) {\n      var blocks = editorContent.blocks,\n          entityMap = editorContent.entityMap;\n\n      if (blocks && blocks.length > 0) {\n        var listBlocks = [];\n        blocks.forEach(function (block) {\n          if (isList(block.type)) {\n            listBlocks.push(block);\n          } else {\n            if (listBlocks.length > 0) {\n              var listHtml = getListMarkup(listBlocks, entityMap, hashtagConfig, customEntityTransform); // eslint-disable-line max-len\n\n              html.push(listHtml);\n              listBlocks = [];\n            }\n\n            var blockHtml = getBlockMarkup(block, entityMap, hashtagConfig, directional, customEntityTransform);\n            html.push(blockHtml);\n          }\n        });\n\n        if (listBlocks.length > 0) {\n          var listHtml = getListMarkup(listBlocks, entityMap, hashtagConfig, directional, customEntityTransform); // eslint-disable-line max-len\n\n          html.push(listHtml);\n          listBlocks = [];\n        }\n      }\n    }\n\n    return html.join('');\n  }\n\n  return draftToHtml;\n\n})));\n"],"sourceRoot":""}