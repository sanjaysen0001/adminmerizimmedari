{"version":3,"sources":["views/apps/policy/policyType/AddPolicyType.js"],"names":["AddPolicyType","props","onEditorStateChange","editorState","setState","desc","draftToHtml","convertToRaw","getCurrentContent","changeHandler1","e","status","target","value","changeHandler","name","submitHandler","adminId","localStorage","getItem","preventDefault","description","pt_type","state","policyType","pt_type_desc","axiosConfig","post","then","response","console","log","swal","history","push","catch","error","breadCrumbTitle","breadCrumbParent","breadCrumbActive","className","col-sm-6","render","onClick","onSubmit","this","lg","md","sm","type","placeholder","onChange","toolbarClassName","wrapperClassName","editorClassName","toolbar","options","inline","bold","italic","underline","strikethrough","code","blockType","fontSize","fontFamily","Ripple","color","React","Component"],"mappings":"uYAsBMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAMRC,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CACZD,cACAE,KAAMC,IAAYC,uBAAaJ,EAAYK,yBAV5B,EAanBC,eAAiB,SAACC,GAChB,EAAKN,SAAS,CAAEO,OAAQD,EAAEE,OAAOC,SAdhB,EAgBnBC,cAAgB,SAACJ,GACf,EAAKN,SAAL,eAAiBM,EAAEE,OAAOG,KAAOL,EAAEE,OAAOC,SAjBzB,EAmBnBG,cAAgB,SAACN,GACf,IAAMO,EAAUC,aAAaC,QAAQ,WACrCT,EAAEU,iBACF,IAAMC,EAAc,CAClBC,QAAS,EAAKC,MAAMC,WACpBC,aAAc,EAAKF,MAAMlB,MAG3BqB,IACGC,KADH,wBACyBV,GAAWI,GACjCO,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZG,IAAK,WAAY,yBAA0B,WAC3C,EAAK5B,SAAS,CAAEC,KAAM,KACtB,EAAKJ,MAAMgC,QAAQC,KAAK,iCAEzBC,OAAM,SAACC,GACNN,QAAQC,IAAIK,OAlChB,EAAKb,MAAQ,CACXC,WAAY,GACZnB,KAAM,IAJS,E,0CAwCnB,WACE,OACE,6BACE,kBAAC,IAAD,CACEgC,gBAAgB,aAChBC,iBAAiB,OACjBC,iBAAiB,gBAEnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,UAAU,OACb,kBAAC,IAAD,KACE,wBAAIC,YAAA,EAASD,UAAU,cAAvB,eAIF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEE,OAAQ,gBAAGT,EAAH,EAAGA,QAAH,OACN,kBAAC,IAAD,CACEO,UAAU,8BACVG,QAAS,kBAAMV,EAAQC,KAAK,gCAF9B,aAUR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMM,UAAU,MAAMI,SAAUC,KAAK7B,eACnC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK8B,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKR,UAAU,QACnC,kBAAC,IAAD,mBACA,kBAAC,IAAD,CACES,KAAK,OACLlC,KAAK,aACLmC,YAAY,aACZrC,MAAOgC,KAAKtB,MAAMC,WAClB2B,SAAUN,KAAK/B,iBAGnB,kBAAC,IAAD,CAAKgC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKR,UAAU,QACnC,kBAAC,IAAD,qBACA,kBAAC,SAAD,CACEY,iBAAiB,wBACjBC,iBAAiB,eACjBC,gBAAgB,cAChBnD,YAAa0C,KAAKtB,MAAMpB,YACxBD,oBAAqB2C,KAAK3C,oBAC1BqD,QAAS,CACPC,QAAS,CACP,SACA,YACA,WACA,cAEFC,OAAQ,CACND,QAAS,CACP,OACA,SACA,YACA,gBACA,aAEFE,KAAM,CAAElB,UAAW,6BACnBmB,OAAQ,CAAEnB,UAAW,6BACrBoB,UAAW,CAAEpB,UAAW,6BACxBqB,cAAe,CACbrB,UAAW,6BAEbsB,KAAM,CAAEtB,UAAW,8BAErBuB,UAAW,CACTvB,UAAW,6BAEbwB,SAAU,CACRxB,UAAW,6BAEbyB,WAAY,CACVzB,UAAW,kCAOrB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKM,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIR,UAAU,QAClC,kBAAC,IAAO0B,OAAR,CACEC,MAAM,UACNlB,KAAK,SACLT,UAAU,aAHZ,oB,GAjIU4B,IAAMC,WAkJnBrE","file":"static/js/228.460406fe.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Button,\r\n} from \"reactstrap\";\r\n// import swal from \"sweetalert\";\r\nimport { Route } from \"react-router-dom\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../../../../assets/scss/plugins/extensions/editor.scss\";\r\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport swal from \"sweetalert\";\r\n\r\nclass AddPolicyType extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      policyType: \"\",\r\n      desc: \"\",\r\n    };\r\n  }\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n      desc: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n    });\r\n  };\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitHandler = (e) => {\r\n    const adminId = localStorage.getItem(\"AdminId\");\r\n    e.preventDefault();\r\n    const description = {\r\n      pt_type: this.state.policyType,\r\n      pt_type_desc: this.state.desc,\r\n    };\r\n\r\n    axiosConfig\r\n      .post(`/admin/add_Pt/${adminId}`, description)\r\n      .then((response) => {\r\n        console.log(response);\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        this.setState({ desc: \"\" });\r\n        this.props.history.push(\"/app/policy/PolicyTypeList\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"PolicyType\"\r\n          breadCrumbParent=\"Home\"\r\n          breadCrumbActive=\"PolicyType \"\r\n        />\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                PolityType\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() => history.push(\"/app/policy/PolicyTypeList\")}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                  <Label>PolcyType </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"policyType\"\r\n                    placeholder=\"PolicyType\"\r\n                    value={this.state.policyType}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                  <Label>Descripition</Label>\r\n                  <Editor\r\n                    toolbarClassName=\"demo-toolbar-absolute\"\r\n                    wrapperClassName=\"demo-wrapper\"\r\n                    editorClassName=\"demo-editor\"\r\n                    editorState={this.state.editorState}\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                    toolbar={{\r\n                      options: [\r\n                        \"inline\",\r\n                        \"blockType\",\r\n                        \"fontSize\",\r\n                        \"fontFamily\",\r\n                      ],\r\n                      inline: {\r\n                        options: [\r\n                          \"bold\",\r\n                          \"italic\",\r\n                          \"underline\",\r\n                          \"strikethrough\",\r\n                          \"monospace\",\r\n                        ],\r\n                        bold: { className: \"bordered-option-classname\" },\r\n                        italic: { className: \"bordered-option-classname\" },\r\n                        underline: { className: \"bordered-option-classname\" },\r\n                        strikethrough: {\r\n                          className: \"bordered-option-classname\",\r\n                        },\r\n                        code: { className: \"bordered-option-classname\" },\r\n                      },\r\n                      blockType: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                      fontSize: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                      fontFamily: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                  >\r\n                    Submit\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddPolicyType;\r\n"],"sourceRoot":""}