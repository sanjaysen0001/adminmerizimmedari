{"version":3,"sources":["views/apps/zimmedari/NomineeList.js"],"names":["NomineeList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","userId","userName","mobileNo","console","log","price","nominee","map","nomi","index","Fragment","key","relationWithNominee","length","NomineePhoneNumber","mobileVerifyStatus","nomineeEmailId","mailVerifyStatus","render","history","size","color","onClick","push","pathname","_id","runthisfunction","AssetList","axiosConfig","get","then","response","setState","catch","err","swal","onGridReady","gridApi","api","gridColumnApi","columnApi","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","this","id","buttons","cancel","text","value","delete","col-sm-6","tag","right","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"iZAuBMA,E,4MACJC,MAAQ,CACNC,QAAS,GAETC,mBAAoB,GACpBC,eAAgB,GAChBC,YAAa,GACbC,cAAe,CACbC,UAAU,EACVC,UAAU,EACVC,WAAW,EACXC,cAAc,GAEhBC,WAAY,CACV,CACEC,WAAY,OACZC,YAAa,oBACbC,MAAO,oBACPC,MAAM,IAENC,QAAQ,GAGV,CACEJ,WAAY,UACZE,MAAO,SAEPC,MAAM,IAENE,sBAAuB,SAACC,GAAY,IAAD,EACjC,OAAO,yBAAKC,UAAU,IAAf,OAAmBD,QAAnB,IAAmBA,GAAnB,UAAmBA,EAAQE,YAA3B,aAAmB,EAAcC,OAAOA,UAGnD,CACET,WAAY,YACZE,MAAO,WAEPC,MAAM,IAENE,sBAAuB,SAACC,GAAY,IAAD,EACjC,OAAO,yBAAKC,UAAU,IAAf,OAAmBD,QAAnB,IAAmBA,GAAnB,UAAmBA,EAAQE,YAA3B,aAAmB,EAAcC,OAAOC,YAGnD,CACEV,WAAY,YACZE,MAAO,UAEPC,MAAM,IAENE,sBAAuB,SAACC,GAAY,IAAD,EACjC,OAAO,yBAAKC,UAAU,IAAf,OAAmBD,QAAnB,IAAmBA,GAAnB,UAAmBA,EAAQE,YAA3B,aAAmB,EAAcC,OAAOE,YAGnD,CACEX,WAAY,aACZE,MAAO,YAEPC,MAAM,IAENE,sBAAuB,SAACC,GAAY,IAAD,EAEjC,OADAM,QAAQC,IAAIP,EAAOE,MACZ,yBAAKD,UAAU,IAAf,OAAmBD,QAAnB,IAAmBA,GAAnB,UAAmBA,EAAQE,YAA3B,aAAmB,EAAcM,SAG5C,CACEd,WAAY,wBACZE,MAAO,sBAEPC,MAAM,IAENE,sBAAuB,SAACC,GAAY,IAAD,EACjC,OACE,yBAAKC,UAAU,IAAf,UACGD,EAAOE,YADV,aACG,EAAaO,QAAQC,KAAI,SAACC,EAAMC,GAAP,OACxB,kBAAC,IAAMC,SAAP,CAAgBC,IAAKF,GAClBD,EAAKI,oBACLH,IAAUZ,EAAOE,KAAKO,QAAQO,OAAS,GAAK,YAQzD,CACEtB,WAAY,oBACZE,MAAO,iBAEPC,MAAM,IAENE,sBAAuB,SAACC,GAAY,IAAD,EACjC,OACE,yBAAKC,UAAU,IAAf,UACGD,EAAOE,YADV,aACG,EAAaO,QAAQC,KAAI,SAACC,EAAMC,GAAP,OACxB,kBAAC,IAAMC,SAAP,CAAgBC,IAAKF,GAClBD,EAAKM,mBACLL,IAAUZ,EAAOE,KAAKO,QAAQO,OAAS,GAAK,YAOzD,CACEtB,WAAY,2BACZE,MAAO,uBAEPC,MAAM,IAENE,sBAAuB,SAACC,GAAY,IAAD,EACjC,OAAO,yBAAKC,UAAU,IAAf,UAAmBD,EAAOE,YAA1B,aAAmB,EAAaO,QAAQC,KAAI,SAAAC,GAAI,OAAGA,EAAKO,yBAGnE,CACExB,WAAY,gBACZE,MAAO,eAEPC,MAAM,IAENE,sBAAuB,SAACC,GAAY,IAAD,EAEjC,OAAO,yBAAKC,UAAU,IAAf,UACND,EAAOE,YADD,aACN,EAAaO,QAAQC,KAAI,SAAAC,GAAI,OAAEA,EAAKQ,qBAIzC,CACEzB,WAAY,0BACZE,MAAO,uBAEPC,MAAM,IAENE,sBAAuB,SAACC,GAAY,IAAD,EACjC,OAAO,yBAAKC,UAAU,IAAf,UAAmBD,EAAOE,YAA1B,aAAmB,EAAaO,QAAQC,KAAI,SAAAC,GAAI,OAAGA,EAAKS,uBAInE,CACE1B,WAAY,UACZE,MAAO,YACPC,MAAM,IAGNE,sBAAuB,SAACC,GACtB,OACE,yBAAKC,UAAU,0BACb,kBAAC,IAAD,CACEoB,OAAQ,gBAAGC,EAAH,EAAGA,QAAH,OACN,kBAAC,IAAD,CACErB,UAAU,QACVsB,KAAK,OACLC,MAAM,QACNC,QAAS,wBACPH,EAAQI,KAAK,CACXC,SAAS,0BAAD,cAA4B3B,QAA5B,IAA4BA,GAA5B,UAA4BA,EAAQE,YAApC,aAA4B,EAAc0B,KAClD7C,MAAOiB,EAAOE,aAMxB,kBAAC,IAAD,CACEmB,OAAQ,gBAAGC,EAAH,EAAGA,QAAH,OACN,kBAAC,IAAD,CACErB,UAAU,QACVsB,KAAK,OACLC,MAAM,OACNC,QAAS,wBACPH,EAAQI,KAAK,CACXC,SAAS,0BAAD,cAA4B3B,QAA5B,IAA4BA,GAA5B,UAA4BA,EAAQE,YAApC,aAA4B,EAAc0B,KAClD7C,MAAOiB,EAAOE,aAOxB,kBAAC,IAAD,CACED,UAAU,QACVsB,KAAK,OACLC,MAAM,MACNC,QAAS,WAAO,IAAD,EACb,EAAKI,gBAAL,UAAqB7B,EAAOE,YAA5B,aAAqB,EAAa0B,a,EAyClDE,UAAY,WACVC,IACGC,IAAI,uBACJC,MAAK,SAACC,GAAc,IAAD,EACZlD,EAAO,UAAGkD,EAAShC,YAAZ,aAAG,EAAepB,YAE/B,EAAKqD,SAAS,CAAEnD,eAEjBoD,OAAM,SAACC,GACNC,IAAK,4B,EA8BXC,YAAc,SAACvC,GACb,EAAKwC,QAAUxC,EAAOyC,IACtB,EAAKC,cAAgB1C,EAAO2C,UAC5B,EAAKR,SAAS,CACZjD,eAAgB,EAAKsD,QAAQI,2BAA6B,EAC1DzD,YAAa,EAAKqD,QAAQK,wBAC1BC,WAAY,EAAKN,QAAQO,6B,EAI7BC,kBAAoB,SAACC,GACnB,EAAKT,QAAQU,eAAeD,I,EAG9BE,WAAa,SAACF,GACR,EAAKT,UACP,EAAKA,QAAQY,sBAAsBC,OAAOJ,IAC1C,EAAKd,SAAS,CACZjD,eAAgB+D,EAChB9D,YAAa8D,M,uDA7DnB,WACEK,KAAKxB,c,6BAgBP,SAAgByB,GAAK,IAAD,OAClBjB,IAAK,oCAEH,wCAEA,CACEkB,QAAS,CACPC,OAAQ,SACRrB,MAAO,CAAEsB,KAAM,UAAWC,MAAO,YAGrC1B,MAAK,SAAC0B,GACN,OAAQA,GACN,IAAK,SACH,MACF,IAAK,QACH5B,IAAY6B,OAAZ,8BAA0CL,IAAMtB,MAAK,SAACC,GACpD,EAAKJ,qB,oBAgCf,WAAU,IAAD,OACP,EAA+CwB,KAAKvE,MAA5CC,EAAR,EAAQA,QAASS,EAAjB,EAAiBA,WAAYL,EAA7B,EAA6BA,cAC7B,OACE,kBAAC,IAAMyB,SAAP,KACE,kBAAC,IAAD,CAAMZ,UAAU,+BACd,kBAAC,IAAD,CAAKA,UAAU,OACb,kBAAC,IAAD,KACE,wBAAI4D,YAAA,EAAS5D,UAAU,cAAvB,iBAIF,kBAAC,IAAD,CAAKA,UAAU,MAKjB,kBAAC,IAAD,CAAUA,UAAU,QACM,OAAvBqD,KAAKvE,MAAMC,QAAmB,KAC7B,yBAAKiB,UAAU,8CACb,yBAAKA,UAAU,+DACb,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAAsBA,UAAU,mBAC9B,kBAAC,IAAD,CAAgB6D,IAAI,OACjBR,KAAKd,QACFc,KAAKvE,MAAMG,eACX,GAAKoE,KAAKvE,MAAMI,aACfmE,KAAKvE,MAAMI,YAAc,GAAI,IAJpC,IAKI,IACDmE,KAAKvE,MAAMC,QAAQgC,OAClBsC,KAAKvE,MAAMG,eAAiBoE,KAAKvE,MAAMI,YACzC,EACImE,KAAKvE,MAAMG,eAAiBoE,KAAKvE,MAAMI,YACvCmE,KAAKvE,MAAMC,QAAQgC,OAAQ,IAVjC,MAWMsC,KAAKvE,MAAMC,QAAQgC,OACvB,kBAAC,IAAD,CAAaf,UAAU,QAAQsB,KAAM,MAEvC,kBAAC,IAAD,CAAcwC,OAAK,GACjB,kBAAC,IAAD,CACED,IAAI,MACJrC,QAAS,kBAAM,EAAK0B,WAAW,MAFjC,MAMA,kBAAC,IAAD,CACEW,IAAI,MACJrC,QAAS,kBAAM,EAAK0B,WAAW,MAFjC,MAMA,kBAAC,IAAD,CACEW,IAAI,MACJrC,QAAS,kBAAM,EAAK0B,WAAW,OAFjC,OAMA,kBAAC,IAAD,CACEW,IAAI,MACJrC,QAAS,kBAAM,EAAK0B,WAAW,OAFjC,UASN,yBAAKlD,UAAU,0BACb,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CACEA,UAAU,yCACV+D,YAAY,YACZC,SAAU,SAACC,GAAD,OAAO,EAAKlB,kBAAkBkB,EAAEC,OAAOR,QACjDA,MAAOL,KAAKvE,MAAM4E,SAItB,6BACE,kBAAC,IAAOS,OAAR,CACAnE,UAAU,kBACRuB,MAAM,UACNC,QAAS,kBAAM,EAAKe,QAAQ6B,oBAH9B,oBAUN,kBAAC,IAAcC,SAAf,MACG,SAACC,GAAD,OACC,kBAAC,cAAD,CACEC,YAAa,GACbC,aAAa,WACbrF,cAAeA,EACfK,WAAYA,EACZT,QAASA,EACTuD,YAAa,EAAKA,YAClBmC,iBAAkB,QAClBC,aAAa,EACbC,gBAAgB,EAChBC,YAAY,EACZ5F,mBAAoB,EAAKF,MAAME,mBAC/B6F,eAAe,SACfC,UAAuC,QAA5BR,EAAQxF,MAAMiG,uB,GAlYrBC,IAAMC,WA8YjBpG","file":"static/js/292.f8e99658.chunk.js","sourcesContent":["\r\n\r\nimport React from \"react\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Card, \r\n  Input,\r\n  Button,\r\n  CardBody,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n} from \"reactstrap\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { ChevronDown, Edit, Eye, Trash2 } from \"react-feather\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport swal from \"sweetalert\";\r\n// import ReactHtmlParser from \"react-html-parser\";\r\nclass NomineeList extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n   \r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width:100,\r\n      \r\n        filter: true,\r\n      },\r\n     \r\n      {\r\n        headerName: \"User Id\",\r\n        field: \"userid\",\r\n\r\n        width:200,\r\n       \r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.userId.userId}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"User Name\",\r\n        field: \"username\",\r\n\r\n        width:200,\r\n       \r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.userId.userName}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Phone No.\",\r\n        field: \"phoneno\",\r\n\r\n        width:200,\r\n       \r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.userId.mobileNo}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Nominee Id\",\r\n        field: \"nomineeid\",\r\n\r\n        width:200,\r\n       \r\n        cellRendererFramework: (params) => {\r\n          console.log(params.data)\r\n          return <div className=\"\">{params?.data?.price}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Relation With Nominee\",\r\n        field: \"relationwithnominee\",\r\n\r\n        width:200,\r\n       \r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"\">\r\n              {params.data?.nominee.map((nomi, index) => (\r\n                <React.Fragment key={index}>\r\n                  {nomi.relationWithNominee}\r\n                  {index !== params.data.nominee.length - 1 && \", \"}\r\n                </React.Fragment>\r\n              ))}\r\n            </div>\r\n          );\r\n        },\r\n        \r\n      },\r\n      {\r\n        headerName: \"Nominee Phone No.\",\r\n        field: \"nomineephoneno\",\r\n\r\n        width:200,\r\n       \r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"\">\r\n              {params.data?.nominee.map((nomi, index) => (\r\n                <React.Fragment key={index}>\r\n                  {nomi.NomineePhoneNumber}\r\n                  {index !== params.data.nominee.length - 1 && \", \"}\r\n                </React.Fragment>\r\n              ))}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Nominee Phone No. Status\",\r\n        field: \"nomineephonenostatus\",\r\n\r\n        width:200,\r\n       \r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params.data?.nominee.map(nomi=> nomi.mobileVerifyStatus)}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Nominee Email\",\r\n        field: \"nomineeemail\",\r\n\r\n        width:200,\r\n       \r\n        cellRendererFramework: (params) => {\r\n        \r\n          return <div className=\"\">\r\n          {params.data?.nominee.map(nomi=>nomi.nomineeEmailId)}\r\n          </div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Nominee Email-id Status\",\r\n        field: \"nomineeemailidstatus\",\r\n\r\n        width:200,\r\n       \r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params.data?.nominee.map(nomi=> nomi.mailVerifyStatus)}</div>;\r\n        },\r\n      },\r\n     \r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        width:200,\r\n       \r\n        // pinned: window.innerWidth > 992 ? \"right\" : false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Eye\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"green\"\r\n                    onClick={() =>\r\n                      history.push({\r\n                        pathname: `/app/view-subscribtion/${params?.data?._id}`,\r\n                        state: params.data,\r\n                      })\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Edit\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"blue\"\r\n                    onClick={() =>\r\n                      history.push({\r\n                        pathname: `/app/Edit-subscribtion/${params?.data?._id}`,\r\n                        state: params.data,\r\n                      })\r\n                    }\r\n                  />\r\n                )}\r\n              /> \r\n\r\n              <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  this.runthisfunction(params.data?._id);\r\n                }}\r\n              /> \r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n     \r\n      // {\r\n      //   headerName: \"Policy Number\",\r\n      //   field: \"PlanType\",\r\n      //   // filter: true,\r\n      //   width: 180,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return <div className=\"\">{params?.data?.policynumber}</div>;\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"status\",\r\n      //   field: \"PlanType\",\r\n      //   // filter: true,\r\n      //   width: 150,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return <div className=\"\">{params?.data?.status}</div>;\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"ReEnterPolicyNumber\",\r\n      //   field: \"reEnterPolicyNumber\",\r\n      //   // filter: true,\r\n      //   width: 250,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return <div className=\"\">{params?.data?.ReEnterPolicyNumber}</div>;\r\n      //   },\r\n      // },\r\n    ],\r\n  };\r\n  componentDidMount() {\r\n    this.AssetList();\r\n  }\r\n  AssetList = () => {\r\n    axiosConfig\r\n      .get(\"/asset/nominee-list\")\r\n      .then((response) => {\r\n        const rowData = response.data?.NomineeList;\r\n        // console.log(response.data.NomineeList);\r\n        this.setState({ rowData });\r\n      })\r\n      .catch((err) => {\r\n        swal(\"Something Went Wrong\");\r\n      });\r\n    \r\n  };\r\n\r\n  runthisfunction(id) {\r\n    swal(\r\n      `Do You Want To Delete Permanently`,\r\n      \"This item will be deleted immediately\",\r\n\r\n      {\r\n        buttons: {\r\n          cancel: \"Cancel\",\r\n          catch: { text: \"Delete \", value: \"catch\" },\r\n        },\r\n      }\r\n    ).then((value) => {\r\n      switch (value) {\r\n        case \"cancel\":\r\n          break;\r\n        case \"catch\":\r\n          axiosConfig.delete(`/asset/delete-asset/${id}`).then((response) => {\r\n            this.AssetList();\r\n          });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Card className=\"overflow-hidden agGrid-card\">\r\n          <Row className=\"m-1\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n              Nominee List\r\n              </h1>\r\n            </Col>\r\n            <Col className=\"\">\r\n             \r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody className=\"py-0\">\r\n            {this.state.rowData === null ? null : (\r\n              <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                  <div className=\"mb-1\">\r\n                    <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                      <DropdownToggle tag=\"div\">\r\n                        {this.gridApi\r\n                          ? this.state.currenPageSize\r\n                          : \"\" * this.state.getPageSize -\r\n                            (this.state.getPageSize - 1)}{\" \"}\r\n                        -{\" \"}\r\n                        {this.state.rowData.length -\r\n                          this.state.currenPageSize * this.state.getPageSize >\r\n                        0\r\n                          ? this.state.currenPageSize * this.state.getPageSize\r\n                          : this.state.rowData.length}{\" \"}\r\n                        of {this.state.rowData.length}\r\n                        <ChevronDown className=\"ml-50\" size={15} />\r\n                      </DropdownToggle>\r\n                      <DropdownMenu right>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(20)}\r\n                        >\r\n                          20\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(50)}\r\n                        >\r\n                          50\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(100)}\r\n                        >\r\n                          100\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(134)}\r\n                        >\r\n                          134\r\n                        </DropdownItem>\r\n                      </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                  </div>\r\n                  <div className=\"d-flex flex-wrap  mb-1\">\r\n                    <div className=\"table-input mr-1\" >\r\n                      <Input\r\n                        className=\"cssformanageassetinput cssmartopmargin\"\r\n                        placeholder=\"search...\"\r\n                        onChange={(e) => this.updateSearchQuery(e.target.value)}\r\n                        value={this.state.value}\r\n                      />\r\n                    </div>\r\n                   \r\n                    <div>\r\n                      <Button.Ripple\r\n                      className='cssmartopmargin'\r\n                        color=\"primary\"\r\n                        onClick={() => this.gridApi.exportDataAsCsv()}\r\n                      >\r\n                        Export as CSV\r\n                      </Button.Ripple>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <ContextLayout.Consumer>\r\n                  {(context) => (\r\n                    <AgGridReact\r\n                      gridOptions={{}}\r\n                      rowSelection=\"multiple\"\r\n                      defaultColDef={defaultColDef}\r\n                      columnDefs={columnDefs}\r\n                      rowData={rowData}\r\n                      onGridReady={this.onGridReady}\r\n                      colResizeDefault={\"shift\"}\r\n                      animateRows={true}\r\n                      floatingFilter={false}\r\n                      pagination={true}\r\n                      paginationPageSize={this.state.paginationPageSize}\r\n                      pivotPanelShow=\"always\"\r\n                      enableRtl={context.state.direction === \"rtl\"}\r\n                    />\r\n                  )}\r\n                </ContextLayout.Consumer>\r\n              </div>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default NomineeList;\r\n\r\n"],"sourceRoot":""}