{"version":3,"sources":["views/apps/plan/Duelifedeclaration.js"],"names":["Duelifedeclaration","state","rowData","switchState","isCheck","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","userId","mobileNo","nextDeclarationDate","lastDeclarationDate","dateOfUserStatusConfirmationMailNominee","dateOfResponseReceivedNominee","console","log","type","id","_id","name","label","inline","checked","deadCertificateValidationStatus","onChange","event","toggleSwitch","target","AssetList","axiosConfig","get","then","response","User","setState","catch","err","swal","onGridReady","gridApi","api","gridColumnApi","columnApi","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","newState","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","this","buttons","cancel","text","value","delete","Fragment","col-sm-6","tag","length","size","right","onClick","placeholder","e","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/183.3b30545d.chunk.js","sourcesContent":["import React from \"react\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Card,\r\n  Input,\r\n  Button,\r\n  CardBody,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  FormGroup,\r\n  Label,\r\n  Form,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { ChevronDown, Edit, Eye, Trash2 } from \"react-feather\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport swal from \"sweetalert\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nclass Duelifedeclaration extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    switchState: false, // Initialize switch state to false\r\n    isCheck: false,\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n\r\n        filter: true,\r\n      },\r\n      {\r\n        headerName: \"User Phone Number\",\r\n        field: \"UserPhoneNumber\",\r\n        width: 200,\r\n\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.userId?.mobileNo}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Actual Life declaration due date\",\r\n        field: \"ActualLifedeclarationduedate\",\r\n        width: 300,\r\n\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.nextDeclarationDate}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Revised Life declaration due date\",\r\n        field: \"RevisedLifedeclarationduedate\",\r\n        width: 350,\r\n\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.lastDeclarationDate}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName:\r\n          \"Last Life declaration on due date offerted to Nominee/User\",\r\n        field: \"Lifedeclarationduedate\",\r\n        width: 350,\r\n\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.lastDeclarationDate}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Date of User Status Confirmation mail shared with nominee\",\r\n        field: \"Lifedeclarationduedate\",\r\n        width: 400,\r\n\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"\">\r\n              {params?.data?.dateOfUserStatusConfirmationMailNominee}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Date of Response Reveived from nominee\",\r\n        field: \"DateofResponse\",\r\n        width: 400,\r\n\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"\">\r\n              {params?.data?.dateOfResponseReceivedNominee}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Response Reveived from nominee\",\r\n        field: \"DateofResponse\",\r\n        width: 350,\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.lastDeclarationDate}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName:\r\n          \"Date of death certificate requesting mail shared with nominee\",\r\n        field: \"DateofResponse\",\r\n        width: 350,\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.lastDeclarationDate}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Date of death certificate received from nominee\",\r\n        field: \"DateofResponse\",\r\n        width: 400,\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.lastDeclarationDate}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Death certificate Validation Status\",\r\n        field: \"DateofResponse\",\r\n        width: 350,\r\n\r\n        cellRendererFramework: (params) => {\r\n          console.log(params.data);\r\n          return (\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id={params.data._id}\r\n              name=\"item_name\"\r\n              label=\"\"\r\n              inline\r\n              // checked={this.state.switchState}\r\n              checked={params.data.deadCertificateValidationStatus}\r\n              // onChange={(event) => this.toggleSwitch(event.target.checked)}\r\n              onChange={(event) =>\r\n                this.toggleSwitch(event.target.checked, params.data._id)\r\n              }\r\n            />\r\n            // <div className=\"\">\r\n            //   <CustomInput\r\n            //     type=\"switch\"\r\n            //     id={params.data._id}\r\n            //     title=\"Invalid\"\r\n            //     name=\"item_name\"\r\n            //     // value={this.state.item_name}\r\n            //     // onChange={this.changeHandler}\r\n            //     label=\"\"\r\n            //     // name=\"switchState\"\r\n            //     // checked={this.state.switchState} // Set the checked property based on switchState\r\n            //     // onChange={this.toggleSwitch} // Call toggleSwitch function on change\r\n            //     inline\r\n            //   />\r\n            // </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Date of Validation Status mail shared with nominee\",\r\n        field: \"DateofResponse\",\r\n        width: 400,\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.lastDeclarationDate}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Date of asset details shared with nominee\",\r\n        field: \"DateofResponse\",\r\n        width: 350,\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.lastDeclarationDate}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName:\r\n          \"Date of receiving of asset details receiving confirmation from nominee\",\r\n        field: \"DateofResponse\",\r\n        width: 350,\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.lastDeclarationDate}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Loop Status\",\r\n        field: \"DateofResponse\",\r\n        width: 350,\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.lastDeclarationDate}</div>;\r\n        },\r\n      },\r\n\r\n      // {\r\n      //   headerName: \"Actions\",\r\n      //   field: \"sortorder\",\r\n      //   width: 200,\r\n\r\n      //   // pinned: window.innerWidth > 992 ? \"right\" : false,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"actions cursor-pointer\">\r\n      //         <Route\r\n      //           render={({ history }) => (\r\n      //             <Eye\r\n      //               className=\"mr-50\"\r\n      //               size=\"25px\"\r\n      //               color=\"green\"\r\n      //               onClick={() =>\r\n      //                 history.push({\r\n      //                   pathname: `/ViewDueLife/${params?.data?._id}`,\r\n      //                 })\r\n      //               }\r\n      //             />\r\n      //           )}\r\n      //         />\r\n      //         <Route\r\n      //           render={({ history }) => (\r\n      //             <Edit\r\n      //               className=\"mr-50\"\r\n      //               size=\"25px\"\r\n      //               color=\"blue\"\r\n      //               onClick={() =>\r\n      //                 history.push({\r\n      //                   pathname: `/app/asset/EditAsset/${params?.data?._id}`,\r\n      //                   state: params.data,\r\n      //                 })\r\n      //               }\r\n      //             />\r\n      //           )}\r\n      //         />\r\n\r\n      //         <Trash2\r\n      //           className=\"mr-50\"\r\n      //           size=\"25px\"\r\n      //           color=\"red\"\r\n      //           onClick={() => {\r\n      //             this.runthisfunction(params.data?._id);\r\n      //           }}\r\n      //         />\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n    ],\r\n  };\r\n  componentDidMount() {\r\n    this.AssetList();\r\n  }\r\n  AssetList = () => {\r\n    axiosConfig\r\n      .get(\"/life-declaration/view-user-status\")\r\n      .then((response) => {\r\n        console.log(response.data.User);\r\n        const rowData = response?.data?.User;\r\n        this.setState({ rowData });\r\n      })\r\n      .catch((err) => {\r\n        swal(\"Something Went Wrong\");\r\n      });\r\n  };\r\n\r\n  runthisfunction(id) {\r\n    swal(\r\n      `Do You Want To Delete Permanently`,\r\n      \"This item will be deleted immediately\",\r\n\r\n      {\r\n        buttons: {\r\n          cancel: \"Cancel\",\r\n          catch: { text: \"Delete \", value: \"catch\" },\r\n        },\r\n      }\r\n    ).then((value) => {\r\n      switch (value) {\r\n        case \"cancel\":\r\n          break;\r\n        case \"catch\":\r\n          axiosConfig.delete(`/asset/delete-asset/${id}`).then((response) => {\r\n            this.AssetList();\r\n          });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  // toggleSwitch = (newState) => {\r\n  //   console.log(newState);\r\n  //   this.setState({\r\n  //     switchState: newState,\r\n  //   });\r\n  // };\r\n  toggleSwitch = (newState, id) => {\r\n    console.log(newState);\r\n    this.setState({\r\n      switchState: newState,\r\n    });\r\n    // Update your rowData with the new state for the corresponding row\r\n    // const updatedRowData = this.state.rowData.map((row) =>\r\n    //   row._id === id ? { ...row, switchState: newState } : row\r\n    // );\r\n    // this.setState({ rowData: updatedRowData });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Card className=\"overflow-hidden agGrid-card\">\r\n          <Row className=\"m-1\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Life Declaration List\r\n              </h1>\r\n            </Col>\r\n            <Col className=\"\"></Col>\r\n          </Row>\r\n\r\n          <CardBody className=\"py-0\">\r\n            {this.state.rowData === null ? null : (\r\n              <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                  <div className=\"mb-1\">\r\n                    <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                      <DropdownToggle tag=\"div\">\r\n                        {this.gridApi\r\n                          ? this.state.currenPageSize\r\n                          : \"\" * this.state.getPageSize -\r\n                            (this.state.getPageSize - 1)}{\" \"}\r\n                        -{\" \"}\r\n                        {this.state.rowData.length -\r\n                          this.state.currenPageSize * this.state.getPageSize >\r\n                        0\r\n                          ? this.state.currenPageSize * this.state.getPageSize\r\n                          : this.state.rowData.length}{\" \"}\r\n                        of {this.state.rowData.length}\r\n                        <ChevronDown className=\"ml-50\" size={15} />\r\n                      </DropdownToggle>\r\n                      <DropdownMenu right>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(20)}\r\n                        >\r\n                          20\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(50)}\r\n                        >\r\n                          50\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(100)}\r\n                        >\r\n                          100\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(134)}\r\n                        >\r\n                          134\r\n                        </DropdownItem>\r\n                      </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                  </div>\r\n                  <div className=\"d-flex flex-wrap  mb-1\">\r\n                    <div className=\"table-input mr-1\">\r\n                      <Input\r\n                        className=\"cssformanageassetinput cssmartopmargin\"\r\n                        placeholder=\"search...\"\r\n                        onChange={(e) => this.updateSearchQuery(e.target.value)}\r\n                        value={this.state.value}\r\n                      />\r\n                    </div>\r\n                    {/* <div style={{ marginRight: \"10px\" }}>\r\n                      <Route\r\n                        render={({ history }) => (\r\n                          <Button\r\n                            className=\" btn  float-right cssmartopmargin\"\r\n                            color=\"primary\"\r\n                            onClick={() => history.push(\"/app/AddAssets\")}\r\n                          >\r\n                            Add DueLifeDecalaration\r\n                          </Button>\r\n                        )}\r\n                      />\r\n                    </div> */}\r\n                    <div>\r\n                      <Button.Ripple\r\n                        className=\"cssmartopmargin\"\r\n                        color=\"primary\"\r\n                        onClick={() => this.gridApi.exportDataAsCsv()}\r\n                      >\r\n                        Export as CSV\r\n                      </Button.Ripple>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <ContextLayout.Consumer>\r\n                  {(context) => (\r\n                    <AgGridReact\r\n                      gridOptions={{}}\r\n                      rowSelection=\"multiple\"\r\n                      defaultColDef={defaultColDef}\r\n                      columnDefs={columnDefs}\r\n                      rowData={rowData}\r\n                      onGridReady={this.onGridReady}\r\n                      colResizeDefault={\"shift\"}\r\n                      animateRows={true}\r\n                      floatingFilter={false}\r\n                      pagination={true}\r\n                      paginationPageSize={this.state.paginationPageSize}\r\n                      pivotPanelShow=\"always\"\r\n                      enableRtl={context.state.direction === \"rtl\"}\r\n                    />\r\n                  )}\r\n                </ContextLayout.Consumer>\r\n              </div>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Duelifedeclaration;\r\n"],"sourceRoot":""}