{"version":3,"sources":["assets/img/pages/reset-password.png","views/pages/authentication/ResetPassword.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["module","exports","ResetPassword","state","password","confirm_password","handlechange","e","preventDefault","setState","isError","target","name","value","handleResetPassword","email","payload","id","props","match","params","axiosConfig","post","then","response","console","log","data","status","otp","history","push","catch","error","className","sm","xl","lg","md","src","resetImg","alt","type","placeholder","onChange","this","required","Ripple","block","color","outline","onClick","React","Component","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","string","cssModule","object","FormGroup","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","createElement","_extends","defaultProps"],"mappings":";wIAAAA,EAAOC,QAAU,IAA0B,4C,2jNCoBrCC,E,4MACJC,MAAQ,CAENC,SAAU,GACVC,iBAAkB,I,EAGpBC,aAAe,SAACC,GACdA,EAAEC,iBACF,EAAKC,SAAS,CAAEC,SAAS,IACzB,EAAKD,SAAL,eAAiBF,EAAEI,OAAOC,KAAOL,EAAEI,OAAOE,S,EAU5CC,oB,uCAAsB,WAAOP,GAAP,+EACpBA,EAAEC,iBADkB,EAE0B,EAAKL,MAF/B,EAEZY,MAAOX,EAFK,EAELA,SAAUC,EAFL,EAEKA,iBAQrBW,EAAU,CAEZZ,SAAUA,EACVC,iBAAkBA,GAEdY,EAAO,EAAKC,MAAMC,MAAMC,OAAxBH,GAENI,IACGC,KADH,gCACiCL,GAAMD,GACpCO,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAASG,OACQ,IAAzBH,EAASG,KAAKC,SAChBH,QAAQC,IAAIF,EAASG,KAAKE,KAC1B,EAAKX,MAAMY,QAAQC,KAAK,SAG3BC,OAAM,SAACC,GACNR,QAAQC,IAAIO,EAAMT,aA3BF,2C,kGA+BtB,WAAU,IAAD,OACP,OACE,kBAAC,IAAD,CAAKU,UAAU,8BACb,kBAAC,IAAD,CACEC,GAAG,IACHC,GAAG,IACHC,GAAG,KACHC,GAAG,IACHJ,UAAU,iCAEV,kBAAC,IAAD,CAAMA,UAAU,0CACd,kBAAC,IAAD,CAAKA,UAAU,OACb,kBAAC,IAAD,CACEG,GAAG,IACHH,UAAU,wDAEV,yBAAKA,UAAU,YAAYK,IAAKC,IAAUC,IAAI,cAEhD,kBAAC,IAAD,CAAKJ,GAAG,IAAIC,GAAG,KAAKJ,UAAU,OAC5B,kBAAC,IAAD,CAAMA,UAAU,6BACd,kBAAC,IAAD,CAAYA,UAAU,aACpB,kBAAC,IAAD,KACE,wBAAIA,UAAU,QAAd,oBAGJ,uBAAGA,UAAU,mBAAb,iEAIA,kBAAC,IAAD,CAAUA,UAAU,QAClB,kBAAC,IAAD,KAOE,kBAAC,IAAD,CAAWA,UAAU,oBACnB,kBAAC,IAAD,CACEQ,KAAK,WACL9B,KAAK,WACL+B,YAAY,WACZC,SAAUC,KAAKvC,aACfwC,UAAQ,IAEV,kBAAC,IAAD,kBAEF,kBAAC,IAAD,CAAWZ,UAAU,oBACnB,kBAAC,IAAD,CACEQ,KAAK,WACL9B,KAAK,mBACL+B,YAAY,mBACZC,SAAUC,KAAKvC,aACfwC,UAAQ,IAEV,kBAAC,IAAD,0BAEF,yBAAKZ,UAAU,oEACb,kBAAC,IAAOa,OAAR,CACEC,OAAK,EACLd,UAAU,YACVe,MAAM,UACNC,SAAO,EACPC,QAAS,SAAC5C,GACRA,EAAEC,iBACF,EAAKU,MAAMY,QAAQC,KAAK,kBAP5B,oBAYA,kBAAC,IAAOgB,OAAR,CACEC,OAAK,EACLC,MAAM,UACNP,KAAK,SACLR,UAAU,yBACViB,QAASN,KAAK/B,qBALhB,sB,GAzHIsC,IAAMC,WA8InBnD,a,iCClKf,yEAEIoD,EAAY,CAAC,YAAa,YAAa,MAAO,WAAY,QAAS,SAAU,OAK7EC,EAAY,CACdC,SAAUC,IAAUC,KACpBC,IAAKF,IAAUG,KACfC,MAAOJ,IAAUG,KACjBE,OAAQL,IAAUG,KAClBG,SAAUN,IAAUG,KACpBI,IAAKC,cACL/B,UAAWuB,IAAUS,OACrBC,UAAWV,IAAUW,QAMnBC,EAAY,SAAmBnD,GACjC,IAAIgB,EAAYhB,EAAMgB,UAClBiC,EAAYjD,EAAMiD,UAClBR,EAAMzC,EAAMyC,IACZI,EAAW7C,EAAM6C,SACjBF,EAAQ3C,EAAM2C,MACdC,EAAS5C,EAAM4C,OACfQ,EAAMpD,EAAM8C,IACZO,EAAaC,YAA8BtD,EAAOoC,GAElDmB,EAAUC,0BAAgBC,IAAWzC,IAAWyB,GAAM,MAAeE,EAAQ,aAAe,gBAAcA,IAASC,IAAS,uBAA6BD,IAASE,IAAW,YAAqBI,GAMtM,MAJY,aAARG,IACFC,EAAWR,SAAWA,GAGJX,IAAMwB,cAAcN,EAAKO,YAAS,GAAIN,EAAY,CACpErC,UAAWuC,MAIfJ,EAAUd,UAAYA,EACtBc,EAAUS,aA1BS,CACjBd,IAAK,OA0BQK,O","file":"static/js/110.6ee79b32.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reset-password.01a139f9.png\";","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../history\";\r\nimport resetImg from \"../../../assets/img/pages/reset-password.png\";\r\nimport \"../../../assets/scss/pages/authentication.scss\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { tokenize } from \"prismjs\";\r\n\r\nclass ResetPassword extends React.Component {\r\n  state = {\r\n    // email:\"\",\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n  };\r\n\r\n  handlechange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ isError: false });\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //  validatePhone = (text) => {\r\n  //  if (/^[6789][0-9]{9}$/.test(text)) {\r\n  //     return true;\r\n  //   }\r\n  //   return false;\r\n  // };\r\n\r\n  handleResetPassword = async (e) => {\r\n    e.preventDefault();\r\n    const { email, password, confirm_password } = this.state;\r\n\r\n    //var isValid = await this.validatePhone( email)\r\n    // if(isValid === false){\r\n    //   this.setState({ isError: true });\r\n    //    return true;\r\n    // }\r\n\r\n    var payload = {\r\n      // email : email,\r\n      password: password,\r\n      confirm_password: confirm_password,\r\n    };\r\n    let { id } = this.props.match.params;\r\n\r\n    axiosConfig\r\n      .post(`/user/changepassadmin/${id}`, payload)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        if (response.data.status === true) {\r\n          console.log(response.data.otp);\r\n          this.props.history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Row className=\"m-0 justify-content-center\">\r\n        <Col\r\n          sm=\"8\"\r\n          xl=\"7\"\r\n          lg=\"10\"\r\n          md=\"8\"\r\n          className=\"d-flex justify-content-center\"\r\n        >\r\n          <Card className=\"bg-authentication rounded-0 mb-0 w-100\">\r\n            <Row className=\"m-0\">\r\n              <Col\r\n                lg=\"6\"\r\n                className=\"d-lg-block d-none text-center align-self-center px-5\"\r\n              >\r\n                <img className=\"px-5 mx-2\" src={resetImg} alt=\"resetImg\" />\r\n              </Col>\r\n              <Col lg=\"6\" md=\"12\" className=\"p-0\">\r\n                <Card className=\"rounded-0 mb-0 px-2 py-50\">\r\n                  <CardHeader className=\"pb-1 pt-1\">\r\n                    <CardTitle>\r\n                      <h4 className=\"mb-0\">Reset Password</h4>\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <p className=\"px-2 auth-title\">\r\n                    Please enter your email address and new password to\r\n                    continue.\r\n                  </p>\r\n                  <CardBody className=\"pt-1\">\r\n                    <Form>\r\n                      {/* <FormGroup className=\"form-label-group\">\r\n                        <Input type=\"email\" name=\"email\" placeholder=\"Email\"\r\n                        onChange={this.handlechange}\r\n                         required />\r\n                        <Label>Email</Label>\r\n                      </FormGroup> */}\r\n                      <FormGroup className=\"form-label-group\">\r\n                        <Input\r\n                          type=\"password\"\r\n                          name=\"password\"\r\n                          placeholder=\"Password\"\r\n                          onChange={this.handlechange}\r\n                          required\r\n                        />\r\n                        <Label>Password</Label>\r\n                      </FormGroup>\r\n                      <FormGroup className=\"form-label-group\">\r\n                        <Input\r\n                          type=\"password\"\r\n                          name=\"confirm_password\"\r\n                          placeholder=\"Confirm Password\"\r\n                          onChange={this.handlechange}\r\n                          required\r\n                        />\r\n                        <Label>Confirm Password</Label>\r\n                      </FormGroup>\r\n                      <div className=\"d-flex justify-content-between flex-wrap flex-sm-row flex-column\">\r\n                        <Button.Ripple\r\n                          block\r\n                          className=\"btn-block\"\r\n                          color=\"primary\"\r\n                          outline\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            this.props.history.push(\"/pages/login\");\r\n                          }}\r\n                        >\r\n                          Go Back to Login\r\n                        </Button.Ripple>\r\n                        <Button.Ripple\r\n                          block\r\n                          color=\"primary\"\r\n                          type=\"submit\"\r\n                          className=\"btn-block mt-1 mt-sm-0\"\r\n                          onClick={this.handleResetPassword}\r\n                        >\r\n                          Reset\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </Form>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default ResetPassword;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}