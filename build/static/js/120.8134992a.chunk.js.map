{"version":3,"sources":["views/apps/plans/EditPlan.js","../node_modules/reactstrap/es/FormGroup.js","../node_modules/multiselect-react-dropdown/dist/index.js","../../node_modules/style-inject/dist/style-inject.es.js","../../src/multiselect/multiselect.component.tsx"],"names":["planTypeList","EditPlan","props","changeHandler1","e","setState","status","target","value","PlanBenefitsList","axiosConfig","get","then","response","planBenefitsList","data","Benefite","AllPolicyList","policyList","catch","er","console","log","ViewOne","id","Plan","planMinDays","preexCoverage","agesupportMin","agesupportMax","planMaximum","preexMaxCoverage","CoverageCntry","planDeductible","policy_ID_fk","planType","planBenefitsCode_fk","map","el","name","planView","policyNum","policyName","changeHandler","handlePlanBenefits","submitHandler","preventDefault","payload","state","preexDeductible","post","swal","history","push","error","policy_combination_active","selectedValue","list","onSelect","bind","onRemove","this","match","params","selectedList","selectedItem","removedItem","sm","listTag","href","tag","active","className","col-sm-6","render","onClick","onSubmit","lg","md","for","type","onChange","defaultValue","disabled","options","selectedValues","displayValue","required","placeholder","val","_id","planBenefitsCode","style","marginRight","Ripple","color","Component","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","tagPropType","string","cssModule","object","FormGroup","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","module","exports","require","css","ref","insertAt","document","head","getElementsByTagName","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","closeIconTypes","circle","circle2","close","cancel","OutsideAlerter","clickEvent","wrapperRef","useRef","outsideClick","useEffect","handleClickOutside","event","current","contains","addEventListener","removeEventListener","Multiselect","c","_this","inputValue","filteredOptions","unfilteredOptions","Object","assign","preSelectedValues","toggleOptionsList","highlightOption","avoidHighlightFirstOption","showCheckbox","keepSearchTerm","groupedObject","closeIconType","closeIcon","optionTimeout","searchWrapper","createRef","searchBox","onKeyPress","onFocus","onBlur","renderMultiselectContainer","renderSelectedList","onRemoveSelectedItem","toggelOptionList","onArrowKeyNavigation","onSelectItem","filterOptionsByInput","removeSelectedValuesFromOptions","isSelectedValue","fadeOutSelection","isDisablePreSelectedValues","renderGroupByOptions","renderNormalOption","listenerCallback","resetSelectedValues","getSelectedItems","getSelectedItemsCount","hideOnClickOutside","onCloseOptionList","isVisible","initialSetValue","groupBy","singleSelect","groupByOptions","_proto","Promise","resolve","_this2","length","componentDidMount","componentDidUpdate","prevProps","prevSelectedvalues","JSON","stringify","focus","componentWillUnmount","clearTimeout","skipCheck","isObject","l","optionList","filter","findIndex","v","item","indexOf","reduce","r","a","key","create","onSearch","onKeyPressFn","_this3","matchValues","i","search","caseSensitiveSearch","toLowerCase","toString","keyCode","disablePreSelectedValues","previousState","index","splice","_this4","closeOnSelect","selectionLimit","onSingleSelect","_this5","renderOptionList","emptyRecordMsg","loadingMessage","o","loading","optionContainer","notFound","keys","Fragment","obj","groupHeading","option","isSelected","_this6","readOnly","checked","optionValueDecorator","_this7","customCloseIcon","_this8","chips","selectedValueDecorator","src","setTimeout","elem","offsetWidth","offsetHeight","getClientRects","element","getElementsByClassName","_this9","hidePlaceholder","disable","showArrow","customArrow","multiselectContainer","hideSelectedList","onKeyDown","inputField","autoComplete","onMouseDown"],"mappings":"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","file":"static/js/120.8134992a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  FormGroup,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { history } from \"../../../history\";\r\nimport swal from \"sweetalert\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nlet planTypeList = \"\";\r\nexport default class EditPlan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      planMinDays: \"\",\r\n      planType: [],\r\n      agesupportMin: null,\r\n      agesupportMax: null,\r\n      planMaximum: \"\",\r\n      planDeductible: \"\",\r\n      preexCoverage: \"\",\r\n      preexDeductible: \"\",\r\n      preexMaxCoverage: null,\r\n      CoverageCntry: \"\",\r\n      policy_combination_active: \"\",\r\n      selectedValue: \"\",\r\n      list: [{ name: \"BASIC\" }, { name: \"PRE-EX\" }],\r\n      planBenefitsCode_fk: \"\",\r\n      policy_ID_fk: \"\",\r\n      planBenefitsList: [],\r\n      policyList: [],\r\n      planView: \"\",\r\n    };\r\n    this.onSelect = this.onSelect.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  }\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    this.PlanBenefitsList();\r\n    this.AllPolicyList();\r\n    this.ViewOne(id);\r\n  }\r\n\r\n  PlanBenefitsList = () => {\r\n    axiosConfig.get(\"/benefite/view-benefite\").then((response) => {\r\n      this.setState({ planBenefitsList: response.data.Benefite });\r\n    });\r\n  };\r\n  AllPolicyList = () => {\r\n    axiosConfig\r\n      .get(\"/admin/get_policies\")\r\n      .then((response) => {\r\n        this.setState({ policyList: response.data.data });\r\n      })\r\n      .catch((er) => {\r\n        console.log(er);\r\n      });\r\n  };\r\n  ViewOne = (id) => {\r\n    axiosConfig\r\n      .get(`/plan/view-plan-by-id/${id}`)\r\n      .then((response) => {\r\n        console.log(response.data.Plan);\r\n        const {\r\n          planMinDays,\r\n          preexCoverage,\r\n          agesupportMin,\r\n          agesupportMax,\r\n          planMaximum,\r\n          preexMaxCoverage,\r\n          CoverageCntry,\r\n          planDeductible,\r\n          policy_ID_fk,\r\n          planType,\r\n          planBenefitsCode_fk,\r\n        } = response.data.Plan;\r\n        planTypeList = planType.map((el) => el.name);\r\n        this.setState({\r\n          planView: response.data.Plan,\r\n          planMinDays: planMinDays,\r\n          planType: planTypeList,\r\n          agesupportMin: agesupportMin,\r\n          agesupportMax: agesupportMax,\r\n          planMaximum: planMaximum,\r\n          planDeductible: planDeductible,\r\n          preexCoverage: preexCoverage,\r\n          // preexDeductible: \"\",\r\n          preexMaxCoverage: preexMaxCoverage,\r\n          CoverageCntry: CoverageCntry,\r\n          // policy_combination_active: \"\",\r\n          // selectedValue: \"\",\r\n          // list: [{ name: \"BASIC\" }, { name: \"PRE-EX\" }],\r\n          planBenefitsCode_fk: planBenefitsCode_fk?.policyNum,\r\n          policy_ID_fk: policy_ID_fk?.policyName,\r\n          // planBenefitsList: [],\r\n          // policyList: [],\r\n          // planView:\"\",\r\n        });\r\n      })\r\n      .catch((er) => {\r\n        console.log(er);\r\n      });\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  onSelect(selectedList, selectedItem) {\r\n    console.log(selectedList);\r\n    if (selectedList) {\r\n      this.setState({ planType: selectedList });\r\n    } else {\r\n      this.setState({ planType: planTypeList });\r\n    }\r\n  }\r\n  handlePlanBenefits = (e) => {\r\n    const { name, value } = e.target;\r\n    console.log(value);\r\n    this.setState({ [name]: value });\r\n  };\r\n  onRemove(selectedList, removedItem) {\r\n    console.log(selectedList);\r\n    this.setState({ planType: selectedList });\r\n  }\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const payload = {\r\n      planMinDays: this.state.planMinDays,\r\n      planType: this.state.planType,\r\n      agesupportMin: this.state.agesupportMin,\r\n      agesupportMax: this.state.agesupportMax,\r\n      planMaximum: this.state.planMaximum,\r\n      planDeductible: this.state.planDeductible,\r\n      preexCoverage: this.state.preexCoverage,\r\n      preexMaxCoverage: this.state.preexMaxCoverage,\r\n      CoverageCntry: this.state.CoverageCntry,\r\n      planBenefitsCode_fk: this.state.planBenefitsCode_fk,\r\n      preexDeductible: this.state.preexDeductible,\r\n      // policy_combination_active: this.state.preexCoverage,\r\n      policy_ID_fk: this.state.policy_ID_fk,\r\n    };\r\n    axiosConfig\r\n      .post(\"/plan/save-plan\", payload)\r\n      .then((response) => {\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        this.props.history.push(\"/app/plans/PlanList\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <div>\r\n              <Breadcrumb listTag=\"div\">\r\n                <BreadcrumbItem href=\"/analyticsDashboard\" tag=\"a\">\r\n                  Home\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem href=\"\" tag=\"a\">\r\n                  Plan List\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem active>EditPlan</BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Edit Plan\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() => history.push(\"/app/plans/PlanList\")}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"\">\r\n                  <Label for=\"data-category\">PlanMinDays</Label>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"select\"\r\n                      id=\"data-category\"\r\n                      name=\"planMinDays\"\r\n                      value={this.state.planMinDays}\r\n                      onChange={this.handlePlanBenefits}\r\n                      defaultValue=\"\"\r\n                    >\r\n                      <option disabled value=\"\">\r\n                        Select PlanMinDays\r\n                      </option>\r\n                      <option value=\"5\">5</option>\r\n                      <option value=\"15\">15</option>\r\n                      <option value=\"30\">30</option>\r\n                      <option value=\"60\">60</option>\r\n                      <option value=\"90\">90</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col className=\"\" lg=\"6\" md=\"6\" sm=\"12\">\r\n                  <Label for=\"data-category\">Plan Type</Label>\r\n                  <Multiselect\r\n                    options={this.state.list}\r\n                    selectedValues={this.state.selectedValue}\r\n                    onSelect={this.onSelect}\r\n                    onRemove={this.onRemove}\r\n                    displayValue=\"name\"\r\n                    defaultValue={this.state.planType}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>AgesupportMin</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"agesupportMin\"\r\n                    placeholder=\"AgesupportMin\"\r\n                    value={this.state.agesupportMin}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>AgesupportMax</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"agesupportMax\"\r\n                    placeholder=\"AgesupportMax\"\r\n                    value={this.state.agesupportMax}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>planMaximum</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"planMaximum\"\r\n                    placeholder=\"planMaximum\"\r\n                    value={this.state.planMaximum}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"\">\r\n                  <Label for=\"data-category\">PlanDeductible</Label>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"select\"\r\n                      id=\"data-category\"\r\n                      name=\"planDeductible\"\r\n                      value={this.state.planDeductible}\r\n                      onChange={this.handlePlanBenefits}\r\n                      defaultValue=\"\"\r\n                    >\r\n                      <option disabled value=\"\">\r\n                        Select planDeductible\r\n                      </option>\r\n                      <option value=\"0\">0</option>\r\n                      <option value=\"50\">50</option>\r\n                      <option value=\"75\">75</option>\r\n                      <option value=\"100\">100</option>\r\n                      <option value=\"250\">250</option>\r\n                      <option value=\"500\">500</option>\r\n                      <option value=\"1000\">1000</option>\r\n                      <option value=\"2500\">2500</option>\r\n                      <option value=\"5000\">5000</option>\r\n                      <option value=\"10000\">10000</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"\">\r\n                  <Label for=\"data-category\">PreexCoverage</Label>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"select\"\r\n                      id=\"data-category\"\r\n                      name=\"preexCoverage\"\r\n                      value={this.state.preexCoverage}\r\n                      onChange={this.handlePlanBenefits}\r\n                      defaultValue=\"\"\r\n                    >\r\n                      <option value=\"\" disabled>\r\n                        Select PreexCoverage\r\n                      </option>\r\n                      <option value=\"NO\">NO</option>\r\n                      <option value=\"YES\">YES</option>\r\n                      <option value=\"ACUTE\">ACUTE</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"\">\r\n                  <Label for=\"data-category\">Policy</Label>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"select\"\r\n                      id=\"data-category\"\r\n                      name=\"policy_ID_fk\"\r\n                      value={this.state.policy_ID_fk}\r\n                      onChange={this.handlePlanBenefits}\r\n                      defaultValue={this.state.policy_ID_fk}\r\n                    >\r\n                      {this.state.policyList?.map((val) => {\r\n                        return (\r\n                          <option value={val?._id}>{val?.policyName}</option>\r\n                        );\r\n                      })}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"\">\r\n                  <Label for=\"data-category\">PlanBenefits </Label>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"select\"\r\n                      id=\"data-category\"\r\n                      name=\"planBenefitsCode_fk\"\r\n                      value={this.state.planBenefitsCode_fk}\r\n                      onChange={this.handlePlanBenefits}\r\n                      defaultValue={this.state.planBenefitsCode_fk}\r\n                    >\r\n                      {this.state.planBenefitsList?.map((val) => {\r\n                        return (\r\n                          <option value={val?._id}>\r\n                            {val?.planBenefitsCode}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"\">\r\n                  <Label for=\"data-category\">PreexDeductible</Label>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"select\"\r\n                      id=\"data-category\"\r\n                      name=\"preexDeductible\"\r\n                      value={this.state.preexDeductible}\r\n                      onChange={this.handlePlanBenefits}\r\n                      defaultValue={this.state.preexDeductible}\r\n                    >\r\n                      <option value=\"0\">0</option>\r\n                      <option value=\"75\">75</option>\r\n                      <option value=\"100\">100</option>\r\n                      <option value=\"250\">250</option>\r\n                      <option value=\"500\">500</option>\r\n                      <option value=\"750\">750</option>\r\n                      <option value=\"1000\">1000</option>\r\n                      <option value=\"1500\">1500</option>\r\n                      <option value=\"2000\">2000</option>\r\n                      <option value=\"2500\">2500</option>\r\n                      <option value=\"5000\">5000</option>\r\n                      <option value=\"10000\">10000</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>PreexMaxCoverage</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"preexMaxCoverage\"\r\n                    placeholder=\"preexMaxCoverage\"\r\n                    value={this.state.preexMaxCoverage}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>CoverageCntry</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"CoverageCntry\"\r\n                    placeholder=\"CoverageCntry\"\r\n                    value={this.state.CoverageCntry}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label className=\"mb-1\">Status</Label>\r\n                  <div\r\n                    className=\"form-label-group\"\r\n                    onChange={(e) => this.changeHandler1(e)}\r\n                  >\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"true\"\r\n                    />\r\n                    <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"false\"\r\n                    />\r\n                    <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                  >\r\n                    EditPlan\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./multiselect-react-dropdown.cjs.production.min.js')\n} else {\n  module.exports = require('./multiselect-react-dropdown.cjs.development.js')\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","// @ts-nocheck\nimport React, { useRef, useEffect } from \"react\";\nimport \"./styles.css\";\nimport CloseCircle from '../assets/svg/closeCircle.svg';\nimport CloseCircleDark from '../assets/svg/closeCircleDark.svg';\nimport CloseLine from '../assets/svg/closeLine.svg';\nimport CloseSquare from '../assets/svg/closeSquare.svg';\nimport DownArrow from '../assets/svg/downArrow.svg';\nimport {IMultiselectProps} from \"./interface\";\n\nconst closeIconTypes = {\n  circle: CloseCircleDark,\n  circle2: CloseCircle,\n  close: CloseSquare,\n  cancel: CloseLine\n};\n\nfunction useOutsideAlerter(ref, clickEvent) {\n  useEffect(() => {\n      function handleClickOutside(event) {\n          if (ref.current && !ref.current.contains(event.target)) {\n            clickEvent();\n          }\n      }\n\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n  }, [ref]);\n}\n\n/**\n* Component that alerts if you click outside of it\n*/\nfunction OutsideAlerter(props) {\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef, props.outsideClick);\n  return <div ref={wrapperRef}>{props.children}</div>;\n}\n\nexport class Multiselect extends React.Component<IMultiselectProps, any> {\n  static defaultProps: IMultiselectProps;\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n      options: props.options,\n      filteredOptions: props.options,\n      unfilteredOptions: props.options,\n      selectedValues: Object.assign([], props.selectedValues),\n      preSelectedValues: Object.assign([], props.selectedValues),\n      toggleOptionsList: false,\n      highlightOption: props.avoidHighlightFirstOption ? -1 : 0,\n\t\t\tshowCheckbox: props.showCheckbox,\n      keepSearchTerm: props.keepSearchTerm,\n      groupedObject: [],\n      closeIconType: closeIconTypes[props.closeIcon] || closeIconTypes['circle']\n    };\n    // @ts-ignore\n    this.optionTimeout = null;\n    // @ts-ignore\n\t\tthis.searchWrapper = React.createRef();\n    // @ts-ignore\n\t\tthis.searchBox = React.createRef();\n    this.onChange = this.onChange.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.renderMultiselectContainer = this.renderMultiselectContainer.bind(this);\n    this.renderSelectedList = this.renderSelectedList.bind(this);\n    this.onRemoveSelectedItem = this.onRemoveSelectedItem.bind(this);\n    this.toggelOptionList = this.toggelOptionList.bind(this);\n    this.onArrowKeyNavigation = this.onArrowKeyNavigation.bind(this);\n    this.onSelectItem = this.onSelectItem.bind(this);\n    this.filterOptionsByInput = this.filterOptionsByInput.bind(this);\n    this.removeSelectedValuesFromOptions = this.removeSelectedValuesFromOptions.bind(this);\n    this.isSelectedValue = this.isSelectedValue.bind(this);\n    this.fadeOutSelection = this.fadeOutSelection.bind(this);\n    this.isDisablePreSelectedValues = this.isDisablePreSelectedValues.bind(this);\n    this.renderGroupByOptions = this.renderGroupByOptions.bind(this);\n    this.renderNormalOption = this.renderNormalOption.bind(this);\n    this.listenerCallback = this.listenerCallback.bind(this);\n    this.resetSelectedValues = this.resetSelectedValues.bind(this);\n    this.getSelectedItems = this.getSelectedItems.bind(this);\n    this.getSelectedItemsCount = this.getSelectedItemsCount.bind(this);\n    this.hideOnClickOutside = this.hideOnClickOutside.bind(this);\n    this.onCloseOptionList = this.onCloseOptionList.bind(this);\n    this.isVisible = this.isVisible.bind(this);\n  }\n\n  initialSetValue() {\n    const { showCheckbox, groupBy, singleSelect } = this.props;\n\t\tconst { options } = this.state;\n    if (!showCheckbox && !singleSelect) {\n      this.removeSelectedValuesFromOptions(false);\n\t\t}\n    // if (singleSelect) {\n    //   this.hideOnClickOutside();\n    // }\n\t\tif (groupBy) {\n\t\t\tthis.groupByOptions(options);\n\t\t}\n  }\n\n  resetSelectedValues() {\n    const { unfilteredOptions } = this.state;\n    return new Promise((resolve) => {\n      this.setState({\n        selectedValues: [],\n        preSelectedValues: [],\n        options: unfilteredOptions,\n        filteredOptions: unfilteredOptions\n      }, () => {\n        // @ts-ignore\n        resolve();\n        this.initialSetValue();\n      });\n    });\n  }\n\n  getSelectedItems() {\n    return this.state.selectedValues;\n  }\n\n  getSelectedItemsCount() {\n    return this.state.selectedValues.length;\n  }\n\n  componentDidMount() {\n\t\tthis.initialSetValue();\n    // @ts-ignore\n    this.searchWrapper.current.addEventListener(\"click\", this.listenerCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedValues } = this.props;\n    const { options: prevOptions, selectedValues: prevSelectedvalues } = prevProps;\n    if (JSON.stringify(prevOptions) !== JSON.stringify(options)) {\n      this.setState({ options, filteredOptions: options, unfilteredOptions: options }, this.initialSetValue);\n    }\n    if (JSON.stringify(prevSelectedvalues) !== JSON.stringify(selectedValues)) {\n      this.setState({ selectedValues: Object.assign([], selectedValues), preSelectedValues: Object.assign([], selectedValues) }, this.initialSetValue);\n    }\n  }\n\n  listenerCallback() {\n    // @ts-ignore\n    this.searchBox.current.focus();\n  }\n\n  componentWillUnmount() {\n    // @ts-ignore\n    if (this.optionTimeout) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    }\n    // @ts-ignore\n    this.searchWrapper.current.removeEventListener('click', this.listenerCallback);\n  }\n\n  // Skipcheck flag - value will be true when the func called from on deselect anything.\n  removeSelectedValuesFromOptions(skipCheck) {\n    const { isObject, displayValue, groupBy } = this.props;\n    const { selectedValues = [], unfilteredOptions, options } = this.state;\n    if (!skipCheck && groupBy) {\n      this.groupByOptions(options);\n    }\n    if (!selectedValues.length && !skipCheck) {\n      return;\n    }\n    if (isObject) {\n      let optionList = unfilteredOptions.filter(item => {\n        return selectedValues.findIndex(\n          v => v[displayValue] === item[displayValue]\n        ) === -1\n          ? true\n          : false;\n      });\n      if (groupBy) {\n        this.groupByOptions(optionList);\n      }\n      this.setState(\n        { options: optionList, filteredOptions: optionList },\n        this.filterOptionsByInput\n      );\n      return;\n    }\n    let optionList = unfilteredOptions.filter(\n      item => selectedValues.indexOf(item) === -1\n    );\n\n    this.setState(\n      { options: optionList, filteredOptions: optionList },\n      this.filterOptionsByInput\n    );\n  }\n\n  groupByOptions(options) {\n    const { groupBy } = this.props;\n    const groupedObject = options.reduce(function(r, a) {\n      const key = a[groupBy] || \"Others\";\n      r[key] = r[key] || [];\n      r[key].push(a);\n      return r;\n    }, Object.create({}));\n\n    this.setState({ groupedObject });\n  }\n\n  onChange(event) {\n    const { onSearch } = this.props;\n    this.setState(\n      { inputValue: event.target.value },\n      this.filterOptionsByInput\n    );\n    if (onSearch) {\n      onSearch(event.target.value);\n    }\n  }\n\n  onKeyPress(event) {\n    const { onKeyPressFn } = this.props;\n    if (onKeyPressFn) {\n        onKeyPressFn(event, event.target.value);\n    }\n  }\n\n  filterOptionsByInput() {\n    let { options, filteredOptions, inputValue } = this.state;\n    const { isObject, displayValue } = this.props;\n    if (isObject) {\n      options = filteredOptions.filter(i => this.matchValues(i[displayValue], inputValue))\n    } else {\n      options = filteredOptions.filter(i => this.matchValues(i, inputValue));\n    }\n    this.groupByOptions(options);\n    this.setState({ options });\n  }\n\n  matchValues(value, search) {\n    if (this.props.caseSensitiveSearch) {\n      return value.indexOf(search) > -1;\n    }\n    if (value.toLowerCase) {\n      return value.toLowerCase().indexOf(search.toLowerCase()) > -1;\n    }\n    return value.toString().indexOf(search) > -1;\n  }\n\n  onArrowKeyNavigation(e) {\n    const {\n      options,\n      highlightOption,\n      toggleOptionsList,\n      inputValue,\n      selectedValues\n    } = this.state;\n    const { disablePreSelectedValues } = this.props;\n    if (e.keyCode === 8 && !inputValue && !disablePreSelectedValues && selectedValues.length) {\n      this.onRemoveSelectedItem(selectedValues.length - 1);\n    }\n    if (!options.length) {\n      return;\n    }\n    if (e.keyCode === 38) {\n      if (highlightOption > 0) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption - 1\n        }));\n      } else {\n        this.setState({ highlightOption: options.length - 1 });\n      }\n    } else if (e.keyCode === 40) {\n      if (highlightOption < options.length - 1) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption + 1\n        }));\n      } else {\n        this.setState({ highlightOption: 0 });\n      }\n    } else if (e.key === \"Enter\" && options.length && toggleOptionsList) {\n      if (highlightOption === -1) {\n        return;\n      }\n      this.onSelectItem(options[highlightOption]);\n    }\n    // TODO: Instead of scrollIntoView need to find better soln for scroll the dropwdown container.\n    // setTimeout(() => {\n    //   const element = document.querySelector(\"ul.optionContainer .highlight\");\n    //   if (element) {\n    //     element.scrollIntoView();\n    //   }\n    // });\n  }\n\n  onRemoveSelectedItem(item) {\n\t\tlet { selectedValues, index = 0 } = this.state;\n\t\tconst { onRemove, showCheckbox, displayValue, isObject } = this.props;\n    if (isObject) {\n      index = selectedValues.findIndex(\n        i => i[displayValue] === item[displayValue]\n      );\n    } else {\n      index = selectedValues.indexOf(item);\n    }\n\t\tselectedValues.splice(index, 1);\n\t\tonRemove(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSelectItem(item) {\n    const { selectedValues } = this.state;\n    const { selectionLimit, onSelect, singleSelect, showCheckbox } = this.props;\n    if (!this.state.keepSearchTerm){\n      this.setState({\n        inputValue: ''\n      });\n    }\n    if (singleSelect) {\n      this.onSingleSelect(item);\n      onSelect([item], item);\n      return;\n    }\n    if (this.isSelectedValue(item)) {\n      this.onRemoveSelectedItem(item);\n      return;\n    }\n    if (selectionLimit == selectedValues.length) {\n      return;\n    }\n\t\tselectedValues.push(item);\n\t\tonSelect(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      } else {\n        this.filterOptionsByInput();\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSingleSelect(item) {\n    this.setState({ selectedValues: [item], toggleOptionsList: false });\n  }\n\n  isSelectedValue(item) {\n    const { isObject, displayValue } = this.props;\n    const { selectedValues } = this.state;\n    if (isObject) {\n      return (\n        selectedValues.filter(i => i[displayValue] === item[displayValue])\n          .length > 0\n      );\n    }\n    return selectedValues.filter(i => i === item).length > 0;\n  }\n\n  renderOptionList() {\n    const { groupBy, style, emptyRecordMsg, loading, loadingMessage = 'loading...' } = this.props;\n    const { options } = this.state;\n    if (loading) {\n      return (\n        <ul className={`optionContainer`} style={style['optionContainer']}>\n          {typeof loadingMessage === 'string' && <span style={style['loadingMessage']} className={`notFound`}>{loadingMessage}</span>}\n          {typeof loadingMessage !== 'string' && loadingMessage}\n        </ul>\n      );\n    }\n    return (\n      <ul className={`optionContainer`} style={style['optionContainer']}>\n        {options.length === 0 && <span style={style['notFound']} className={`notFound`}>{emptyRecordMsg}</span>}\n        {!groupBy ? this.renderNormalOption() : this.renderGroupByOptions()}\n      </ul>\n    );\n  }\n\n  renderGroupByOptions() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { groupedObject } = this.state;\n    return Object.keys(groupedObject).map(obj => {\n\t\t\treturn (\n\t\t\t\t<React.Fragment key={obj}>\n\t\t\t\t\t<li className=\"groupHeading\" style={style['groupHeading']}>{obj}</li>\n\t\t\t\t\t{groupedObject[obj].map((option, i) => {\n            const isSelected = this.isSelectedValue(option);\n            return (\n              <li\n                key={`option${i}`}\n                style={style['option']}\n                className={`groupChildEle option ${isSelected ? 'selected' : ''} ${this.fadeOutSelection(option) ? 'disableSelection' : ''} ${this.isDisablePreSelectedValues(option) ? 'disableSelection' : ''}`}\n                onClick={() => this.onSelectItem(option)}\n              >\n                {showCheckbox && !singleSelect && (\n                    <input\n                      type=\"checkbox\"\n                      className={'checkbox'}\n                      readOnly\n                      checked={isSelected}\n                    />\n                )}\n                {this.props.optionValueDecorator(isObject ? option[displayValue] : (option || '').toString(), option)}\n              </li>\n            )}\n          )}\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t});\n  }\n\n  renderNormalOption() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { highlightOption } = this.state;\n    return this.state.options.map((option, i) => {\n        const isSelected = this.isSelectedValue(option);\n        return (\n          <li\n            key={`option${i}`}\n            style={style['option']}\n            className={`option ${isSelected ? 'selected' : ''} ${highlightOption === i ? `highlightOption highlight` : \"\"} ${this.fadeOutSelection(option) ? 'disableSelection' : ''} ${this.isDisablePreSelectedValues(option) ? 'disableSelection' : ''}`}\n            onClick={() => this.onSelectItem(option)}\n          >\n            {showCheckbox && !singleSelect && (\n              <input\n                type=\"checkbox\"\n                readOnly\n                className={`checkbox`}\n                checked={isSelected}\n              />\n            )}\n            {this.props.optionValueDecorator(isObject ? option[displayValue] : (option || '').toString(), option)}\n          </li>\n      )\n    });\n  }\n\n  renderSelectedList() {\n    const { isObject = false, displayValue, style, singleSelect, customCloseIcon } = this.props;\n    const { selectedValues, closeIconType } = this.state;\n    return selectedValues.map((value, index) => (\n      <span className={`chip  ${singleSelect && 'singleChip'} ${this.isDisablePreSelectedValues(value) && 'disableSelection'}`} key={index} style={style['chips']}>\n        {this.props.selectedValueDecorator(!isObject ? (value || '').toString() : value[displayValue], value)}\n        {!this.isDisablePreSelectedValues(value) && (!customCloseIcon ? <img\n          className=\"icon_cancel closeIcon\"\n          src={closeIconType}\n          onClick={() => this.onRemoveSelectedItem(value)}\n        /> : <i className=\"custom-close\" onClick={() => this.onRemoveSelectedItem(value)}>{customCloseIcon}</i>)}\n      </span>\n    ));\n  }\n\n  isDisablePreSelectedValues(value) {\n    const { isObject, disablePreSelectedValues, displayValue } = this.props;\n    const { preSelectedValues } = this.state;\n    if (!disablePreSelectedValues || !preSelectedValues.length) {\n      return false;\n    }\n    if (isObject) {\n      return (\n        preSelectedValues.filter(i => i[displayValue] === value[displayValue])\n          .length > 0\n      );\n    }\n    return preSelectedValues.filter(i => i === value).length > 0;\n  }\n\n  fadeOutSelection(item) {\n    const { selectionLimit, showCheckbox, singleSelect } = this.props;\n    if (singleSelect) {\n      return;\n    }\n    const { selectedValues } = this.state;\n    if (selectionLimit == -1) {\n      return false;\n    }\n    if (selectionLimit != selectedValues.length) {\n      return false;\n    }\n    if (selectionLimit == selectedValues.length) {\n      if (!showCheckbox) {\n        return true;\n      } else {\n        if (this.isSelectedValue(item)) {\n          return false;\n        }\n        return true;\n      }\n    }\n  }\n\n  toggelOptionList() {\n    this.setState({\n      toggleOptionsList: !this.state.toggleOptionsList,\n      highlightOption: this.props.avoidHighlightFirstOption ? -1 : 0\n    });\n  }\n\n  onCloseOptionList() {\n    this.setState({\n      toggleOptionsList: false,\n      highlightOption: this.props.avoidHighlightFirstOption ? -1 : 0,\n      inputValue: ''\n    });\n  }\n\n  onFocus(){\n    if (this.state.toggleOptionsList) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    } else {\n      this.toggelOptionList();\n    }\n  }\n\n  onBlur(){\n    this.setState({ inputValue: '' }, this.filterOptionsByInput);\n    // @ts-ignore\n    this.optionTimeout = setTimeout(this.onCloseOptionList, 250);\n  }\n\n  isVisible(elem) {\n    return !!elem && !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length )\n  }\n\n  hideOnClickOutside() {\n    const element = document.getElementsByClassName('multiselect-container')[0];\n    const outsideClickListener = event => {\n        if (element && !element.contains(event.target) && this.isVisible(element)) {\n          this.toggelOptionList();\n        }\n    }\n    document.addEventListener('click', outsideClickListener)\n  }\n\n  renderMultiselectContainer() {\n    const { inputValue, toggleOptionsList, selectedValues } = this.state;\n    const { placeholder, style, singleSelect, id, name, hidePlaceholder, disable, showArrow, className, customArrow, hideSelectedList } = this.props;\n    return (\n      <div className={`multiselect-container multiSelectContainer ${disable ? `disable_ms` : ''} ${className || ''}`} id={id || 'multiselectContainerReact'} style={style['multiselectContainer']}>\n        <div className={`search-wrapper searchWrapper ${singleSelect ? 'singleSelect' : ''}`}\n          ref={this.searchWrapper} style={style['searchBox']}\n          onClick={singleSelect ? this.toggelOptionList : () => {}}\n        >\n          {!hideSelectedList && this.renderSelectedList()}\n          <input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tref={this.searchBox}\n            className={`searchBox ${singleSelect && selectedValues.length ? 'display-none' : ''}`}\n            id={`${id || 'search'}_input`}\n\t          name={`${name || 'search_name'}_input`}\n            onChange={this.onChange}\n            onKeyPress={this.onKeyPress}\n            value={inputValue}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            placeholder={((singleSelect && selectedValues.length) || (hidePlaceholder && selectedValues.length)) ? '' : placeholder}\n            onKeyDown={this.onArrowKeyNavigation}\n            style={style['inputField']}\n            autoComplete=\"off\"\n            disabled={singleSelect || disable}\n          />\n          {(singleSelect || showArrow) && (\n            <>\n              {customArrow ? <span className=\"icon_down_dir\">{customArrow}</span> : <img src={DownArrow} className={`icon_cancel icon_down_dir`} />}\n            </>\n          )}\n        </div>\n        <div\n          className={`optionListContainer ${\n            toggleOptionsList ? 'displayBlock' : 'displayNone'\n          }`}\n          onMouseDown={(e) => {\n            e.preventDefault();\n          }}\n        >\n          {this.renderOptionList()}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <OutsideAlerter outsideClick={this.onCloseOptionList}>\n        {this.renderMultiselectContainer()}\n      </OutsideAlerter>\n    );\n  }\n}\n\nMultiselect.defaultProps = {\n  options: [],\n  disablePreSelectedValues: false,\n  selectedValues: [],\n  isObject: true,\n  displayValue: \"model\",\n  showCheckbox: false,\n  selectionLimit: -1,\n  placeholder: \"Select\",\n\tgroupBy: \"\",\n\tstyle: {},\n\temptyRecordMsg: \"No Options Available\",\n\tonSelect: () => {},\n  onRemove: () => {},\n  onKeyPressFn: () => {},\n  closeIcon: 'circle2',\n  singleSelect: false,\n  caseSensitiveSearch: false,\n  id: '',\n  name: '',\n  closeOnSelect: true,\n  avoidHighlightFirstOption: false,\n  hidePlaceholder: false,\n  showArrow: false,\n  keepSearchTerm: false,\n  customCloseIcon: '',\n  className: '',\n  customArrow: undefined,\n  selectedValueDecorator: v => v,\n  optionValueDecorator: v => v\n} as IMultiselectProps;\n"],"sourceRoot":""}