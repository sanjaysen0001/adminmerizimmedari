{"version":3,"sources":["views/apps/PlanDetails/EditPlanDetail.js"],"names":["EditPlanDetail","props","onEditorStateChange","editorState","setState","short_desc","draftToHtml","convertToRaw","getCurrentContent","changeHandler","e","target","name","value","handleImage","selectedFile","files","changeHandler1","allPlan","submitHandler","id","match","params","preventDefault","formData","FormData","append","state","title","Number","plan_max","plan_deductible","coverageAmt","start_date","end_date","total","email","coverage_area","dob","axiosConfig","post","then","response","console","log","data","swal","catch","error","planname","plannameList","long_desc","highlight_desc","upload_pdf","PlanDetailsView","this","location","_id","get","sm","listTag","href","tag","active","className","col-sm-6","render","history","onClick","push","onSubmit","lg","md","type","onChange","map","allName","selected","key","planName","required","placeholder","toolbarClassName","wrapperClassName","editorClassName","toolbar","options","inline","bold","italic","underline","strikethrough","code","blockType","fontSize","fontFamily","Ripple","color","Component"],"mappings":"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","file":"static/js/158.be6c8f23.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport swal from \"sweetalert\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../../../assets/scss/plugins/extensions/editor.scss\";\r\nexport default class EditPlanDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      planname: \"\",\r\n      plannameList: [],\r\n      short_desc: \"\",\r\n      title: \"\",\r\n      long_desc: \"\",\r\n      highlight_desc: \"\",\r\n      upload_pdf: [],\r\n      selectedFile: null,\r\n      plan_max: \"\",\r\n      plan_deductible: \"\", //  number\r\n      coverageAmt: \"\", //  number\r\n      start_date: \"\", //  str\r\n      end_date: \"\",\r\n      total: \"\", //  number\r\n      email: \"\",\r\n      coverage_area: \"\", //  str\r\n      dob: \"\",\r\n      allPlan: \"\",\r\n      PlanDetailsView: [],\r\n    };\r\n  }\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n      short_desc: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n    });\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  handleImage = (e) => {\r\n    this.setState({ selectedFile: e.target.files[0] });\r\n  };\r\n  changeHandler1 = (e) => {\r\n    this.setState({ allPlan: e.target.value });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    // await axiosConfig.get(`/admin/getOnePlan/${id}`).then((response) => {\r\n    //   console.log(response);\r\n    const {\r\n      planname,\r\n      title,\r\n      short_desc,\r\n      coverageAmt,\r\n      coverage_area,\r\n      dob,\r\n      email,\r\n      end_date,\r\n      highlight_desc,\r\n      plan_deductible,\r\n      plan_max,\r\n      start_date,\r\n      total,\r\n    } = this.props.location.state;\r\n    this.setState({\r\n      allPlan: planname._id,\r\n      title: title,\r\n      short_desc: short_desc,\r\n      coverageAmt: coverageAmt,\r\n      coverage_area: coverage_area,\r\n      dob: dob,\r\n      email: email,\r\n      end_date: end_date,\r\n      highlight_desc: highlight_desc,\r\n      plan_deductible: plan_deductible,\r\n      plan_max: plan_max,\r\n      start_date: start_date,\r\n      total: total,\r\n    });\r\n\r\n    await axiosConfig.get(`/user/infPlanList`).then((response) => {\r\n      this.setState({ plannameList: response.data });\r\n    });\r\n  }\r\n\r\n  submitHandler = (e) => {\r\n    const { id } = this.props.match.params;\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"planname\", this.state.allPlan);\r\n    formData.append(\"short_desc\", this.state.short_desc);\r\n    formData.append(\"title\", this.state.title);\r\n    // formData.append(\"long_desc\", \"long_desc\");\r\n    // formData.append(\"highlight_desc\", \"highlight_desc\");\r\n    formData.append(\"plan_max\", Number(this.state.plan_max));\r\n    formData.append(\"plan_deductible\", Number(this.state.plan_deductible));\r\n    formData.append(\"coverageAmt\", Number(this.state.coverageAmt));\r\n    formData.append(\"start_date\", this.state.start_date);\r\n    formData.append(\"end_date\", this.state.end_date);\r\n    formData.append(\"total\", Number(this.state.total));\r\n    formData.append(\"email\", this.state.email);\r\n    formData.append(\"coverage_area\", this.state.coverage_area);\r\n    formData.append(\"dob\", this.state.dob);\r\n\r\n    if (this.state.selectedFile != null) {\r\n      formData.append(\"upload_pdf\", this.state.selectedFile);\r\n    }\r\n    axiosConfig\r\n      .post(`/admin/editPlanDetail/${id}`, formData)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <div>\r\n              <Breadcrumb listTag=\"div\">\r\n                <BreadcrumbItem href=\"/analyticsDashboard\" tag=\"a\">\r\n                  Home\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem href=\"/app/plans/CreatedPlanList\" tag=\"a\">\r\n                  Plan DetailList\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem active> EditPlan Detail</BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                EditPlan Detail\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() => history.push(\"/app/plans/PlanDetailList\")}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Plan Name</Label>\r\n                  <CustomInput\r\n                    type=\"select\"\r\n                    name=\"allPlan\"\r\n                    value={this.state.allPlan}\r\n                    onChange={this.changeHandler1}\r\n                  >\r\n                    {this.state.plannameList &&\r\n                      this.state.plannameList?.map((allName) => (\r\n                        <option\r\n                          selected={this.state.allPlan}\r\n                          value={allName?._id}\r\n                          key={allName?._id}\r\n                        >\r\n                          {allName?.planName}\r\n                        </option>\r\n                      ))}\r\n                  </CustomInput>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Title</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"Title\"\r\n                    value={this.state.title}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Upload Pdf</Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"file\"\r\n                    name=\"upload_pdf\"\r\n                    onChange={this.handleImage}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Plan Max</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"plan_max\"\r\n                    placeholder=\"Plan Max\"\r\n                    value={this.state.plan_max}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Plan Deductible</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"plan_deductible\"\r\n                    placeholder=\"Plan Deductible\"\r\n                    value={this.state.plan_deductible}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>CoverageAmt</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"coverageAmt\"\r\n                    placeholder=\"CoverageAmt\"\r\n                    value={this.state.coverageAmt}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Start Date</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>End Date</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Total</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"total\"\r\n                    placeholder=\"Total\"\r\n                    value={this.state.total}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Email</Label>\r\n                  <Input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={this.state.email}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Coverage Area</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"coverage_area\"\r\n                    placeholder=\"Coverage Area\"\r\n                    value={this.state.coverage_area}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>DOB</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"dob\"\r\n                    value={this.state.dob}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"4\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Descripition</Label>\r\n                  <Editor\r\n                    toolbarClassName=\"demo-toolbar-absolute\"\r\n                    wrapperClassName=\"demo-wrapper\"\r\n                    editorClassName=\"demo-editor\"\r\n                    editorState={this.state.editorState}\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                    toolbar={{\r\n                      options: [\r\n                        \"inline\",\r\n                        \"blockType\",\r\n                        \"fontSize\",\r\n                        \"fontFamily\",\r\n                      ],\r\n                      inline: {\r\n                        options: [\r\n                          \"bold\",\r\n                          \"italic\",\r\n                          \"underline\",\r\n                          \"strikethrough\",\r\n                          \"monospace\",\r\n                        ],\r\n                        bold: { className: \"bordered-option-classname\" },\r\n                        italic: { className: \"bordered-option-classname\" },\r\n                        underline: { className: \"bordered-option-classname\" },\r\n                        strikethrough: {\r\n                          className: \"bordered-option-classname\",\r\n                        },\r\n                        code: { className: \"bordered-option-classname\" },\r\n                      },\r\n                      blockType: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                      fontSize: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                      fontFamily: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </Col>\r\n                {/* <Col lg=\"4\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Long Descripition</Label>\r\n                  <Editor\r\n                    toolbarClassName=\"demo-toolbar-absolute\"\r\n                    wrapperClassName=\"demo-wrapper\"\r\n                    editorClassName=\"demo-editor\"\r\n                    editorState={this.state.editorState}\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                    toolbar={{\r\n                      options: [\r\n                        \"inline\",\r\n                        \"blockType\",\r\n                        \"fontSize\",\r\n                        \"fontFamily\",\r\n                      ],\r\n                      inline: {\r\n                        options: [\r\n                          \"bold\",\r\n                          \"italic\",\r\n                          \"underline\",\r\n                          \"strikethrough\",\r\n                          \"monospace\",\r\n                        ],\r\n                        bold: { className: \"bordered-option-classname\" },\r\n                        italic: { className: \"bordered-option-classname\" },\r\n                        underline: { className: \"bordered-option-classname\" },\r\n                        strikethrough: {\r\n                          className: \"bordered-option-classname\",\r\n                        },\r\n                        code: { className: \"bordered-option-classname\" },\r\n                      },\r\n                      blockType: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                      fontSize: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                      fontFamily: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"4\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Highlight Descripition</Label>\r\n                  <Editor\r\n                    toolbarClassName=\"demo-toolbar-absolute\"\r\n                    wrapperClassName=\"demo-wrapper\"\r\n                    editorClassName=\"demo-editor\"\r\n                    editorState={this.state.editorState}\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                    toolbar={{\r\n                      options: [\r\n                        \"inline\",\r\n                        \"blockType\",\r\n                        \"fontSize\",\r\n                        \"fontFamily\",\r\n                      ],\r\n                      inline: {\r\n                        options: [\r\n                          \"bold\",\r\n                          \"italic\",\r\n                          \"underline\",\r\n                          \"strikethrough\",\r\n                          \"monospace\",\r\n                        ],\r\n                        bold: { className: \"bordered-option-classname\" },\r\n                        italic: { className: \"bordered-option-classname\" },\r\n                        underline: { className: \"bordered-option-classname\" },\r\n                        strikethrough: {\r\n                          className: \"bordered-option-classname\",\r\n                        },\r\n                        code: { className: \"bordered-option-classname\" },\r\n                      },\r\n                      blockType: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                      fontSize: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                      fontFamily: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </Col> */}\r\n              </Row>\r\n              <Row className=\"m-1\">\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mt-1\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                  >\r\n                    Update PlanDetail\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}