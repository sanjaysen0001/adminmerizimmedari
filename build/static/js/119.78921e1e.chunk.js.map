{"version":3,"sources":["views/apps/plans/AddPlan.js","../node_modules/reactstrap/es/FormGroup.js","../node_modules/multiselect-react-dropdown/dist/index.js","../../node_modules/style-inject/dist/style-inject.es.js","../../src/multiselect/multiselect.component.tsx"],"names":["AddPlan","props","changeHandler1","e","setState","status","target","value","planTypeList","axiosConfig","get","then","response","console","log","data","list","catch","err","swal","PlanBenefitsList","planBenefitsList","Benefite","AllPolicyList","policyList","changeHandler","name","handlePlanBenefits","submitHandler","preventDefault","state","error","payload","planMinDays","planType","agesupportMin","agesupportMax","planMaximum","planDeductible","preexCoverage","preexMaxCoverage","CoverageCntry","planBenefitsCode_fk","preexDeductible","policy_ID_fk","post","history","push","policy_combination_active","selectedValue","onSelect","bind","onRemove","this","selectedList","selectedItem","length","removedItem","sm","listTag","href","tag","active","className","col-sm-6","render","onClick","onSubmit","lg","md","for","type","required","id","onChange","defaultValue","disabled","options","selectedValues","displayValue","style","color","placeholder","map","val","_id","policyName","planBenefitsCode","Ripple","Component","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","tagPropType","string","cssModule","object","FormGroup","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","module","exports","require","css","ref","insertAt","document","head","getElementsByTagName","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","closeIconTypes","circle","circle2","close","cancel","OutsideAlerter","clickEvent","wrapperRef","useRef","outsideClick","useEffect","handleClickOutside","event","current","contains","addEventListener","removeEventListener","Multiselect","c","_this","inputValue","filteredOptions","unfilteredOptions","Object","assign","preSelectedValues","toggleOptionsList","highlightOption","avoidHighlightFirstOption","showCheckbox","keepSearchTerm","groupedObject","closeIconType","closeIcon","optionTimeout","searchWrapper","createRef","searchBox","onKeyPress","onFocus","onBlur","renderMultiselectContainer","renderSelectedList","onRemoveSelectedItem","toggelOptionList","onArrowKeyNavigation","onSelectItem","filterOptionsByInput","removeSelectedValuesFromOptions","isSelectedValue","fadeOutSelection","isDisablePreSelectedValues","renderGroupByOptions","renderNormalOption","listenerCallback","resetSelectedValues","getSelectedItems","getSelectedItemsCount","hideOnClickOutside","onCloseOptionList","isVisible","initialSetValue","groupBy","singleSelect","groupByOptions","_proto","Promise","resolve","_this2","componentDidMount","componentDidUpdate","prevProps","prevSelectedvalues","JSON","stringify","focus","componentWillUnmount","clearTimeout","skipCheck","isObject","l","optionList","filter","findIndex","v","item","indexOf","reduce","r","a","key","create","onSearch","onKeyPressFn","_this3","matchValues","i","search","caseSensitiveSearch","toLowerCase","toString","keyCode","disablePreSelectedValues","previousState","index","splice","_this4","closeOnSelect","selectionLimit","onSingleSelect","_this5","renderOptionList","emptyRecordMsg","loadingMessage","o","loading","optionContainer","notFound","keys","Fragment","obj","groupHeading","option","isSelected","_this6","readOnly","checked","optionValueDecorator","_this7","customCloseIcon","_this8","chips","selectedValueDecorator","src","setTimeout","elem","offsetWidth","offsetHeight","getClientRects","element","getElementsByClassName","_this9","hidePlaceholder","disable","showArrow","customArrow","multiselectContainer","hideSelectedList","onKeyDown","inputField","autoComplete","onMouseDown"],"mappings":"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","file":"static/js/119.78921e1e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  FormGroup,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { history } from \"../../../history\";\r\nimport swal from \"sweetalert\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\n\r\nexport default class AddPlan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      planMinDays: \"\",\r\n      planType: [],\r\n      agesupportMin: null,\r\n      agesupportMax: null,\r\n      planMaximum: \"\",\r\n      planDeductible: \"\",\r\n      preexCoverage: \"\",\r\n      preexDeductible: \"\",\r\n      preexMaxCoverage: null,\r\n      CoverageCntry: \"\",\r\n      policy_combination_active: \"\",\r\n      selectedValue: \"\",\r\n      list: [],\r\n      planBenefitsCode_fk: \"\",\r\n      policy_ID_fk: \"\",\r\n      planBenefitsList: [],\r\n      policyList: [],\r\n      error: \"\",\r\n    };\r\n    this.onSelect = this.onSelect.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  }\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n  componentDidMount() {\r\n    this.PlanBenefitsList();\r\n    this.AllPolicyList();\r\n    this.planTypeList();\r\n  }\r\n  planTypeList = () => {\r\n    axiosConfig\r\n      .get(\"/admin/get_plan_typ\")\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n        this.setState({ list: response.data.data });\r\n      })\r\n      .catch((err) => {\r\n        swal(\"Something Went Wrong\");\r\n      });\r\n  };\r\n  PlanBenefitsList = () => {\r\n    axiosConfig.get(\"/benefite/view-benefite\").then((response) => {\r\n      this.setState({ planBenefitsList: response.data.Benefite });\r\n    });\r\n  };\r\n  AllPolicyList = () => {\r\n    axiosConfig.get(\"/admin/get_policies\").then((response) => {\r\n      this.setState({ policyList: response.data.data });\r\n    });\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  onSelect(selectedList, selectedItem) {\r\n    console.log(selectedList.length);\r\n    this.setState({ planType: selectedList });\r\n  }\r\n  handlePlanBenefits = (e) => {\r\n    const { name, value } = e.target;\r\n    console.log(value);\r\n    this.setState({ [name]: value });\r\n  };\r\n  onRemove(selectedList, removedItem) {\r\n    console.log(selectedList);\r\n    this.setState({ planType: selectedList });\r\n  }\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(this.state.error);\r\n    const payload = {\r\n      planMinDays: this.state.planMinDays,\r\n      planType: this.state.planType,\r\n      agesupportMin: this.state.agesupportMin,\r\n      agesupportMax: this.state.agesupportMax,\r\n      planMaximum: this.state.planMaximum,\r\n      planDeductible: this.state.planDeductible,\r\n      preexCoverage: this.state.preexCoverage,\r\n      preexMaxCoverage: this.state.preexMaxCoverage,\r\n      CoverageCntry: this.state.CoverageCntry,\r\n      planBenefitsCode_fk: this.state.planBenefitsCode_fk,\r\n      preexDeductible: this.state.preexDeductible,\r\n      // policy_combination_active: this.state.preexCoverage,\r\n      policy_ID_fk: this.state.policy_ID_fk,\r\n      status: this.state.status,\r\n    };\r\n    console.log(payload);\r\n\r\n    axiosConfig\r\n      .post(\"/plan/save-plan\", payload)\r\n      .then((response) => {\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        this.props.history.push(\"/app/plans/PlanList\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    // }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <div>\r\n              <Breadcrumb listTag=\"div\">\r\n                <BreadcrumbItem href=\"/analyticsDashboard\" tag=\"a\">\r\n                  Home\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem href=\"\" tag=\"a\">\r\n                  Plan List\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem active>Add Plan</BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Add Plan\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() => history.push(\"/app/plans/PlanList\")}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"\">\r\n                  <Label for=\"data-category\">PlanMinDays</Label>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"select\"\r\n                      required\r\n                      id=\"data-category\"\r\n                      name=\"planMinDays\"\r\n                      value={this.state.planMinDays}\r\n                      onChange={this.handlePlanBenefits}\r\n                      defaultValue=\"\"\r\n                    >\r\n                      <option disabled value=\"\">\r\n                        Select PlanMinDays\r\n                      </option>\r\n                      <option value=\"5\">5</option>\r\n                      <option value=\"15\">15</option>\r\n                      <option value=\"30\">30</option>\r\n                      <option value=\"60\">60</option>\r\n                      <option value=\"90\">90</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col className=\"\" lg=\"6\" md=\"6\" sm=\"12\">\r\n                  <Label for=\"data-category\">Plan Type</Label>\r\n                  <Multiselect\r\n                    options={this.state.list}\r\n                    selectedValues={this.state.selectedValue}\r\n                    onSelect={this.onSelect}\r\n                    onRemove={this.onRemove}\r\n                    displayValue=\"plan_type\"\r\n                  />\r\n                  <span style={{ color: \"red\" }}>{this.state.error}</span>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>AgesupportMin</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"agesupportMin\"\r\n                    placeholder=\"AgesupportMin\"\r\n                    value={this.state.agesupportMin}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>AgesupportMax</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"agesupportMax\"\r\n                    placeholder=\"AgesupportMax\"\r\n                    value={this.state.agesupportMax}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>planMaximum</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"planMaximum\"\r\n                    placeholder=\"planMaximum\"\r\n                    value={this.state.planMaximum}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"\">\r\n                  <Label for=\"data-category\">PlanDeductible</Label>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"select\"\r\n                      id=\"data-category\"\r\n                      required\r\n                      name=\"planDeductible\"\r\n                      value={this.state.planDeductible}\r\n                      onChange={this.handlePlanBenefits}\r\n                      defaultValue=\"\"\r\n                    >\r\n                      <option disabled value=\"\">\r\n                        Select planDeductible\r\n                      </option>\r\n                      <option value=\"0\">0</option>\r\n                      <option value=\"50\">50</option>\r\n                      <option value=\"75\">75</option>\r\n                      <option value=\"100\">100</option>\r\n                      <option value=\"250\">250</option>\r\n                      <option value=\"500\">500</option>\r\n                      <option value=\"1000\">1000</option>\r\n                      <option value=\"2500\">2500</option>\r\n                      <option value=\"5000\">5000</option>\r\n                      <option value=\"10000\">10000</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"\">\r\n                  <Label for=\"data-category\">PreexCoverage</Label>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"select\"\r\n                      id=\"data-category\"\r\n                      required\r\n                      name=\"preexCoverage\"\r\n                      value={this.state.preexCoverage}\r\n                      onChange={this.handlePlanBenefits}\r\n                      defaultValue=\"\"\r\n                    >\r\n                      <option value=\"\" disabled>\r\n                        Select PreexCoverage\r\n                      </option>\r\n                      <option value=\"NO\">NO</option>\r\n                      <option value=\"YES\">YES</option>\r\n                      <option value=\"ACUTE\">ACUTE</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"\">\r\n                  <Label for=\"data-category\">Policy</Label>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"select\"\r\n                      required\r\n                      id=\"data-category\"\r\n                      name=\"policy_ID_fk\"\r\n                      value={this.state.policy_ID_fk}\r\n                      onChange={this.handlePlanBenefits}\r\n                      defaultValue=\"\"\r\n                    >\r\n                      <option disabled value=\"\">\r\n                        Select Policy\r\n                      </option>\r\n                      {this.state.policyList?.map((val) => {\r\n                        return (\r\n                          <option value={val?._id}>{val?.policyName}</option>\r\n                        );\r\n                      })}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"\">\r\n                  <Label for=\"data-category\">PlanBenefits </Label>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"select\"\r\n                      id=\"data-category\"\r\n                      required\r\n                      name=\"planBenefitsCode_fk\"\r\n                      value={this.state.planBenefitsCode_fk}\r\n                      onChange={this.handlePlanBenefits}\r\n                      defaultValue=\"\"\r\n                    >\r\n                      <option disabled value=\"\">\r\n                        Select PlanBenefit\r\n                      </option>\r\n                      {this.state.planBenefitsList?.map((val) => {\r\n                        return (\r\n                          <option value={val?._id}>\r\n                            {val?.planBenefitsCode}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"\">\r\n                  <Label for=\"data-category\">PreexDeductible</Label>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"select\"\r\n                      id=\"data-category\"\r\n                      required\r\n                      name=\"preexDeductible\"\r\n                      value={this.state.preexDeductible}\r\n                      onChange={this.handlePlanBenefits}\r\n                      defaultValue=\"\"\r\n                    >\r\n                      <option disabled value=\"\">\r\n                        Select PreexDeductible\r\n                      </option>\r\n                      <option value=\"0\">0</option>\r\n                      <option value=\"75\">75</option>\r\n                      <option value=\"100\">100</option>\r\n                      <option value=\"250\">250</option>\r\n                      <option value=\"500\">500</option>\r\n                      <option value=\"750\">750</option>\r\n                      <option value=\"1000\">1000</option>\r\n                      <option value=\"1500\">1500</option>\r\n                      <option value=\"2000\">2000</option>\r\n                      <option value=\"2500\">2500</option>\r\n                      <option value=\"5000\">5000</option>\r\n                      <option value=\"10000\">10000</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>PreexMaxCoverage</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"preexMaxCoverage\"\r\n                    placeholder=\"preexMaxCoverage\"\r\n                    value={this.state.preexMaxCoverage}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>CoverageCntry</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"CoverageCntry\"\r\n                    placeholder=\"CoverageCntry\"\r\n                    value={this.state.CoverageCntry}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                {/* <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label className=\"mb-1\">Status</Label>\r\n                  <div\r\n                    className=\"form-label-group\"\r\n                    onChange={(e) => this.changeHandler1(e)}\r\n                  >\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Active\"\r\n                    />\r\n                    <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"false\"\r\n                    />\r\n                    <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n                  </div>\r\n                </Col> */}\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                  >\r\n                    Add Plan\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./multiselect-react-dropdown.cjs.production.min.js')\n} else {\n  module.exports = require('./multiselect-react-dropdown.cjs.development.js')\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","// @ts-nocheck\nimport React, { useRef, useEffect } from \"react\";\nimport \"./styles.css\";\nimport CloseCircle from '../assets/svg/closeCircle.svg';\nimport CloseCircleDark from '../assets/svg/closeCircleDark.svg';\nimport CloseLine from '../assets/svg/closeLine.svg';\nimport CloseSquare from '../assets/svg/closeSquare.svg';\nimport DownArrow from '../assets/svg/downArrow.svg';\nimport {IMultiselectProps} from \"./interface\";\n\nconst closeIconTypes = {\n  circle: CloseCircleDark,\n  circle2: CloseCircle,\n  close: CloseSquare,\n  cancel: CloseLine\n};\n\nfunction useOutsideAlerter(ref, clickEvent) {\n  useEffect(() => {\n      function handleClickOutside(event) {\n          if (ref.current && !ref.current.contains(event.target)) {\n            clickEvent();\n          }\n      }\n\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n  }, [ref]);\n}\n\n/**\n* Component that alerts if you click outside of it\n*/\nfunction OutsideAlerter(props) {\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef, props.outsideClick);\n  return <div ref={wrapperRef}>{props.children}</div>;\n}\n\nexport class Multiselect extends React.Component<IMultiselectProps, any> {\n  static defaultProps: IMultiselectProps;\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n      options: props.options,\n      filteredOptions: props.options,\n      unfilteredOptions: props.options,\n      selectedValues: Object.assign([], props.selectedValues),\n      preSelectedValues: Object.assign([], props.selectedValues),\n      toggleOptionsList: false,\n      highlightOption: props.avoidHighlightFirstOption ? -1 : 0,\n\t\t\tshowCheckbox: props.showCheckbox,\n      keepSearchTerm: props.keepSearchTerm,\n      groupedObject: [],\n      closeIconType: closeIconTypes[props.closeIcon] || closeIconTypes['circle']\n    };\n    // @ts-ignore\n    this.optionTimeout = null;\n    // @ts-ignore\n\t\tthis.searchWrapper = React.createRef();\n    // @ts-ignore\n\t\tthis.searchBox = React.createRef();\n    this.onChange = this.onChange.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.renderMultiselectContainer = this.renderMultiselectContainer.bind(this);\n    this.renderSelectedList = this.renderSelectedList.bind(this);\n    this.onRemoveSelectedItem = this.onRemoveSelectedItem.bind(this);\n    this.toggelOptionList = this.toggelOptionList.bind(this);\n    this.onArrowKeyNavigation = this.onArrowKeyNavigation.bind(this);\n    this.onSelectItem = this.onSelectItem.bind(this);\n    this.filterOptionsByInput = this.filterOptionsByInput.bind(this);\n    this.removeSelectedValuesFromOptions = this.removeSelectedValuesFromOptions.bind(this);\n    this.isSelectedValue = this.isSelectedValue.bind(this);\n    this.fadeOutSelection = this.fadeOutSelection.bind(this);\n    this.isDisablePreSelectedValues = this.isDisablePreSelectedValues.bind(this);\n    this.renderGroupByOptions = this.renderGroupByOptions.bind(this);\n    this.renderNormalOption = this.renderNormalOption.bind(this);\n    this.listenerCallback = this.listenerCallback.bind(this);\n    this.resetSelectedValues = this.resetSelectedValues.bind(this);\n    this.getSelectedItems = this.getSelectedItems.bind(this);\n    this.getSelectedItemsCount = this.getSelectedItemsCount.bind(this);\n    this.hideOnClickOutside = this.hideOnClickOutside.bind(this);\n    this.onCloseOptionList = this.onCloseOptionList.bind(this);\n    this.isVisible = this.isVisible.bind(this);\n  }\n\n  initialSetValue() {\n    const { showCheckbox, groupBy, singleSelect } = this.props;\n\t\tconst { options } = this.state;\n    if (!showCheckbox && !singleSelect) {\n      this.removeSelectedValuesFromOptions(false);\n\t\t}\n    // if (singleSelect) {\n    //   this.hideOnClickOutside();\n    // }\n\t\tif (groupBy) {\n\t\t\tthis.groupByOptions(options);\n\t\t}\n  }\n\n  resetSelectedValues() {\n    const { unfilteredOptions } = this.state;\n    return new Promise((resolve) => {\n      this.setState({\n        selectedValues: [],\n        preSelectedValues: [],\n        options: unfilteredOptions,\n        filteredOptions: unfilteredOptions\n      }, () => {\n        // @ts-ignore\n        resolve();\n        this.initialSetValue();\n      });\n    });\n  }\n\n  getSelectedItems() {\n    return this.state.selectedValues;\n  }\n\n  getSelectedItemsCount() {\n    return this.state.selectedValues.length;\n  }\n\n  componentDidMount() {\n\t\tthis.initialSetValue();\n    // @ts-ignore\n    this.searchWrapper.current.addEventListener(\"click\", this.listenerCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedValues } = this.props;\n    const { options: prevOptions, selectedValues: prevSelectedvalues } = prevProps;\n    if (JSON.stringify(prevOptions) !== JSON.stringify(options)) {\n      this.setState({ options, filteredOptions: options, unfilteredOptions: options }, this.initialSetValue);\n    }\n    if (JSON.stringify(prevSelectedvalues) !== JSON.stringify(selectedValues)) {\n      this.setState({ selectedValues: Object.assign([], selectedValues), preSelectedValues: Object.assign([], selectedValues) }, this.initialSetValue);\n    }\n  }\n\n  listenerCallback() {\n    // @ts-ignore\n    this.searchBox.current.focus();\n  }\n\n  componentWillUnmount() {\n    // @ts-ignore\n    if (this.optionTimeout) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    }\n    // @ts-ignore\n    this.searchWrapper.current.removeEventListener('click', this.listenerCallback);\n  }\n\n  // Skipcheck flag - value will be true when the func called from on deselect anything.\n  removeSelectedValuesFromOptions(skipCheck) {\n    const { isObject, displayValue, groupBy } = this.props;\n    const { selectedValues = [], unfilteredOptions, options } = this.state;\n    if (!skipCheck && groupBy) {\n      this.groupByOptions(options);\n    }\n    if (!selectedValues.length && !skipCheck) {\n      return;\n    }\n    if (isObject) {\n      let optionList = unfilteredOptions.filter(item => {\n        return selectedValues.findIndex(\n          v => v[displayValue] === item[displayValue]\n        ) === -1\n          ? true\n          : false;\n      });\n      if (groupBy) {\n        this.groupByOptions(optionList);\n      }\n      this.setState(\n        { options: optionList, filteredOptions: optionList },\n        this.filterOptionsByInput\n      );\n      return;\n    }\n    let optionList = unfilteredOptions.filter(\n      item => selectedValues.indexOf(item) === -1\n    );\n\n    this.setState(\n      { options: optionList, filteredOptions: optionList },\n      this.filterOptionsByInput\n    );\n  }\n\n  groupByOptions(options) {\n    const { groupBy } = this.props;\n    const groupedObject = options.reduce(function(r, a) {\n      const key = a[groupBy] || \"Others\";\n      r[key] = r[key] || [];\n      r[key].push(a);\n      return r;\n    }, Object.create({}));\n\n    this.setState({ groupedObject });\n  }\n\n  onChange(event) {\n    const { onSearch } = this.props;\n    this.setState(\n      { inputValue: event.target.value },\n      this.filterOptionsByInput\n    );\n    if (onSearch) {\n      onSearch(event.target.value);\n    }\n  }\n\n  onKeyPress(event) {\n    const { onKeyPressFn } = this.props;\n    if (onKeyPressFn) {\n        onKeyPressFn(event, event.target.value);\n    }\n  }\n\n  filterOptionsByInput() {\n    let { options, filteredOptions, inputValue } = this.state;\n    const { isObject, displayValue } = this.props;\n    if (isObject) {\n      options = filteredOptions.filter(i => this.matchValues(i[displayValue], inputValue))\n    } else {\n      options = filteredOptions.filter(i => this.matchValues(i, inputValue));\n    }\n    this.groupByOptions(options);\n    this.setState({ options });\n  }\n\n  matchValues(value, search) {\n    if (this.props.caseSensitiveSearch) {\n      return value.indexOf(search) > -1;\n    }\n    if (value.toLowerCase) {\n      return value.toLowerCase().indexOf(search.toLowerCase()) > -1;\n    }\n    return value.toString().indexOf(search) > -1;\n  }\n\n  onArrowKeyNavigation(e) {\n    const {\n      options,\n      highlightOption,\n      toggleOptionsList,\n      inputValue,\n      selectedValues\n    } = this.state;\n    const { disablePreSelectedValues } = this.props;\n    if (e.keyCode === 8 && !inputValue && !disablePreSelectedValues && selectedValues.length) {\n      this.onRemoveSelectedItem(selectedValues.length - 1);\n    }\n    if (!options.length) {\n      return;\n    }\n    if (e.keyCode === 38) {\n      if (highlightOption > 0) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption - 1\n        }));\n      } else {\n        this.setState({ highlightOption: options.length - 1 });\n      }\n    } else if (e.keyCode === 40) {\n      if (highlightOption < options.length - 1) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption + 1\n        }));\n      } else {\n        this.setState({ highlightOption: 0 });\n      }\n    } else if (e.key === \"Enter\" && options.length && toggleOptionsList) {\n      if (highlightOption === -1) {\n        return;\n      }\n      this.onSelectItem(options[highlightOption]);\n    }\n    // TODO: Instead of scrollIntoView need to find better soln for scroll the dropwdown container.\n    // setTimeout(() => {\n    //   const element = document.querySelector(\"ul.optionContainer .highlight\");\n    //   if (element) {\n    //     element.scrollIntoView();\n    //   }\n    // });\n  }\n\n  onRemoveSelectedItem(item) {\n\t\tlet { selectedValues, index = 0 } = this.state;\n\t\tconst { onRemove, showCheckbox, displayValue, isObject } = this.props;\n    if (isObject) {\n      index = selectedValues.findIndex(\n        i => i[displayValue] === item[displayValue]\n      );\n    } else {\n      index = selectedValues.indexOf(item);\n    }\n\t\tselectedValues.splice(index, 1);\n\t\tonRemove(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSelectItem(item) {\n    const { selectedValues } = this.state;\n    const { selectionLimit, onSelect, singleSelect, showCheckbox } = this.props;\n    if (!this.state.keepSearchTerm){\n      this.setState({\n        inputValue: ''\n      });\n    }\n    if (singleSelect) {\n      this.onSingleSelect(item);\n      onSelect([item], item);\n      return;\n    }\n    if (this.isSelectedValue(item)) {\n      this.onRemoveSelectedItem(item);\n      return;\n    }\n    if (selectionLimit == selectedValues.length) {\n      return;\n    }\n\t\tselectedValues.push(item);\n\t\tonSelect(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      } else {\n        this.filterOptionsByInput();\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSingleSelect(item) {\n    this.setState({ selectedValues: [item], toggleOptionsList: false });\n  }\n\n  isSelectedValue(item) {\n    const { isObject, displayValue } = this.props;\n    const { selectedValues } = this.state;\n    if (isObject) {\n      return (\n        selectedValues.filter(i => i[displayValue] === item[displayValue])\n          .length > 0\n      );\n    }\n    return selectedValues.filter(i => i === item).length > 0;\n  }\n\n  renderOptionList() {\n    const { groupBy, style, emptyRecordMsg, loading, loadingMessage = 'loading...' } = this.props;\n    const { options } = this.state;\n    if (loading) {\n      return (\n        <ul className={`optionContainer`} style={style['optionContainer']}>\n          {typeof loadingMessage === 'string' && <span style={style['loadingMessage']} className={`notFound`}>{loadingMessage}</span>}\n          {typeof loadingMessage !== 'string' && loadingMessage}\n        </ul>\n      );\n    }\n    return (\n      <ul className={`optionContainer`} style={style['optionContainer']}>\n        {options.length === 0 && <span style={style['notFound']} className={`notFound`}>{emptyRecordMsg}</span>}\n        {!groupBy ? this.renderNormalOption() : this.renderGroupByOptions()}\n      </ul>\n    );\n  }\n\n  renderGroupByOptions() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { groupedObject } = this.state;\n    return Object.keys(groupedObject).map(obj => {\n\t\t\treturn (\n\t\t\t\t<React.Fragment key={obj}>\n\t\t\t\t\t<li className=\"groupHeading\" style={style['groupHeading']}>{obj}</li>\n\t\t\t\t\t{groupedObject[obj].map((option, i) => {\n            const isSelected = this.isSelectedValue(option);\n            return (\n              <li\n                key={`option${i}`}\n                style={style['option']}\n                className={`groupChildEle option ${isSelected ? 'selected' : ''} ${this.fadeOutSelection(option) ? 'disableSelection' : ''} ${this.isDisablePreSelectedValues(option) ? 'disableSelection' : ''}`}\n                onClick={() => this.onSelectItem(option)}\n              >\n                {showCheckbox && !singleSelect && (\n                    <input\n                      type=\"checkbox\"\n                      className={'checkbox'}\n                      readOnly\n                      checked={isSelected}\n                    />\n                )}\n                {this.props.optionValueDecorator(isObject ? option[displayValue] : (option || '').toString(), option)}\n              </li>\n            )}\n          )}\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t});\n  }\n\n  renderNormalOption() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { highlightOption } = this.state;\n    return this.state.options.map((option, i) => {\n        const isSelected = this.isSelectedValue(option);\n        return (\n          <li\n            key={`option${i}`}\n            style={style['option']}\n            className={`option ${isSelected ? 'selected' : ''} ${highlightOption === i ? `highlightOption highlight` : \"\"} ${this.fadeOutSelection(option) ? 'disableSelection' : ''} ${this.isDisablePreSelectedValues(option) ? 'disableSelection' : ''}`}\n            onClick={() => this.onSelectItem(option)}\n          >\n            {showCheckbox && !singleSelect && (\n              <input\n                type=\"checkbox\"\n                readOnly\n                className={`checkbox`}\n                checked={isSelected}\n              />\n            )}\n            {this.props.optionValueDecorator(isObject ? option[displayValue] : (option || '').toString(), option)}\n          </li>\n      )\n    });\n  }\n\n  renderSelectedList() {\n    const { isObject = false, displayValue, style, singleSelect, customCloseIcon } = this.props;\n    const { selectedValues, closeIconType } = this.state;\n    return selectedValues.map((value, index) => (\n      <span className={`chip  ${singleSelect && 'singleChip'} ${this.isDisablePreSelectedValues(value) && 'disableSelection'}`} key={index} style={style['chips']}>\n        {this.props.selectedValueDecorator(!isObject ? (value || '').toString() : value[displayValue], value)}\n        {!this.isDisablePreSelectedValues(value) && (!customCloseIcon ? <img\n          className=\"icon_cancel closeIcon\"\n          src={closeIconType}\n          onClick={() => this.onRemoveSelectedItem(value)}\n        /> : <i className=\"custom-close\" onClick={() => this.onRemoveSelectedItem(value)}>{customCloseIcon}</i>)}\n      </span>\n    ));\n  }\n\n  isDisablePreSelectedValues(value) {\n    const { isObject, disablePreSelectedValues, displayValue } = this.props;\n    const { preSelectedValues } = this.state;\n    if (!disablePreSelectedValues || !preSelectedValues.length) {\n      return false;\n    }\n    if (isObject) {\n      return (\n        preSelectedValues.filter(i => i[displayValue] === value[displayValue])\n          .length > 0\n      );\n    }\n    return preSelectedValues.filter(i => i === value).length > 0;\n  }\n\n  fadeOutSelection(item) {\n    const { selectionLimit, showCheckbox, singleSelect } = this.props;\n    if (singleSelect) {\n      return;\n    }\n    const { selectedValues } = this.state;\n    if (selectionLimit == -1) {\n      return false;\n    }\n    if (selectionLimit != selectedValues.length) {\n      return false;\n    }\n    if (selectionLimit == selectedValues.length) {\n      if (!showCheckbox) {\n        return true;\n      } else {\n        if (this.isSelectedValue(item)) {\n          return false;\n        }\n        return true;\n      }\n    }\n  }\n\n  toggelOptionList() {\n    this.setState({\n      toggleOptionsList: !this.state.toggleOptionsList,\n      highlightOption: this.props.avoidHighlightFirstOption ? -1 : 0\n    });\n  }\n\n  onCloseOptionList() {\n    this.setState({\n      toggleOptionsList: false,\n      highlightOption: this.props.avoidHighlightFirstOption ? -1 : 0,\n      inputValue: ''\n    });\n  }\n\n  onFocus(){\n    if (this.state.toggleOptionsList) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    } else {\n      this.toggelOptionList();\n    }\n  }\n\n  onBlur(){\n    this.setState({ inputValue: '' }, this.filterOptionsByInput);\n    // @ts-ignore\n    this.optionTimeout = setTimeout(this.onCloseOptionList, 250);\n  }\n\n  isVisible(elem) {\n    return !!elem && !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length )\n  }\n\n  hideOnClickOutside() {\n    const element = document.getElementsByClassName('multiselect-container')[0];\n    const outsideClickListener = event => {\n        if (element && !element.contains(event.target) && this.isVisible(element)) {\n          this.toggelOptionList();\n        }\n    }\n    document.addEventListener('click', outsideClickListener)\n  }\n\n  renderMultiselectContainer() {\n    const { inputValue, toggleOptionsList, selectedValues } = this.state;\n    const { placeholder, style, singleSelect, id, name, hidePlaceholder, disable, showArrow, className, customArrow, hideSelectedList } = this.props;\n    return (\n      <div className={`multiselect-container multiSelectContainer ${disable ? `disable_ms` : ''} ${className || ''}`} id={id || 'multiselectContainerReact'} style={style['multiselectContainer']}>\n        <div className={`search-wrapper searchWrapper ${singleSelect ? 'singleSelect' : ''}`}\n          ref={this.searchWrapper} style={style['searchBox']}\n          onClick={singleSelect ? this.toggelOptionList : () => {}}\n        >\n          {!hideSelectedList && this.renderSelectedList()}\n          <input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tref={this.searchBox}\n            className={`searchBox ${singleSelect && selectedValues.length ? 'display-none' : ''}`}\n            id={`${id || 'search'}_input`}\n\t          name={`${name || 'search_name'}_input`}\n            onChange={this.onChange}\n            onKeyPress={this.onKeyPress}\n            value={inputValue}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            placeholder={((singleSelect && selectedValues.length) || (hidePlaceholder && selectedValues.length)) ? '' : placeholder}\n            onKeyDown={this.onArrowKeyNavigation}\n            style={style['inputField']}\n            autoComplete=\"off\"\n            disabled={singleSelect || disable}\n          />\n          {(singleSelect || showArrow) && (\n            <>\n              {customArrow ? <span className=\"icon_down_dir\">{customArrow}</span> : <img src={DownArrow} className={`icon_cancel icon_down_dir`} />}\n            </>\n          )}\n        </div>\n        <div\n          className={`optionListContainer ${\n            toggleOptionsList ? 'displayBlock' : 'displayNone'\n          }`}\n          onMouseDown={(e) => {\n            e.preventDefault();\n          }}\n        >\n          {this.renderOptionList()}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <OutsideAlerter outsideClick={this.onCloseOptionList}>\n        {this.renderMultiselectContainer()}\n      </OutsideAlerter>\n    );\n  }\n}\n\nMultiselect.defaultProps = {\n  options: [],\n  disablePreSelectedValues: false,\n  selectedValues: [],\n  isObject: true,\n  displayValue: \"model\",\n  showCheckbox: false,\n  selectionLimit: -1,\n  placeholder: \"Select\",\n\tgroupBy: \"\",\n\tstyle: {},\n\temptyRecordMsg: \"No Options Available\",\n\tonSelect: () => {},\n  onRemove: () => {},\n  onKeyPressFn: () => {},\n  closeIcon: 'circle2',\n  singleSelect: false,\n  caseSensitiveSearch: false,\n  id: '',\n  name: '',\n  closeOnSelect: true,\n  avoidHighlightFirstOption: false,\n  hidePlaceholder: false,\n  showArrow: false,\n  keepSearchTerm: false,\n  customCloseIcon: '',\n  className: '',\n  customArrow: undefined,\n  selectedValueDecorator: v => v,\n  optionValueDecorator: v => v\n} as IMultiselectProps;\n"],"sourceRoot":""}