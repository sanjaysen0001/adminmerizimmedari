{"version":3,"sources":["views/apps/zimmedari/users/UserList.js"],"names":["UserList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","id","firstName","dob","gender","mobileNo","email","mailVerifyStatus","createdAt","split","subcriptionStatus","planId","planType","noOfNominee","noOfAssetsType","noOfTotalAssets","noOfConfidentialNote","userList","axiosConfig","get","then","response","console","log","User","setState","catch","err","swal","onGridReady","gridApi","api","gridColumnApi","columnApi","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","this","buttons","cancel","text","value","delete","planTypeList","Fragment","col-sm-6","tag","length","size","right","onClick","placeholder","onChange","e","target","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/293.1be9a3ed.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Card,\r\n  Input,\r\n  Button,\r\n  CardBody,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n} from \"reactstrap\";\r\n// import { Route } from \"react-router-dom\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { ChevronDown } from \"react-feather\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport swal from \"sweetalert\";\r\n// import ReactHtmlParser from \"react-html-parser\";\r\nclass UserList extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n      },\r\n      // {\r\n      //   headerName: \"Actions\",\r\n      //   field: \"sortorder\",\r\n      //   width: 200,\r\n      //   // pinned: window.innerWidth > 992 ? \"right\" : false,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"actions cursor-pointer\">\r\n      //         <Route\r\n      //           render={({ history }) => (\r\n      //             <Edit\r\n      //               className=\"mr-50\"\r\n      //               size=\"25px\"\r\n      //               color=\"blue\"\r\n      //               onClick={() =>\r\n      //                 history.push({\r\n      //                   pathname: `/app/plan/EditPlanType/${params.data._id}`,\r\n      //                   state: params.data,\r\n      //                 })\r\n      //               }\r\n      //             />\r\n      //           )}\r\n      //         />\r\n\r\n      //         <Trash2\r\n      //           className=\"mr-50\"\r\n      //           size=\"25px\"\r\n      //           color=\"red\"\r\n      //           onClick={() => {\r\n      //             this.runthisfunction(params.data._id);\r\n      //           }}\r\n      //         />\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n\r\n      {\r\n        headerName: \"User ID\",\r\n        field: \"id\",\r\n        filter: true,\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.id}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"User Name\",\r\n        field: \"firstName\",\r\n        filter: true,\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.firstName}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Date of Birth\",\r\n        field: \"dob\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.dob}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Gender\",\r\n        field: \"gender\",\r\n        filter: true,\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.gender}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Phone Number\",\r\n        field: \"mobileNo\",\r\n        filter: true,\r\n        width: 190,\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.mobileNo}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Email ID\",\r\n        field: \"email\",\r\n        filter: true,\r\n        width: 240,\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.email}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Email Status\",\r\n        field: \"mailVerifyStatus\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.mailVerifyStatus}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Registration Date\",\r\n        field: \"registeration\",\r\n        filter: true,\r\n        width: 190,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"\">{params?.data?.createdAt.split(\"T\")[0]}</div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Subscription Status\",\r\n        field: \"Subscription\",\r\n        filter: true,\r\n        width: 230,\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.subcriptionStatus}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Subscription Plan\",\r\n        field: \"Plan\",\r\n        filter: true,\r\n        width: 190,\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.planId?.planType}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"No.Of Nominee Added\",\r\n        field: \"noOfNominee\",\r\n        filter: true,\r\n        width: 230,\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.noOfNominee}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"No.Of Asset Type Added\",\r\n        field: \"noOfAssetsType\",\r\n        filter: true,\r\n        width: 230,\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.noOfAssetsType}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"No. Of Total Asset Added\",\r\n        field: \"noOfTotalAssets\",\r\n        filter: true,\r\n        width: 230,\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.noOfTotalAssets}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"No.Of Confidential Note Added\",\r\n        field: \"noOfConfidentialNote\",\r\n        filter: true,\r\n        width: 250,\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.noOfConfidentialNote}</div>;\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  componentDidMount() {\r\n    this.userList();\r\n  }\r\n  userList = () => {\r\n    axiosConfig\r\n      .get(\"/user-list\")\r\n      .then((response) => {\r\n        console.log(response.data.User);\r\n        const rowData = response.data.User;\r\n        this.setState({ rowData });\r\n      })\r\n      .catch((err) => {\r\n        swal(\"Something Went Wrong\");\r\n      });\r\n  };\r\n\r\n  runthisfunction(id) {\r\n    console.log(id);\r\n    swal(\r\n      `Do You Want To Delete Permanently`,\r\n      \"This item will be deleted immediately\",\r\n\r\n      {\r\n        buttons: {\r\n          cancel: \"Cancel\",\r\n          catch: { text: \"Delete \", value: \"catch\" },\r\n        },\r\n      }\r\n    ).then((value) => {\r\n      switch (value) {\r\n        case \"cancel\":\r\n          break;\r\n        case \"catch\":\r\n          axiosConfig.delete(`/admin/dlt_plantyp/${id}`).then((response) => {\r\n            this.planTypeList();\r\n          });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Card className=\"overflow-hidden agGrid-card\">\r\n          <Row className=\"m-1\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                User List\r\n              </h1>\r\n            </Col>\r\n            <Col className=\"\">\r\n              {/* <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn  float-right\"\r\n                    color=\"primary\"\r\n                    onClick={() => history.push(\"/app/AddAssets\")}\r\n                  >\r\n                    Add Assets\r\n                  </Button>\r\n                )}\r\n              /> */}\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody className=\"py-0\">\r\n            {this.state.rowData === null ? null : (\r\n              <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                  <div className=\"mb-1\">\r\n                    <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                      <DropdownToggle tag=\"div\">\r\n                        {this.gridApi\r\n                          ? this.state.currenPageSize\r\n                          : \"\" * this.state.getPageSize -\r\n                            (this.state.getPageSize - 1)}{\" \"}\r\n                        -{\" \"}\r\n                        {this.state.rowData.length -\r\n                          this.state.currenPageSize * this.state.getPageSize >\r\n                        0\r\n                          ? this.state.currenPageSize * this.state.getPageSize\r\n                          : this.state.rowData.length}{\" \"}\r\n                        of {this.state.rowData.length}\r\n                        <ChevronDown className=\"ml-50\" size={15} />\r\n                      </DropdownToggle>\r\n                      <DropdownMenu right>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(20)}\r\n                        >\r\n                          20\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(50)}\r\n                        >\r\n                          50\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(100)}\r\n                        >\r\n                          100\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(134)}\r\n                        >\r\n                          134\r\n                        </DropdownItem>\r\n                      </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                  </div>\r\n                  <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                    <div className=\"table-input mr-1\">\r\n                      <Input\r\n                        placeholder=\"search...\"\r\n                        onChange={(e) => this.updateSearchQuery(e.target.value)}\r\n                        value={this.state.value}\r\n                      />\r\n                    </div>\r\n                    <div className=\"export-btn\">\r\n                      <Button.Ripple\r\n                        color=\"primary\"\r\n                        onClick={() => this.gridApi.exportDataAsCsv()}\r\n                      >\r\n                        Export as CSV\r\n                      </Button.Ripple>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <ContextLayout.Consumer>\r\n                  {(context) => (\r\n                    <AgGridReact\r\n                      gridOptions={{}}\r\n                      rowSelection=\"multiple\"\r\n                      defaultColDef={defaultColDef}\r\n                      columnDefs={columnDefs}\r\n                      rowData={rowData}\r\n                      onGridReady={this.onGridReady}\r\n                      colResizeDefault={\"shift\"}\r\n                      animateRows={true}\r\n                      floatingFilter={false}\r\n                      pagination={true}\r\n                      paginationPageSize={this.state.paginationPageSize}\r\n                      pivotPanelShow=\"always\"\r\n                      enableRtl={context.state.direction === \"rtl\"}\r\n                    />\r\n                  )}\r\n                </ContextLayout.Consumer>\r\n              </div>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default UserList;\r\n"],"sourceRoot":""}