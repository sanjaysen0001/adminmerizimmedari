{"version":3,"sources":["views/apps/pageSetUp/termscondition/AddTermsCondition.js"],"names":["AddTermsCondition","props","onEditorStateChange","editorState","console","log","state","desc","setState","draftToHtml","convertToRaw","getCurrentContent","submitHandler","e","preventDefault","axiosConfig","post","then","response","history","push","swal","catch","error","EditorState","createEmpty","className","col-sm-6","render","onClick","onSubmit","this","toolbarClassName","wrapperClassName","editorClassName","toolbar","options","inline","bold","italic","underline","strikethrough","code","blockType","fontSize","fontFamily","color","React","Component"],"mappings":"mXAwBMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAORC,oBAAsB,SAACC,GACrBC,QAAQC,IAAI,EAAKC,MAAMC,MAEvB,EAAKC,SAAS,CACZL,cACAI,KAAME,IAAYC,uBAAaP,EAAYQ,yBAb5B,EAiBnBC,cAAgB,SAACC,GACfA,EAAEC,iBACFC,IACGC,KAAK,uBAAwB,EAAKV,OAClCW,MAAK,SAACC,GACLd,QAAQC,IAAIa,GACZ,EAAKjB,MAAMkB,QAAQC,KACjB,mDAGFC,IAAK,YAAa,0BAA2B,cAE9CC,OAAM,SAACC,GACNnB,QAAQC,IAAIkB,OA5BhB,EAAKjB,MAAQ,CACXC,KAAM,GACNJ,YAAaqB,cAAYC,eAJV,E,0CAiCnB,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,UAAU,OACb,kBAAC,IAAD,KACE,wBAAIC,YAAA,EAASD,UAAU,cAAvB,+BAIF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEE,OAAQ,gBAAGT,EAAH,EAAGA,QAAH,OACN,kBAAC,IAAD,CACEO,UAAU,8BACVG,QAAS,kBACPV,EAAQC,KACN,qDAJN,aAcR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMU,SAAUC,KAAKnB,eACnB,kBAAC,SAAD,CACEoB,iBAAiB,wBACjBC,iBAAiB,eACjBC,gBAAgB,cAChB/B,YAAa4B,KAAKzB,MAAMH,YACxBD,oBAAqB6B,KAAK7B,oBAC1BiC,QAAS,CACPC,QAAS,CAAC,SAAU,YAAa,WAAY,cAC7CC,OAAQ,CACND,QAAS,CACP,OACA,SACA,YACA,gBACA,aAEFE,KAAM,CAAEZ,UAAW,6BACnBa,OAAQ,CAAEb,UAAW,6BACrBc,UAAW,CAAEd,UAAW,6BACxBe,cAAe,CAAEf,UAAW,6BAC5BgB,KAAM,CAAEhB,UAAW,8BAErBiB,UAAW,CACTjB,UAAW,6BAEbkB,SAAU,CACRlB,UAAW,6BAEbmB,WAAY,CACVnB,UAAW,gCAIjB,6BACA,kBAAC,IAAD,CAAQoB,MAAM,WAAd,sB,GAhGoBC,IAAMC,WAuGvBhD","file":"static/js/239.7669c508.chunk.js","sourcesContent":["// desc\r\n// import React from \"react\";\r\n// import { Card, CardBody, Col, Row, Form, Button } from \"reactstrap\";\r\n// import \"react-toastify/dist/ReactToastify.css\";\r\n// import { EditorState, convertToRaw } from \"draft-js\";\r\n// import { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\n// import \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\n// import \"../../../assets/scss/plugins/extensions/editor.scss\";\r\n// import axiosConfig from \"../../../axiosConfig\";\r\n// import { history } from \"../../../history\";\r\n// import swal from 'sweetalert';\r\nimport React from \"react\";\r\nimport { Card, CardBody, Col, Row, Form, Button } from \"reactstrap\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../../../../assets/scss/plugins/extensions/editor.scss\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { history } from \"../../../../history\";\r\nimport swal from \"sweetalert\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nclass AddTermsCondition extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      desc: \"\",\r\n      editorState: EditorState.createEmpty(),\r\n    };\r\n  }\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    console.log(this.state.desc);\r\n\r\n    this.setState({\r\n      editorState,\r\n      desc: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n      // desc: draftToHtml(this.state.desc),\r\n    });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    axiosConfig\r\n      .post(\"/admin/add_term_cond\", this.state)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.props.history.push(\r\n          \"/app/pageSetUp/termscondition/TermConditionList\"\r\n        );\r\n        // alert(\"Privacy Policy Added Successfully !\");\r\n        swal(\"Good job!\", \"You clicked the button!\", \"success\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <Row className=\"m-2\">\r\n          <Col>\r\n            <h1 col-sm-6 className=\"float-left\">\r\n              Add New Term And Condition\r\n            </h1>\r\n          </Col>\r\n          <Col>\r\n            <Route\r\n              render={({ history }) => (\r\n                <Button\r\n                  className=\" btn btn-danger float-right\"\r\n                  onClick={() =>\r\n                    history.push(\r\n                      \"/app/pageSetUp/termscondition/TermConditionList\"\r\n                    )\r\n                  }\r\n                >\r\n                  Back\r\n                </Button>\r\n              )}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <CardBody>\r\n          <Form onSubmit={this.submitHandler}>\r\n            <Editor\r\n              toolbarClassName=\"demo-toolbar-absolute\"\r\n              wrapperClassName=\"demo-wrapper\"\r\n              editorClassName=\"demo-editor\"\r\n              editorState={this.state.editorState}\r\n              onEditorStateChange={this.onEditorStateChange}\r\n              toolbar={{\r\n                options: [\"inline\", \"blockType\", \"fontSize\", \"fontFamily\"],\r\n                inline: {\r\n                  options: [\r\n                    \"bold\",\r\n                    \"italic\",\r\n                    \"underline\",\r\n                    \"strikethrough\",\r\n                    \"monospace\",\r\n                  ],\r\n                  bold: { className: \"bordered-option-classname\" },\r\n                  italic: { className: \"bordered-option-classname\" },\r\n                  underline: { className: \"bordered-option-classname\" },\r\n                  strikethrough: { className: \"bordered-option-classname\" },\r\n                  code: { className: \"bordered-option-classname\" },\r\n                },\r\n                blockType: {\r\n                  className: \"bordered-option-classname\",\r\n                },\r\n                fontSize: {\r\n                  className: \"bordered-option-classname\",\r\n                },\r\n                fontFamily: {\r\n                  className: \"bordered-option-classname\",\r\n                },\r\n              }}\r\n            />\r\n            <br />\r\n            <Button color=\"primary\">Add New T&C</Button>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default AddTermsCondition;\r\n\r\n// import React from \"react\";\r\n// import { Card, CardBody, Col, Row, Form, Button } from \"reactstrap\";\r\n// import \"react-toastify/dist/ReactToastify.css\";\r\n// import { EditorState, convertToRaw } from \"draft-js\";\r\n// import { Editor } from \"react-draft-wysiwyg\";\r\n// import \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\n// import \"../../../../assets/scss/plugins/extensions/editor.scss\";\r\n// import axiosConfig from \"../../../../axiosConfig\";\r\n// import { history } from \"../../../../history\";\r\n// import swal from \"sweetalert\";\r\n\r\n// class AddTermsCondition extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       desc: \"\",\r\n//       editorState: EditorState.createEmpty(),\r\n//     };\r\n//   }\r\n\r\n//   onEditorStateChange = (editorState) => {\r\n//     this.setState({\r\n//       editorState,\r\n//       desc: convertToRaw(editorState.getCurrentContent()),\r\n//     });\r\n//   };\r\n\r\n//   submitHandler = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const data = new FormData();\r\n//     data.append(\"desc\", this.state.desc);\r\n\r\n//     axiosConfig\r\n//       .post(\"/add_term_cond\", this.state)\r\n//       .then((response) => {\r\n//         console.log(response);\r\n//         this.props.history.push(\"/app/termscondition/TermConditionList\");\r\n//         // alert(\"Privacy Policy Added Successfully !\");\r\n//         swal(\"Good job!\", \"You clicked the button!\", \"success\");\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(error);\r\n//       });\r\n\r\n//     // this.state.editorState.getCurrentContent().getPlainText();\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <Card>\r\n//         <Row className=\"m-2\">\r\n//           <Col>\r\n//             <h1 col-sm-6 className=\"float-left\">\r\n//               Add Term And Condition\r\n//             </h1>\r\n//           </Col>\r\n//           <Col>\r\n//             <Button\r\n//               className=\" btn btn-danger float-right\"\r\n//               onClick={() =>\r\n//                 history.push(\"/app/pageSetUp/termscondition/TermConditionList\")\r\n//               }\r\n//             >\r\n//               Back\r\n//             </Button>\r\n//           </Col>\r\n//         </Row>\r\n//         <CardBody>\r\n//           <Form onSubmit={this.submitHandler}>\r\n//             {/* <Editor\r\n//   editorState={this.state.editorState}\r\n//   toolbarClassName=\"toolbarClassName\"\r\n//   wrapperClassName=\"wrapperClassName\"\r\n//   editorClassName=\"editorClassName\"\r\n//   onEditorStateChange={this.onEditorStateChange}\r\n// />; */}\r\n\r\n//             <Editor\r\n//               toolbarClassName=\"demo-toolbar-absolute\"\r\n//               wrapperClassName=\"demo-wrapper\"\r\n//               editorClassName=\"demo-editor\"\r\n//               editorState={this.state.editorState}\r\n//               onEditorStateChange={this.onEditorStateChange}\r\n//               toolbar={{\r\n//                 options: [\"inline\", \"blockType\", \"fontSize\", \"fontFamily\"],\r\n//                 inline: {\r\n//                   options: [\r\n//                     \"bold\",\r\n//                     \"italic\",\r\n//                     \"underline\",\r\n//                     \"strikethrough\",\r\n//                     \"monospace\",\r\n//                   ],\r\n//                   bold: { className: \"bordered-option-classname\" },\r\n//                   italic: { className: \"bordered-option-classname\" },\r\n//                   underline: { className: \"bordered-option-classname\" },\r\n//                   strikethrough: { className: \"bordered-option-classname\" },\r\n//                   code: { className: \"bordered-option-classname\" },\r\n//                 },\r\n//                 blockType: {\r\n//                   className: \"bordered-option-classname\",\r\n//                 },\r\n//                 fontSize: {\r\n//                   className: \"bordered-option-classname\",\r\n//                 },\r\n//                 fontFamily: {\r\n//                   className: \"bordered-option-classname\",\r\n//                 },\r\n//               }}\r\n//             />\r\n//             <br />\r\n//             <Button color=\"primary\"> Submit</Button>\r\n//           </Form>\r\n//         </CardBody>\r\n//       </Card>\r\n//     );\r\n//   }\r\n// }\r\n// export default AddTermsCondition;\r\n"],"sourceRoot":""}