{"version":3,"sources":["views/apps/membership/EditMembership.js"],"names":["EditMembership","props","changeHandler1","e","console","log","target","value","setState","status","changeHandler","name","submitHandler","preventDefault","id","match","params","axiosConfig","post","state","then","response","data","swal","catch","error","gender","dob","pack_name","expdate","firstnameU","mobileU","emailU","lastnameU","dobU","genderU","pack_nameM","membership","startDate","this","get","getdetail","userid","firstname","mobile","email","start_date","breadCrumbTitle","breadCrumbParent","breadCrumbActive","className","col-sm-6","render","history","onClick","push","onSubmit","lg","md","sm","onChange","style","marginRight","type","Ripple","color","Component"],"mappings":"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","file":"static/js/191.a10eda12.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Label,\r\n  FormGroup,\r\n  Input,\r\n  CustomInput,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport swal from \"sweetalert\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\n\r\nimport { Route } from \"react-router-dom\";\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\n\r\nexport default class EditMembership extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      gender: \"\",\r\n      dob: \"\",\r\n      pack_name: \"\",\r\n      expdate: \"\",\r\n      status: \"\",\r\n      firstnameU: [],\r\n      mobileU: [],\r\n      emailU: \"\",\r\n      lastnameU: [],\r\n      dobU: [],\r\n      genderU: \"\",\r\n      pack_nameM: [],\r\n      membership: \"\",\r\n      startDate: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .get(`/admin/viewonemembership/${id}`)\r\n      .then((response) => {\r\n        console.log(\"OneMember\", response.data);\r\n        this.setState({ getdetail: response.data.getdetail });\r\n        this.setState({\r\n          firstnameU: response.data.getdetail.userid.firstname,\r\n          mobileU: response.data.getdetail.userid.mobile,\r\n          emailU: response.data.getdetail.userid.email,\r\n          lastnameU: response.data.data,\r\n          dobU: response.data.data,\r\n          gender: response.data.getdetail.userid.gender,\r\n          expdate: response.data.getdetail.userid.expdate,\r\n          dob: response.data.getdetail.userid.dob,\r\n          startDate: response.data.getdetail.userid.start_date,\r\n          membership: response.data.getdetail.userid.pack_name,\r\n          status: response.data.getdetail.userid.status,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  changeHandler1 = (e) => {\r\n    console.log(e.target.value);\r\n    this.setState({ status: e.target.value });\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .post(`/admin/updatemembership/${id}`, this.state)\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        // this.props.history.push(`/app/membership/MembershipList`);\r\n      })\r\n\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\" Edit Membership\"\r\n          breadCrumbParent=\"Membership\"\r\n          breadCrumbActive=\" Edit Membership\"\r\n        />\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Edit Membership\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/membership/MembershipList\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row>\r\n                {/* <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>User Name</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"firstnameU\"\r\n                    placeholder=\"User Name\"\r\n                    value={this.state.firstnameU}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Mobile</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    placeholder=\"Mobile\"\r\n                    name=\"mobileU\"\r\n                    value={this.state.mobileU}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Email Id</Label>\r\n                  <Input\r\n                    type=\"email\"\r\n                    name=\"emailU\"\r\n                    placeholder=\"Email\"\r\n                    value={this.state.emailU}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Gender</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"gender\"\r\n                    value={this.state.gender}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>Male</option>\r\n                    <option>Female</option>\r\n                    <option>Other</option>\r\n                  </Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Date Of Birth</Label>\r\n                  <Input\r\n                    type=\"dd/mm/yyyy\"\r\n                    name=\"dob\"\r\n                    value={this.state.dob}\r\n                    placeholder=\"dd/mm/yyyy\"\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Membership Plan</Label>\r\n                  <CustomInput\r\n                    type=\"select\"\r\n                    name=\"membership\"\r\n                    value={this.state.membership}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    {this.state.pack_nameM?.map((planmemship) => (\r\n                      <option value={planmemship?._id} key={planmemship?._id}>\r\n                        {planmemship?.pack_name}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Start Date</Label>\r\n                  <Input\r\n                    // type=\"date\"\r\n                    type=\"dd/mm/yyyy\"\r\n                    name=\"startDate\"\r\n                    placeholder=\"dd/mm/yyyy\"\r\n                    value={this.state.startDate}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Expiry Date</Label>\r\n                  <Input\r\n                    // type=\"date\"\r\n                    type=\"dd/mm/yyyy\"\r\n                    name=\"expdate\"\r\n                    placeholder=\"dd/mm/yyyy\"\r\n                    value={this.state.expdate}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col> */}\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2 mt-1\">\r\n                    <Label className=\"mb-1\">Status</Label>\r\n                    <div\r\n                      className=\"form-label-group\"\r\n                      onChange={(e) => this.changeHandler1(e)}\r\n                    >\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"status\"\r\n                        value=\"Active\"\r\n                        // checked=\"checked\"\r\n                      />\r\n                      <span style={{ marginRight: \"20px\" }}>Active</span>\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"status\"\r\n                        value=\"Deactive\"\r\n                      />\r\n\r\n                      <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n                    </div>\r\n                  </Col>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                  >\r\n                    Update\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}