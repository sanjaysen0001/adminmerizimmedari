{"version":3,"sources":["views/apps/pageSetUp/about/EditAboutUs.js","../node_modules/draftjs-to-html/lib/draftjs-to-html.js"],"names":["EditAboutUs","props","onEditorStateChange","editorState","setState","desc","draftToHtml","convertToRaw","getCurrentContent","changeHandler","e","target","name","value","submitHandler","preventDefault","id","match","params","axiosConfig","post","state","then","response","console","log","swal","history","push","catch","error","dealer","EditorState","createEmpty","this","get","data","description","contentState","ContentState","createFromBlockArray","convertFromHTML","createWithContent","sm","listTag","href","tag","active","className","col-sm-6","render","onClick","onSubmit","lg","md","toolbarClassName","wrapperClassName","editorClassName","defaultContentState","ReactHtmlParser","toolbar","options","inline","bold","italic","underline","strikethrough","code","blockType","fontSize","fontFamily","style","marginLeft","Ripple","color","type","Component","module","exports","forEach","obj","callback","key","hasOwnProperty","call","blockTypesMapping","unstyled","blockquote","getBlockTag","getBlockStyle","styles","concat","getStylesAtOffset","inlineStyles","offset","COLOR","BGCOLOR","FONTSIZE","FONTFAMILY","UNDERLINE","ITALIC","BOLD","STRIKETHROUGH","CODE","SUBSCRIPT","SUPERSCRIPT","sameStyleAsPrevious","index","sameStyled","length","getEntityMarkup","entityMap","entityKey","text","customEntityTransform","entity","html","url","targetOption","alignment","src","alt","height","width","getInlineStyleSections","block","start","end","styleSections","Array","from","section","inlineStyleRanges","range","i","indexOf","substring","getStyleArrayForBlock","getInlineStyleSectionMarkup","styleSection","styleTagSections","styleSectionText","stylePropertySection","content","map","ch","join","getSectionText","addInlineStyleMarkup","getStyleTagSectionMarkup","styleString","test","addStylePropertyMarkup","getBlockInnerMarkup","hashtagConfig","blockMarkup","sections","lastOffset","sectionRanges","entityRanges","blockText","counter","startIndex","trigger","separator","substr","endIndex","hashtag","getHashtagRanges","sort","s1","s2","r","getSections","sectionText","entityInlineMarkup","undefined","getSectionMarkup","replacedText","replace","trimLeadingZeros","trimTrailingZeros","getListMarkup","listBlocks","directional","previousBlock","listHtml","nestedListBlock","nestedBlock","depth","blockStyle","editorContent","blocks","blockHtml","str","trim","isAtomicEntityBlock","blockTag","getBlockMarkup","factory"],"mappings":"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","file":"static/js/133.1c63c60d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n} from \"reactstrap\";\r\n// import swal from \"sweetalert\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { Route } from \"react-router-dom\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../../../../assets/scss/plugins/extensions/editor.scss\";\r\nimport swal from \"sweetalert\";\r\n\r\nimport {\r\n  ContentState,\r\n  EditorState,\r\n  convertFromHTML,\r\n  convertToRaw,\r\n} from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nexport default class EditAboutUs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dealer: \"\",\r\n      desc: \"\",\r\n      editorState: EditorState.createEmpty(),\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .get(`/admin/getone_aboutus/${id}`)\r\n      .then((response) => {\r\n        console.log(response.data.data.desc);\r\n        const description = response.data.data.desc;\r\n        const contentState = ContentState.createFromBlockArray(\r\n          convertFromHTML(description)\r\n        );\r\n        // Create EditorState with ContentState\r\n        const editorState = EditorState.createWithContent(contentState);\r\n        this.setState({\r\n          desc: description,\r\n          editorState: editorState,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n      desc: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n    });\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .post(`/admin/edit_aboutus/${id}`, this.state)\r\n      .then((response) => {\r\n        console.log(response);\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        this.props.history.push(`/app/pageSetUp/about/AllaboutUs`);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <div>\r\n              <Breadcrumb listTag=\"div\">\r\n                <BreadcrumbItem href=\"/\" tag=\"a\">\r\n                  Home\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem active>Edit About Us</BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Edit AboutUs\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/pageSetUp/about/AllaboutUs\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                <Label>Descripition</Label>\r\n                <Editor\r\n                  toolbarClassName=\"demo-toolbar-absolute\"\r\n                  wrapperClassName=\"demo-wrapper\"\r\n                  editorClassName=\"demo-editor\"\r\n                  editorState={this.state.editorState}\r\n                  onEditorStateChange={this.onEditorStateChange}\r\n                  defaultContentState={ReactHtmlParser(this.state.desc)}\r\n                  toolbar={{\r\n                    options: [\"inline\", \"blockType\", \"fontSize\", \"fontFamily\"],\r\n                    inline: {\r\n                      options: [\r\n                        \"bold\",\r\n                        \"italic\",\r\n                        \"underline\",\r\n                        \"strikethrough\",\r\n                        \"monospace\",\r\n                      ],\r\n                      bold: { className: \"bordered-option-classname\" },\r\n                      italic: { className: \"bordered-option-classname\" },\r\n                      underline: { className: \"bordered-option-classname\" },\r\n                      strikethrough: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                      code: { className: \"bordered-option-classname\" },\r\n                    },\r\n                    blockType: {\r\n                      className: \"bordered-option-classname\",\r\n                    },\r\n                    fontSize: {\r\n                      className: \"bordered-option-classname\",\r\n                    },\r\n                    fontFamily: {\r\n                      className: \"bordered-option-classname\",\r\n                    },\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Row>\r\n                <Col\r\n                  lg=\"6\"\r\n                  md=\"6\"\r\n                  sm=\"6\"\r\n                  className=\"mb-2\"\r\n                  style={{ marginLeft: \"15px\" }}\r\n                >\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                  >\r\n                    Update AboutUs\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// import React, { Component } from \"react\";\r\n// import { Editor } from \"react-draft-wysiwyg\";\r\n// import {\r\n//   EditorState,\r\n//   convertFromHTML,\r\n//   ContentState,\r\n//   convertToRaw,\r\n// } from \"draft-js\";\r\n// import \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\n// import draftToHtml from \"draftjs-to-html\";\r\n// import axiosConfig from \"../../../../axiosConfig\";\r\n// import swal from \"sweetalert\";\r\n\r\n// class EditAboutUs extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.state = {\r\n//       editorState: EditorState.createEmpty(),\r\n//     };\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     let { id } = this.props.match.params;\r\n//     axiosConfig\r\n//       .get(`/admin/getone_aboutus/${id}`)\r\n//       .then((response) => {\r\n//         const contentBlocks = convertFromHTML(response.data.data.desc);\r\n//         if (contentBlocks.contentBlocks !== null) {\r\n//           const contentState = ContentState.createFromBlockArray(\r\n//             contentBlocks.contentBlocks\r\n//           );\r\n//           const editorState = EditorState.createWithContent(contentState);\r\n//           this.setState({\r\n//             editorState,\r\n//           });\r\n//         }\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(error.response);\r\n//       });\r\n//   }\r\n\r\n//   onEditorStateChange = (editorState) => {\r\n//     this.setState({ editorState });\r\n//   };\r\n\r\n//   submitHandler = (e) => {\r\n//     e.preventDefault();\r\n//     let { id } = this.props.match.params;\r\n//     const desc = draftToHtml(\r\n//       convertToRaw(this.state.editorState.getCurrentContent())\r\n//     );\r\n//     axiosConfig\r\n//       .post(`/admin/edit_aboutus/${id}`, { desc })\r\n//       .then((response) => {\r\n//         console.log(response);\r\n//         swal(\"Success!\", \"Submitted Successfully!\", \"success\");\r\n//         this.props.history.push(`/app/pageSetUp/about/AllaboutUs`);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(error.response);\r\n//       });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         {/* Your existing code remains the same */}\r\n//         <Editor\r\n//           editorState={this.state.editorState}\r\n//           onEditorStateChange={this.onEditorStateChange}\r\n//         />\r\n//         {/* Your remaining form and button elements */}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default EditAboutUs;\r\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.draftjsToHtml = factory());\n}(this, (function () { 'use strict';\n\n  /**\n  * Utility function to execute callback for eack key->value pair.\n  */\n  function forEach(obj, callback) {\n    if (obj) {\n      for (var key in obj) {\n        // eslint-disable-line no-restricted-syntax\n        if ({}.hasOwnProperty.call(obj, key)) {\n          callback(key, obj[key]);\n        }\n      }\n    }\n  }\n  /**\n  * The function returns true if the string passed to it has no content.\n  */\n\n  function isEmptyString(str) {\n    if (str === undefined || str === null || str.length === 0 || str.trim().length === 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n  * Mapping block-type to corresponding html tag.\n  */\n\n  var blockTypesMapping = {\n    unstyled: 'p',\n    'header-one': 'h1',\n    'header-two': 'h2',\n    'header-three': 'h3',\n    'header-four': 'h4',\n    'header-five': 'h5',\n    'header-six': 'h6',\n    'unordered-list-item': 'ul',\n    'ordered-list-item': 'ol',\n    blockquote: 'blockquote',\n    code: 'pre'\n  };\n  /**\n  * Function will return HTML tag for a block.\n  */\n\n  function getBlockTag(type) {\n    return type && blockTypesMapping[type];\n  }\n  /**\n  * Function will return style string for a block.\n  */\n\n  function getBlockStyle(data) {\n    var styles = '';\n    forEach(data, function (key, value) {\n      if (value) {\n        styles += \"\".concat(key, \":\").concat(value, \";\");\n      }\n    });\n    return styles;\n  }\n  /**\n  * The function returns an array of hashtag-sections in blocks.\n  * These will be areas in block which have hashtags applicable to them.\n  */\n\n  function getHashtagRanges(blockText, hashtagConfig) {\n    var sections = [];\n\n    if (hashtagConfig) {\n      var counter = 0;\n      var startIndex = 0;\n      var text = blockText;\n      var trigger = hashtagConfig.trigger || '#';\n      var separator = hashtagConfig.separator || ' ';\n\n      for (; text.length > 0 && startIndex >= 0;) {\n        if (text[0] === trigger) {\n          startIndex = 0;\n          counter = 0;\n          text = text.substr(trigger.length);\n        } else {\n          startIndex = text.indexOf(separator + trigger);\n\n          if (startIndex >= 0) {\n            text = text.substr(startIndex + (separator + trigger).length);\n            counter += startIndex + separator.length;\n          }\n        }\n\n        if (startIndex >= 0) {\n          var endIndex = text.indexOf(separator) >= 0 ? text.indexOf(separator) : text.length;\n          var hashtag = text.substr(0, endIndex);\n\n          if (hashtag && hashtag.length > 0) {\n            sections.push({\n              offset: counter,\n              length: hashtag.length + trigger.length,\n              type: 'HASHTAG'\n            });\n          }\n\n          counter += trigger.length;\n        }\n      }\n    }\n\n    return sections;\n  }\n  /**\n  * The function returns an array of entity-sections in blocks.\n  * These will be areas in block which have same entity or no entity applicable to them.\n  */\n\n\n  function getSections(block, hashtagConfig) {\n    var sections = [];\n    var lastOffset = 0;\n    var sectionRanges = block.entityRanges.map(function (range) {\n      var offset = range.offset,\n          length = range.length,\n          key = range.key;\n      return {\n        offset: offset,\n        length: length,\n        key: key,\n        type: 'ENTITY'\n      };\n    });\n    sectionRanges = sectionRanges.concat(getHashtagRanges(block.text, hashtagConfig));\n    sectionRanges = sectionRanges.sort(function (s1, s2) {\n      return s1.offset - s2.offset;\n    });\n    sectionRanges.forEach(function (r) {\n      if (r.offset > lastOffset) {\n        sections.push({\n          start: lastOffset,\n          end: r.offset\n        });\n      }\n\n      sections.push({\n        start: r.offset,\n        end: r.offset + r.length,\n        entityKey: r.key,\n        type: r.type\n      });\n      lastOffset = r.offset + r.length;\n    });\n\n    if (lastOffset < block.text.length) {\n      sections.push({\n        start: lastOffset,\n        end: block.text.length\n      });\n    }\n\n    return sections;\n  }\n  /**\n  * Function to check if the block is an atomic entity block.\n  */\n\n\n  function isAtomicEntityBlock(block) {\n    if (block.entityRanges.length > 0 && (isEmptyString(block.text) || block.type === 'atomic')) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n  * The function will return array of inline styles applicable to the block.\n  */\n\n\n  function getStyleArrayForBlock(block) {\n    var text = block.text,\n        inlineStyleRanges = block.inlineStyleRanges;\n    var inlineStyles = {\n      BOLD: new Array(text.length),\n      ITALIC: new Array(text.length),\n      UNDERLINE: new Array(text.length),\n      STRIKETHROUGH: new Array(text.length),\n      CODE: new Array(text.length),\n      SUPERSCRIPT: new Array(text.length),\n      SUBSCRIPT: new Array(text.length),\n      COLOR: new Array(text.length),\n      BGCOLOR: new Array(text.length),\n      FONTSIZE: new Array(text.length),\n      FONTFAMILY: new Array(text.length),\n      length: text.length\n    };\n\n    if (inlineStyleRanges && inlineStyleRanges.length > 0) {\n      inlineStyleRanges.forEach(function (range) {\n        var offset = range.offset;\n        var length = offset + range.length;\n\n        for (var i = offset; i < length; i += 1) {\n          if (range.style.indexOf('color-') === 0) {\n            inlineStyles.COLOR[i] = range.style.substring(6);\n          } else if (range.style.indexOf('bgcolor-') === 0) {\n            inlineStyles.BGCOLOR[i] = range.style.substring(8);\n          } else if (range.style.indexOf('fontsize-') === 0) {\n            inlineStyles.FONTSIZE[i] = range.style.substring(9);\n          } else if (range.style.indexOf('fontfamily-') === 0) {\n            inlineStyles.FONTFAMILY[i] = range.style.substring(11);\n          } else if (inlineStyles[range.style]) {\n            inlineStyles[range.style][i] = true;\n          }\n        }\n      });\n    }\n\n    return inlineStyles;\n  }\n  /**\n  * The function will return inline style applicable at some offset within a block.\n  */\n\n\n  function getStylesAtOffset(inlineStyles, offset) {\n    var styles = {};\n\n    if (inlineStyles.COLOR[offset]) {\n      styles.COLOR = inlineStyles.COLOR[offset];\n    }\n\n    if (inlineStyles.BGCOLOR[offset]) {\n      styles.BGCOLOR = inlineStyles.BGCOLOR[offset];\n    }\n\n    if (inlineStyles.FONTSIZE[offset]) {\n      styles.FONTSIZE = inlineStyles.FONTSIZE[offset];\n    }\n\n    if (inlineStyles.FONTFAMILY[offset]) {\n      styles.FONTFAMILY = inlineStyles.FONTFAMILY[offset];\n    }\n\n    if (inlineStyles.UNDERLINE[offset]) {\n      styles.UNDERLINE = true;\n    }\n\n    if (inlineStyles.ITALIC[offset]) {\n      styles.ITALIC = true;\n    }\n\n    if (inlineStyles.BOLD[offset]) {\n      styles.BOLD = true;\n    }\n\n    if (inlineStyles.STRIKETHROUGH[offset]) {\n      styles.STRIKETHROUGH = true;\n    }\n\n    if (inlineStyles.CODE[offset]) {\n      styles.CODE = true;\n    }\n\n    if (inlineStyles.SUBSCRIPT[offset]) {\n      styles.SUBSCRIPT = true;\n    }\n\n    if (inlineStyles.SUPERSCRIPT[offset]) {\n      styles.SUPERSCRIPT = true;\n    }\n\n    return styles;\n  }\n  /**\n  * Function returns true for a set of styles if the value of these styles at an offset\n  * are same as that on the previous offset.\n  */\n\n  function sameStyleAsPrevious(inlineStyles, styles, index) {\n    var sameStyled = true;\n\n    if (index > 0 && index < inlineStyles.length) {\n      styles.forEach(function (style) {\n        sameStyled = sameStyled && inlineStyles[style][index] === inlineStyles[style][index - 1];\n      });\n    } else {\n      sameStyled = false;\n    }\n\n    return sameStyled;\n  }\n  /**\n  * Function returns html for text depending on inline style tags applicable to it.\n  */\n\n  function addInlineStyleMarkup(style, content) {\n    if (style === 'BOLD') {\n      return \"<strong>\".concat(content, \"</strong>\");\n    }\n\n    if (style === 'ITALIC') {\n      return \"<em>\".concat(content, \"</em>\");\n    }\n\n    if (style === 'UNDERLINE') {\n      return \"<ins>\".concat(content, \"</ins>\");\n    }\n\n    if (style === 'STRIKETHROUGH') {\n      return \"<del>\".concat(content, \"</del>\");\n    }\n\n    if (style === 'CODE') {\n      return \"<code>\".concat(content, \"</code>\");\n    }\n\n    if (style === 'SUPERSCRIPT') {\n      return \"<sup>\".concat(content, \"</sup>\");\n    }\n\n    if (style === 'SUBSCRIPT') {\n      return \"<sub>\".concat(content, \"</sub>\");\n    }\n\n    return content;\n  }\n  /**\n  * The function returns text for given section of block after doing required character replacements.\n  */\n\n  function getSectionText(text) {\n    if (text && text.length > 0) {\n      var chars = text.map(function (ch) {\n        switch (ch) {\n          case '\\n':\n            return '<br>';\n\n          case '&':\n            return '&amp;';\n\n          case '<':\n            return '&lt;';\n\n          case '>':\n            return '&gt;';\n\n          default:\n            return ch;\n        }\n      });\n      return chars.join('');\n    }\n\n    return '';\n  }\n  /**\n  * Function returns html for text depending on inline style tags applicable to it.\n  */\n\n\n  function addStylePropertyMarkup(styles, text) {\n    if (styles && (styles.COLOR || styles.BGCOLOR || styles.FONTSIZE || styles.FONTFAMILY)) {\n      var styleString = 'style=\"';\n\n      if (styles.COLOR) {\n        styleString += \"color: \".concat(styles.COLOR, \";\");\n      }\n\n      if (styles.BGCOLOR) {\n        styleString += \"background-color: \".concat(styles.BGCOLOR, \";\");\n      }\n\n      if (styles.FONTSIZE) {\n        styleString += \"font-size: \".concat(styles.FONTSIZE).concat(/^\\d+$/.test(styles.FONTSIZE) ? 'px' : '', \";\");\n      }\n\n      if (styles.FONTFAMILY) {\n        styleString += \"font-family: \".concat(styles.FONTFAMILY, \";\");\n      }\n\n      styleString += '\"';\n      return \"<span \".concat(styleString, \">\").concat(text, \"</span>\");\n    }\n\n    return text;\n  }\n  /**\n  * Function will return markup for Entity.\n  */\n\n  function getEntityMarkup(entityMap, entityKey, text, customEntityTransform) {\n    var entity = entityMap[entityKey];\n\n    if (typeof customEntityTransform === 'function') {\n      var html = customEntityTransform(entity, text);\n\n      if (html) {\n        return html;\n      }\n    }\n\n    if (entity.type === 'MENTION') {\n      return \"<a href=\\\"\".concat(entity.data.url, \"\\\" class=\\\"wysiwyg-mention\\\" data-mention data-value=\\\"\").concat(entity.data.value, \"\\\">\").concat(text, \"</a>\");\n    }\n\n    if (entity.type === 'LINK') {\n      var targetOption = entity.data.targetOption || '_self';\n      return \"<a href=\\\"\".concat(entity.data.url, \"\\\" target=\\\"\").concat(targetOption, \"\\\">\").concat(text, \"</a>\");\n    }\n\n    if (entity.type === 'IMAGE') {\n      var alignment = entity.data.alignment;\n\n      if (alignment && alignment.length) {\n        return \"<div style=\\\"text-align:\".concat(alignment, \";\\\"><img src=\\\"\").concat(entity.data.src, \"\\\" alt=\\\"\").concat(entity.data.alt, \"\\\" style=\\\"height: \").concat(entity.data.height, \";width: \").concat(entity.data.width, \"\\\"/></div>\");\n      }\n\n      return \"<img src=\\\"\".concat(entity.data.src, \"\\\" alt=\\\"\").concat(entity.data.alt, \"\\\" style=\\\"height: \").concat(entity.data.height, \";width: \").concat(entity.data.width, \"\\\"/>\");\n    }\n\n    if (entity.type === 'EMBEDDED_LINK') {\n      return \"<iframe width=\\\"\".concat(entity.data.width, \"\\\" height=\\\"\").concat(entity.data.height, \"\\\" src=\\\"\").concat(entity.data.src, \"\\\" frameBorder=\\\"0\\\"></iframe>\");\n    }\n\n    return text;\n  }\n  /**\n  * For a given section in a block the function will return a further list of sections,\n  * with similar inline styles applicable to them.\n  */\n\n\n  function getInlineStyleSections(block, styles, start, end) {\n    var styleSections = [];\n    var text = Array.from(block.text);\n\n    if (text.length > 0) {\n      var inlineStyles = getStyleArrayForBlock(block);\n      var section;\n\n      for (var i = start; i < end; i += 1) {\n        if (i !== start && sameStyleAsPrevious(inlineStyles, styles, i)) {\n          section.text.push(text[i]);\n          section.end = i + 1;\n        } else {\n          section = {\n            styles: getStylesAtOffset(inlineStyles, i),\n            text: [text[i]],\n            start: i,\n            end: i + 1\n          };\n          styleSections.push(section);\n        }\n      }\n    }\n\n    return styleSections;\n  }\n  /**\n  * Replace leading blank spaces by &nbsp;\n  */\n\n\n  function trimLeadingZeros(sectionText) {\n    if (sectionText) {\n      var replacedText = sectionText;\n\n      for (var i = 0; i < replacedText.length; i += 1) {\n        if (sectionText[i] === ' ') {\n          replacedText = replacedText.replace(' ', '&nbsp;');\n        } else {\n          break;\n        }\n      }\n\n      return replacedText;\n    }\n\n    return sectionText;\n  }\n  /**\n  * Replace trailing blank spaces by &nbsp;\n  */\n\n  function trimTrailingZeros(sectionText) {\n    if (sectionText) {\n      var replacedText = sectionText;\n\n      for (var i = replacedText.length - 1; i >= 0; i -= 1) {\n        if (replacedText[i] === ' ') {\n          replacedText = \"\".concat(replacedText.substring(0, i), \"&nbsp;\").concat(replacedText.substring(i + 1));\n        } else {\n          break;\n        }\n      }\n\n      return replacedText;\n    }\n\n    return sectionText;\n  }\n  /**\n  * The method returns markup for section to which inline styles\n  * like BOLD, ITALIC, UNDERLINE, STRIKETHROUGH, CODE, SUPERSCRIPT, SUBSCRIPT are applicable.\n  */\n\n  function getStyleTagSectionMarkup(styleSection) {\n    var styles = styleSection.styles,\n        text = styleSection.text;\n    var content = getSectionText(text);\n    forEach(styles, function (style, value) {\n      content = addInlineStyleMarkup(style, content);\n    });\n    return content;\n  }\n  /**\n  * The method returns markup for section to which inline styles\n  like color, background-color, font-size are applicable.\n  */\n\n\n  function getInlineStyleSectionMarkup(block, styleSection) {\n    var styleTagSections = getInlineStyleSections(block, ['BOLD', 'ITALIC', 'UNDERLINE', 'STRIKETHROUGH', 'CODE', 'SUPERSCRIPT', 'SUBSCRIPT'], styleSection.start, styleSection.end);\n    var styleSectionText = '';\n    styleTagSections.forEach(function (stylePropertySection) {\n      styleSectionText += getStyleTagSectionMarkup(stylePropertySection);\n    });\n    styleSectionText = addStylePropertyMarkup(styleSection.styles, styleSectionText);\n    return styleSectionText;\n  }\n  /*\n  * The method returns markup for an entity section.\n  * An entity section is a continuous section in a block\n  * to which same entity or no entity is applicable.\n  */\n\n\n  function getSectionMarkup(block, entityMap, section, customEntityTransform) {\n    var entityInlineMarkup = [];\n    var inlineStyleSections = getInlineStyleSections(block, ['COLOR', 'BGCOLOR', 'FONTSIZE', 'FONTFAMILY'], section.start, section.end);\n    inlineStyleSections.forEach(function (styleSection) {\n      entityInlineMarkup.push(getInlineStyleSectionMarkup(block, styleSection));\n    });\n    var sectionText = entityInlineMarkup.join('');\n\n    if (section.type === 'ENTITY') {\n      if (section.entityKey !== undefined && section.entityKey !== null) {\n        sectionText = getEntityMarkup(entityMap, section.entityKey, sectionText, customEntityTransform); // eslint-disable-line max-len\n      }\n    } else if (section.type === 'HASHTAG') {\n      sectionText = \"<a href=\\\"\".concat(sectionText, \"\\\" class=\\\"wysiwyg-hashtag\\\">\").concat(sectionText, \"</a>\");\n    }\n\n    return sectionText;\n  }\n  /**\n  * Function will return the markup for block preserving the inline styles and\n  * special characters like newlines or blank spaces.\n  */\n\n\n  function getBlockInnerMarkup(block, entityMap, hashtagConfig, customEntityTransform) {\n    var blockMarkup = [];\n    var sections = getSections(block, hashtagConfig);\n    sections.forEach(function (section, index) {\n      var sectionText = getSectionMarkup(block, entityMap, section, customEntityTransform);\n\n      if (index === 0) {\n        sectionText = trimLeadingZeros(sectionText);\n      }\n\n      if (index === sections.length - 1) {\n        sectionText = trimTrailingZeros(sectionText);\n      }\n\n      blockMarkup.push(sectionText);\n    });\n    return blockMarkup.join('');\n  }\n  /**\n  * Function will return html for the block.\n  */\n\n  function getBlockMarkup(block, entityMap, hashtagConfig, directional, customEntityTransform) {\n    var blockHtml = [];\n\n    if (isAtomicEntityBlock(block)) {\n      blockHtml.push(getEntityMarkup(entityMap, block.entityRanges[0].key, undefined, customEntityTransform));\n    } else {\n      var blockTag = getBlockTag(block.type);\n\n      if (blockTag) {\n        blockHtml.push(\"<\".concat(blockTag));\n        var blockStyle = getBlockStyle(block.data);\n\n        if (blockStyle) {\n          blockHtml.push(\" style=\\\"\".concat(blockStyle, \"\\\"\"));\n        }\n\n        if (directional) {\n          blockHtml.push(' dir = \"auto\"');\n        }\n\n        blockHtml.push('>');\n        blockHtml.push(getBlockInnerMarkup(block, entityMap, hashtagConfig, customEntityTransform));\n        blockHtml.push(\"</\".concat(blockTag, \">\"));\n      }\n    }\n\n    blockHtml.push('\\n');\n    return blockHtml.join('');\n  }\n\n  /**\n  * Function to check if a block is of type list.\n  */\n\n  function isList(blockType) {\n    return blockType === 'unordered-list-item' || blockType === 'ordered-list-item';\n  }\n  /**\n  * Function will return html markup for a list block.\n  */\n\n  function getListMarkup(listBlocks, entityMap, hashtagConfig, directional, customEntityTransform) {\n    var listHtml = [];\n    var nestedListBlock = [];\n    var previousBlock;\n    listBlocks.forEach(function (block) {\n      var nestedBlock = false;\n\n      if (!previousBlock) {\n        listHtml.push(\"<\".concat(getBlockTag(block.type), \">\\n\"));\n      } else if (previousBlock.type !== block.type) {\n        listHtml.push(\"</\".concat(getBlockTag(previousBlock.type), \">\\n\"));\n        listHtml.push(\"<\".concat(getBlockTag(block.type), \">\\n\"));\n      } else if (previousBlock.depth === block.depth) {\n        if (nestedListBlock && nestedListBlock.length > 0) {\n          listHtml.push(getListMarkup(nestedListBlock, entityMap, hashtagConfig, directional, customEntityTransform));\n          nestedListBlock = [];\n        }\n      } else {\n        nestedBlock = true;\n        nestedListBlock.push(block);\n      }\n\n      if (!nestedBlock) {\n        listHtml.push('<li');\n        var blockStyle = getBlockStyle(block.data);\n\n        if (blockStyle) {\n          listHtml.push(\" style=\\\"\".concat(blockStyle, \"\\\"\"));\n        }\n\n        if (directional) {\n          listHtml.push(' dir = \"auto\"');\n        }\n\n        listHtml.push('>');\n        listHtml.push(getBlockInnerMarkup(block, entityMap, hashtagConfig, customEntityTransform));\n        listHtml.push('</li>\\n');\n        previousBlock = block;\n      }\n    });\n\n    if (nestedListBlock && nestedListBlock.length > 0) {\n      listHtml.push(getListMarkup(nestedListBlock, entityMap, hashtagConfig, directional, customEntityTransform));\n    }\n\n    listHtml.push(\"</\".concat(getBlockTag(previousBlock.type), \">\\n\"));\n    return listHtml.join('');\n  }\n\n  /**\n  * The function will generate html markup for given draftjs editorContent.\n  */\n\n  function draftToHtml(editorContent, hashtagConfig, directional, customEntityTransform) {\n    var html = [];\n\n    if (editorContent) {\n      var blocks = editorContent.blocks,\n          entityMap = editorContent.entityMap;\n\n      if (blocks && blocks.length > 0) {\n        var listBlocks = [];\n        blocks.forEach(function (block) {\n          if (isList(block.type)) {\n            listBlocks.push(block);\n          } else {\n            if (listBlocks.length > 0) {\n              var listHtml = getListMarkup(listBlocks, entityMap, hashtagConfig, customEntityTransform); // eslint-disable-line max-len\n\n              html.push(listHtml);\n              listBlocks = [];\n            }\n\n            var blockHtml = getBlockMarkup(block, entityMap, hashtagConfig, directional, customEntityTransform);\n            html.push(blockHtml);\n          }\n        });\n\n        if (listBlocks.length > 0) {\n          var listHtml = getListMarkup(listBlocks, entityMap, hashtagConfig, directional, customEntityTransform); // eslint-disable-line max-len\n\n          html.push(listHtml);\n          listBlocks = [];\n        }\n      }\n    }\n\n    return html.join('');\n  }\n\n  return draftToHtml;\n\n})));\n"],"sourceRoot":""}