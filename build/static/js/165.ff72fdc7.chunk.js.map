{"version":3,"sources":["views/apps/PlanDetails/PlanDetailList.js"],"names":["PlanDetailList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","render","history","size","color","onClick","push","pathname","data","_id","runthisfunction","planname","planName","title","upload_pdf","plan_max","plan_deductible","coverageAmt","start_date","end_date","total","email","coverage_area","dob","ReactHtmlParser","short_desc","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axiosConfig","get","then","response","console","log","id","swal","buttons","cancel","catch","text","value","delete","getOptionDataList","this","sm","tag","length","right","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/165.ff72fdc7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Edit, Trash2, ChevronDown } from \"react-feather\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nclass PlanDetailList extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n      },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Edit\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"blue\"\r\n                    onClick={() =>\r\n                      history.push({\r\n                        pathname: `/app/plans/EditPlanDetail/${params.data._id}`,\r\n                        state: params.data,\r\n                      })\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n              <Trash2\r\n                size={25}\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  this.runthisfunction(params.data._id);\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Plan Name\",\r\n        field: \"planname\",\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params?.data?.planname?.planName}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Title\",\r\n        field: \"Title\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data?.title}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Upload Image\",\r\n        field: \"Image\",\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data?.upload_pdf}</span>\r\n              {/* <img src={params.data.upload_pdf} alt=\"\" /> */}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Plan Max\",\r\n        field: \"Max\",\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data?.plan_max}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Plan Deductible\",\r\n        field: \"Deductible\",\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data?.plan_deductible}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"CoverageAmt\",\r\n        field: \"coverageAmt\",\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data?.coverageAmt}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"StartDate\",\r\n        field: \"start_date\",\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data?.start_date}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"EndDate\",\r\n        field: \"end_date\",\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data?.end_date}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Total\",\r\n        field: \"total\",\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data?.total}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Email\",\r\n        field: \"email\",\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data?.email}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"coverage_area\",\r\n        field: \"Coverage Area\",\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data?.coverage_area}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"DOB\",\r\n        field: \"dob\",\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data?.dob}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Description\",\r\n        field: \"description\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{ReactHtmlParser(params.data.short_desc)}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  componentDidMount() {\r\n    axiosConfig.get(`/user/bmiPlanList`).then((response) => {\r\n      console.log(response.data);\r\n      const rowData = response.data;\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n\r\n  runthisfunction(id) {\r\n    swal(\r\n      `Do You Want To Delete Permanently`,\r\n      \"This item will be deleted immediately\",\r\n      {\r\n        buttons: {\r\n          cancel: \"Cancel\",\r\n          catch: { text: \"Delete \", value: \"catch\" },\r\n        },\r\n      }\r\n    ).then((value) => {\r\n      switch (value) {\r\n        case \"cancel\":\r\n          break;\r\n        case \"catch\":\r\n          axiosConfig.delete(`/admin/dlt_infPlan/${id}`).then((response) => {\r\n            this.getOptionDataList();\r\n          });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\"></Col>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Col sm=\"12\"></Col>\r\n            <Row className=\"m-2\">\r\n              <Col>\r\n                <h1 sm=\"6\" className=\"float-left\">\r\n                  PlanDetail List\r\n                </h1>\r\n              </Col>\r\n              <Col className=\"\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      className=\" btn btn-success float-right\"\r\n                      onClick={() => history.push(\"/app/plans/AddPlanDetail\")}\r\n                    >\r\n                      AddPlanDetail\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <CardBody>\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}\r\n                          -\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}\r\n                          >\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"search...\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <ContextLayout.Consumer>\r\n                    {(context) => (\r\n                      <AgGridReact\r\n                        gridOptions={{}}\r\n                        rowSelection=\"multiple\"\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={columnDefs}\r\n                        rowData={rowData}\r\n                        onGridReady={this.onGridReady}\r\n                        colResizeDefault={\"shift\"}\r\n                        animateRows={true}\r\n                        floatingFilter={false}\r\n                        pagination={true}\r\n                        paginationPageSize={this.state.paginationPageSize}\r\n                        pivotPanelShow=\"always\"\r\n                        enableRtl={context.state.direction === \"rtl\"}\r\n                      />\r\n                    )}\r\n                  </ContextLayout.Consumer>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default PlanDetailList;\r\n"],"sourceRoot":""}